{"ast":null,"code":"import { openBlock, createElementBlock, normalizeStyle, renderSlot } from 'vue';\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"aside\", {\n    class: \"el-aside\",\n    style: normalizeStyle(_ctx.style)\n  }, [renderSlot(_ctx.$slots, \"default\")], 4);\n}\nexport { render };","map":{"version":3,"names":["createElementBlock","class","style","normalizeStyle","_ctx","renderSlot","$slots"],"sources":["../../../../../../packages/components/container/src/aside.vue?vue&type=template&id=47e12f0a&lang.js"],"sourcesContent":["<template>\n  <aside class=\"el-aside\" :style=\"style\">\n    <slot></slot>\n  </aside>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElAside',\n  props: {\n    width: {\n      type: String,\n      default: null,\n    },\n  },\n  setup(props) {\n    return {\n      style: computed(() => {\n        return props.width\n          ? ({ '--el-aside-width': props.width } as CSSProperties)\n          : {}\n      }),\n    }\n  },\n})\n</script>\n"],"mappings":";;sBACEA,kBAAA;IAAOC,KAAA,EAAM;IAAYC,KAAA,EAAAC,cAAA,CAAOC,IAAA,CAAAF,KAAA;MAC9BG,UAAA,CAAAD,IAAA,CAAAE,MAAA,a","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}