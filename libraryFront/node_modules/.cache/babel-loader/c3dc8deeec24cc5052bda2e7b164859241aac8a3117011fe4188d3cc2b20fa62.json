{"ast":null,"code":"import { ref, inject, computed } from 'vue';\nimport { buildProps } from '../../../utils/props.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../utils/constants.mjs';\nimport { isNumber, isBool } from '../../../utils/util.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { useSizeProp, useSize, useDisabled } from '../../../hooks/use-common-props/index.mjs';\nimport { isString } from '@vue/shared';\nimport { radioGroupKey } from '../../../tokens/radio.mjs';\nconst radioPropsBase = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  label: {\n    type: [String, Number, Boolean],\n    default: \"\"\n  }\n});\nconst radioProps = buildProps({\n  ...radioPropsBase,\n  modelValue: {\n    type: [String, Number, Boolean],\n    default: \"\"\n  },\n  name: {\n    type: String,\n    default: \"\"\n  },\n  border: Boolean\n});\nconst radioEmits = {\n  [UPDATE_MODEL_EVENT]: val => isString(val) || isNumber(val) || isBool(val),\n  change: val => isString(val) || isNumber(val) || isBool(val)\n};\nconst useRadio = (props, emit) => {\n  const radioRef = ref();\n  const radioGroup = inject(radioGroupKey, void 0);\n  const isGroup = computed(() => !!radioGroup);\n  const modelValue = computed({\n    get() {\n      return isGroup.value ? radioGroup.modelValue : props.modelValue;\n    },\n    set(val) {\n      if (isGroup.value) {\n        radioGroup.changeEvent(val);\n      } else {\n        emit(UPDATE_MODEL_EVENT, val);\n      }\n      radioRef.value.checked = props.modelValue === props.label;\n    }\n  });\n  const size = useSize(computed(() => radioGroup == null ? void 0 : radioGroup.size));\n  const disabled = useDisabled(computed(() => radioGroup == null ? void 0 : radioGroup.disabled));\n  const focus = ref(false);\n  const tabIndex = computed(() => {\n    return disabled.value || isGroup.value && modelValue.value !== props.label ? -1 : 0;\n  });\n  return {\n    radioRef,\n    isGroup,\n    radioGroup,\n    focus,\n    size,\n    disabled,\n    tabIndex,\n    modelValue\n  };\n};\nexport { radioEmits, radioProps, radioPropsBase, useRadio };","map":{"version":3,"names":["radioPropsBase","buildProps","size","useSizeProp","disabled","Boolean","label","type","String","Number","default","radioProps","modelValue","name","border","radioEmits","UPDATE_MODEL_EVENT","val","isString","isNumber","isBool","change","useRadio","props","emit","radioRef","ref","radioGroup","inject","radioGroupKey","isGroup","computed","get","value","set","changeEvent","checked","useSize","useDisabled","focus","tabIndex"],"sources":["../../../../../../packages/components/radio/src/radio.ts"],"sourcesContent":["import { ref, computed, inject } from 'vue'\nimport { buildProps } from '@element-plus/utils/props'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/utils/constants'\nimport { isBool, isString, isNumber } from '@element-plus/utils/util'\nimport { radioGroupKey } from '@element-plus/tokens'\nimport { useDisabled, useSize, useSizeProp } from '@element-plus/hooks'\nimport type { ExtractPropTypes, SetupContext } from 'vue'\n\nexport const radioPropsBase = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  label: {\n    type: [String, Number, Boolean],\n    default: '',\n  },\n})\nexport const radioProps = buildProps({\n  ...radioPropsBase,\n  modelValue: {\n    type: [String, Number, Boolean],\n    default: '',\n  },\n  name: {\n    type: String,\n    default: '',\n  },\n  border: Boolean,\n} as const)\nexport type RadioProps = ExtractPropTypes<typeof radioProps>\n\nexport const radioEmits = {\n  [UPDATE_MODEL_EVENT]: (val: string | number | boolean) =>\n    isString(val) || isNumber(val) || isBool(val),\n  change: (val: string | number | boolean) =>\n    isString(val) || isNumber(val) || isBool(val),\n}\nexport type RadioEmits = typeof radioEmits\n\nexport const useRadio = (\n  props: { label: RadioProps['label']; modelValue?: RadioProps['modelValue'] },\n  emit: SetupContext<RadioEmits>['emit']\n) => {\n  const radioRef = ref<HTMLInputElement>()\n  const radioGroup = inject(radioGroupKey, undefined)\n  const isGroup = computed(() => !!radioGroup)\n  const modelValue = computed<RadioProps['modelValue']>({\n    get() {\n      return isGroup.value ? radioGroup!.modelValue : props.modelValue!\n    },\n    set(val) {\n      if (isGroup.value) {\n        radioGroup!.changeEvent(val)\n      } else {\n        emit(UPDATE_MODEL_EVENT, val)\n      }\n      radioRef.value!.checked = props.modelValue === props.label\n    },\n  })\n\n  const size = useSize(computed(() => radioGroup?.size))\n  const disabled = useDisabled(computed(() => radioGroup?.disabled))\n  const focus = ref(false)\n  const tabIndex = computed(() => {\n    return disabled.value || (isGroup.value && modelValue.value !== props.label)\n      ? -1\n      : 0\n  })\n\n  return {\n    radioRef,\n    isGroup,\n    radioGroup,\n    focus,\n    size,\n    disabled,\n    tabIndex,\n    modelValue,\n  }\n}\n"],"mappings":";;;;;;;;;MAQaA,cAAA,GAAiBC,UAAA,CAAW;EACvCC,IAAA,EAAMC,WAAA;EACNC,QAAA,EAAUC,OAAA;EACVC,KAAA,EAAO;IACLC,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAA,EAAQJ,OAAA;IACvBK,OAAA,EAAS;EAAA;AAAA;MAGAC,UAAA,GAAaV,UAAA,CAAW;EAAA,GAChCD,cAAA;EACHY,UAAA,EAAY;IACVL,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAA,EAAQJ,OAAA;IACvBK,OAAA,EAAS;EAAA;EAEXG,IAAA,EAAM;IACJN,IAAA,EAAMC,MAAA;IACNE,OAAA,EAAS;EAAA;EAEXI,MAAA,EAAQT;AAAA;MAIGU,UAAA,GAAa;EAAA,CACvBC,kBAAA,GAAsBC,GAAA,IACrBC,QAAA,CAASD,GAAA,KAAQE,QAAA,CAASF,GAAA,KAAQG,MAAA,CAAOH,GAAA;EAC3CI,MAAA,EAASJ,GAAA,IACPC,QAAA,CAASD,GAAA,KAAQE,QAAA,CAASF,GAAA,KAAQG,MAAA,CAAOH,GAAA;AAAA;MAIhCK,QAAA,GAAWA,CACtBC,KAAA,EACAC,IAAA,KACG;EACH,MAAMC,QAAA,GAAWC,GAAA;EACjB,MAAMC,UAAA,GAAaC,MAAA,CAAOC,aAAA,EAAe;EACzC,MAAMC,OAAA,GAAUC,QAAA,CAAS,MAAM,CAAC,CAACJ,UAAA;EACjC,MAAMf,UAAA,GAAamB,QAAA,CAAmC;IACpDC,IAAA,EAAM;MACJ,OAAOF,OAAA,CAAQG,KAAA,GAAQN,UAAA,CAAYf,UAAA,GAAaW,KAAA,CAAMX,UAAA;IAAA;IAExDsB,IAAIjB,GAAA,EAAK;MACP,IAAIa,OAAA,CAAQG,KAAA,EAAO;QACjBN,UAAA,CAAYQ,WAAA,CAAYlB,GAAA;MAAA,OACnB;QACLO,IAAA,CAAKR,kBAAA,EAAoBC,GAAA;MAAA;MAE3BQ,QAAA,CAASQ,KAAA,CAAOG,OAAA,GAAUb,KAAA,CAAMX,UAAA,KAAeW,KAAA,CAAMjB,KAAA;IAAA;EAAA;EAIzD,MAAMJ,IAAA,GAAOmC,OAAA,CAAQN,QAAA,CAAS,MAAMJ,UAAA,oBAAAA,UAAA,CAAYzB,IAAA;EAChD,MAAME,QAAA,GAAWkC,WAAA,CAAYP,QAAA,CAAS,MAAMJ,UAAA,oBAAAA,UAAA,CAAYvB,QAAA;EACxD,MAAMmC,KAAA,GAAQb,GAAA,CAAI;EAClB,MAAMc,QAAA,GAAWT,QAAA,CAAS,MAAM;IAC9B,OAAO3B,QAAA,CAAS6B,KAAA,IAAUH,OAAA,CAAQG,KAAA,IAASrB,UAAA,CAAWqB,KAAA,KAAUV,KAAA,CAAMjB,KAAA,GAClE,KACA;EAAA;EAGN,OAAO;IACLmB,QAAA;IACAK,OAAA;IACAH,UAAA;IACAY,KAAA;IACArC,IAAA;IACAE,QAAA;IACAoC,QAAA;IACA5B;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}