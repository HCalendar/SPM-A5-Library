{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, renderSlot } from 'vue';\nconst _hoisted_1 = [\"src\", \"alt\", \"srcset\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  return openBlock(), createElementBlock(\"span\", {\n    class: normalizeClass(_ctx.avatarClass),\n    style: normalizeStyle(_ctx.sizeStyle)\n  }, [(_ctx.src || _ctx.srcSet) && !_ctx.hasLoadError ? (openBlock(), createElementBlock(\"img\", {\n    key: 0,\n    src: _ctx.src,\n    alt: _ctx.alt,\n    srcset: _ctx.srcSet,\n    style: normalizeStyle(_ctx.fitStyle),\n    onError: _cache[0] || (_cache[0] = (...args) => _ctx.handleError && _ctx.handleError(...args))\n  }, null, 44, _hoisted_1)) : _ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 1\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))]),\n    _: 1\n  })) : renderSlot(_ctx.$slots, \"default\", {\n    key: 2\n  })], 6);\n}\nexport { render };","map":{"version":3,"names":["createElementBlock","class","normalizeClass","_ctx","avatarClass","style","normalizeStyle","sizeStyle","src","srcSet","hasLoadError","openBlock","alt","srcset","fitStyle","onError","_cache","args","handleError","icon","createBlock","_component_el_icon","key","resolveDynamicComponent","renderSlot","$slots"],"sources":["../../../../../../packages/components/avatar/src/avatar.vue?vue&type=template&id=46e3f365&lang.js"],"sourcesContent":["<template>\n  <span :class=\"avatarClass\" :style=\"sizeStyle\">\n    <img\n      v-if=\"(src || srcSet) && !hasLoadError\"\n      :src=\"src\"\n      :alt=\"alt\"\n      :srcset=\"srcSet\"\n      :style=\"fitStyle\"\n      @error=\"handleError\"\n    />\n    <el-icon v-else-if=\"icon\"><component :is=\"icon\" /></el-icon>\n    <slot v-else></slot>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, watch } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { avatarEmits, avatarProps } from './avatar'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElAvatar',\n  components: {\n    ElIcon,\n  },\n  props: avatarProps,\n  emits: avatarEmits,\n\n  setup(props, { emit }) {\n    const hasLoadError = ref(false)\n\n    const avatarClass = computed(() => {\n      const { size, icon, shape } = props\n      const classList = ['el-avatar']\n      if (size && typeof size === 'string') classList.push(`el-avatar--${size}`)\n      if (icon) classList.push('el-avatar--icon')\n      if (shape) classList.push(`el-avatar--${shape}`)\n      return classList\n    })\n\n    const sizeStyle = computed<CSSProperties>(() => {\n      const { size } = props\n      return typeof size === 'number'\n        ? {\n            height: `${size}px`,\n            width: `${size}px`,\n            lineHeight: `${size}px`,\n          }\n        : {}\n    })\n\n    const fitStyle = computed<CSSProperties>(() => ({\n      objectFit: props.fit,\n    }))\n\n    // need reset hasLoadError to false if src changed\n    watch(\n      () => props.src,\n      () => (hasLoadError.value = false)\n    )\n\n    function handleError(e: Event) {\n      hasLoadError.value = true\n      emit('error', e)\n    }\n\n    return {\n      hasLoadError,\n      avatarClass,\n      sizeStyle,\n      fitStyle,\n      handleError,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;sBACEA,kBAAA;IAAOC,KAAA,EAAAC,cAAA,CAAOC,IAAA,CAAAC,WAAA;IAAcC,KAAA,EAAAC,cAAA,CAAOH,IAAA,CAAAI,SAAA;MAExB,CAAAJ,IAAA,CAAAK,GAAA,IAAOL,IAAA,CAAAM,MAAA,MAAYN,IAAA,CAAAO,YAAA,IAAAC,SAAA,IAD5BX,kBAAA;;IAEGQ,GAAA,EAAKL,IAAA,CAAAK,GAAA;IACLI,GAAA,EAAKT,IAAA,CAAAS,GAAA;IACLC,MAAA,EAAQV,IAAA,CAAAM,MAAA;IACRJ,KAAA,EAAAC,cAAA,CAAOH,IAAA,CAAAW,QAAA;IACPC,OAAA,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAOd,IAAA,CAAAe,WAAA,IAAAf,IAAA,CAAAe,WAAA,IAAAD,IAAA;8BAEUd,IAAA,CAAAgB,IAAA,IAAAR,SAAA,IAApBS,WAAA,CAAAC,kBAAA;IAAAC,GAAA;EAAA;qBAA0B,Q,aAAAF,WAAA,CAAwBG,uBAAA,CAARpB,IAAA,CAAAgB,IAAA,I;;QAC1CK,UAAA,CAAArB,IAAA,CAAAsB,MAAA;IAAAH,GAAA;EAAA,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}