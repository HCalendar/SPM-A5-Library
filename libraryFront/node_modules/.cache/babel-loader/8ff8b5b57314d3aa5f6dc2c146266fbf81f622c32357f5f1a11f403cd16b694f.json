{"ast":null,"code":"import { defineComponent, ref, computed } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { TypeComponents, TypeComponentsMap } from '../../../utils/icon.mjs';\nimport { alertProps, alertEmits } from './alert.mjs';\nvar script = defineComponent({\n  name: \"ElAlert\",\n  components: {\n    ElIcon,\n    ...TypeComponents\n  },\n  props: alertProps,\n  emits: alertEmits,\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const visible = ref(true);\n    const typeClass = computed(() => `el-alert--${props.type}`);\n    const iconComponent = computed(() => TypeComponentsMap[props.type] || TypeComponentsMap[\"info\"]);\n    const isBigIcon = computed(() => props.description || slots.default ? \"is-big\" : \"\");\n    const isBoldTitle = computed(() => props.description || slots.default ? \"is-bold\" : \"\");\n    const close = evt => {\n      visible.value = false;\n      emit(\"close\", evt);\n    };\n    return {\n      visible,\n      typeClass,\n      iconComponent,\n      isBigIcon,\n      isBoldTitle,\n      close\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","components","ElIcon","TypeComponents","props","alertProps","emits","alertEmits","setup","emit","slots","visible","ref","typeClass","computed","type","iconComponent","TypeComponentsMap","isBigIcon","description","default","isBoldTitle","close","evt","value"],"sources":["../../../../../../packages/components/alert/src/alert.vue"],"sourcesContent":["<template>\n  <transition name=\"el-alert-fade\">\n    <div\n      v-show=\"visible\"\n      class=\"el-alert\"\n      :class=\"[typeClass, center ? 'is-center' : '', 'is-' + effect]\"\n      role=\"alert\"\n    >\n      <el-icon\n        v-if=\"showIcon && iconComponent\"\n        class=\"el-alert__icon\"\n        :class=\"isBigIcon\"\n      >\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <div class=\"el-alert__content\">\n        <span\n          v-if=\"title || $slots.title\"\n          class=\"el-alert__title\"\n          :class=\"[isBoldTitle]\"\n        >\n          <slot name=\"title\">{{ title }}</slot>\n        </span>\n        <p v-if=\"$slots.default || description\" class=\"el-alert__description\">\n          <slot>\n            {{ description }}\n          </slot>\n        </p>\n        <template v-if=\"closable\">\n          <div\n            v-if=\"closeText\"\n            class=\"el-alert__closebtn is-customed\"\n            @click=\"close\"\n          >\n            {{ closeText }}\n          </div>\n          <el-icon v-else class=\"el-alert__closebtn\" @click=\"close\">\n            <close />\n          </el-icon>\n        </template>\n      </div>\n    </div>\n  </transition>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { TypeComponents, TypeComponentsMap } from '@element-plus/utils/icon'\nimport { alertProps, alertEmits } from './alert'\n\nexport default defineComponent({\n  name: 'ElAlert',\n\n  components: {\n    ElIcon,\n    ...TypeComponents,\n  },\n\n  props: alertProps,\n  emits: alertEmits,\n\n  setup(props, { emit, slots }) {\n    // state\n    const visible = ref(true)\n\n    // computed\n    const typeClass = computed(() => `el-alert--${props.type}`)\n    const iconComponent = computed(\n      () => TypeComponentsMap[props.type] || TypeComponentsMap['info']\n    )\n    const isBigIcon = computed(() =>\n      props.description || slots.default ? 'is-big' : ''\n    )\n    const isBoldTitle = computed(() =>\n      props.description || slots.default ? 'is-bold' : ''\n    )\n\n    // methods\n    const close = (evt: MouseEvent) => {\n      visible.value = false\n      emit('close', evt)\n    }\n\n    return {\n      visible,\n      typeClass,\n      iconComponent,\n      isBigIcon,\n      isBoldTitle,\n      close,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;AAkDA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EAENC,UAAA,EAAY;IACVC,MAAA;IAAA,GACGC;EAAA;EAGLC,KAAA,EAAOC,UAAA;EACPC,KAAA,EAAOC,UAAA;EAEPC,MAAMJ,KAAA,EAAO;IAAEK,IAAA;IAAMC;EAAA,GAAS;IAE5B,MAAMC,OAAA,GAAUC,GAAA,CAAI;IAGpB,MAAMC,SAAA,GAAYC,QAAA,CAAS,MAAM,aAAaV,KAAA,CAAMW,IAAA;IACpD,MAAMC,aAAA,GAAgBF,QAAA,CACpB,MAAMG,iBAAA,CAAkBb,KAAA,CAAMW,IAAA,KAASE,iBAAA,CAAkB;IAE3D,MAAMC,SAAA,GAAYJ,QAAA,CAAS,MACzBV,KAAA,CAAMe,WAAA,IAAeT,KAAA,CAAMU,OAAA,GAAU,WAAW;IAElD,MAAMC,WAAA,GAAcP,QAAA,CAAS,MAC3BV,KAAA,CAAMe,WAAA,IAAeT,KAAA,CAAMU,OAAA,GAAU,YAAY;IAInD,MAAME,KAAA,GAASC,GAAA,IAAoB;MACjCZ,OAAA,CAAQa,KAAA,GAAQ;MAChBf,IAAA,CAAK,SAASc,GAAA;IAAA;IAGhB,OAAO;MACLZ,OAAA;MACAE,SAAA;MACAG,aAAA;MACAE,SAAA;MACAG,WAAA;MACAC;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}