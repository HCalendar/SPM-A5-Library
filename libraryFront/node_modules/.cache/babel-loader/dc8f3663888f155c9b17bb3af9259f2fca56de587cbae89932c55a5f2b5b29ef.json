{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport isServer from './isServer.mjs';\nconst resizeHandler = function (entries) {\n  for (const entry of entries) {\n    const listeners = entry.target.__resizeListeners__ || [];\n    if (listeners.length) {\n      listeners.forEach(fn => {\n        fn();\n      });\n    }\n  }\n};\nconst addResizeListener = function (element, fn) {\n  if (isServer || !element) return;\n  if (!element.__resizeListeners__) {\n    element.__resizeListeners__ = [];\n    element.__ro__ = new ResizeObserver(resizeHandler);\n    element.__ro__.observe(element);\n  }\n  element.__resizeListeners__.push(fn);\n};\nconst removeResizeListener = function (element, fn) {\n  var _a;\n  if (!element || !element.__resizeListeners__) return;\n  element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n  if (!element.__resizeListeners__.length) {\n    (_a = element.__ro__) == null ? void 0 : _a.disconnect();\n  }\n};\nexport { addResizeListener, removeResizeListener };","map":{"version":3,"names":["resizeHandler","entries","entry","listeners","target","__resizeListeners__","length","forEach","fn","addResizeListener","element","isServer","__ro__","ResizeObserver","observe","push","removeResizeListener","_a","splice","indexOf","disconnect"],"sources":["../../../../packages/utils/resize-event.ts"],"sourcesContent":["import isServer from './isServer'\n\nimport type { CustomizedHTMLElement } from './types'\n\nexport type ResizableElement = CustomizedHTMLElement<{\n  __resizeListeners__?: Array<(...args: unknown[]) => unknown>\n  __ro__?: ResizeObserver\n}>\n\nconst resizeHandler = function (entries: ResizeObserverEntry[]) {\n  for (const entry of entries) {\n    const listeners =\n      (entry.target as ResizableElement).__resizeListeners__ || []\n    if (listeners.length) {\n      listeners.forEach((fn) => {\n        fn()\n      })\n    }\n  }\n}\n\nexport const addResizeListener = function (\n  element: ResizableElement,\n  fn: (...args: unknown[]) => unknown\n): void {\n  if (isServer || !element) return\n  if (!element.__resizeListeners__) {\n    element.__resizeListeners__ = []\n    element.__ro__ = new ResizeObserver(resizeHandler)\n    element.__ro__.observe(element)\n  }\n  element.__resizeListeners__.push(fn)\n}\n\nexport const removeResizeListener = function (\n  element: ResizableElement,\n  fn: (...args: unknown[]) => unknown\n): void {\n  if (!element || !element.__resizeListeners__) return\n  element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1)\n  if (!element.__resizeListeners__.length) {\n    element.__ro__?.disconnect()\n  }\n}\n"],"mappings":";;AASA,MAAMA,aAAA,GAAgB,SAAAA,CAAUC,OAAA,EAAgC;EAC9D,WAAWC,KAAA,IAASD,OAAA,EAAS;IAC3B,MAAME,SAAA,GACHD,KAAA,CAAME,MAAA,CAA4BC,mBAAA,IAAuB;IAC5D,IAAIF,SAAA,CAAUG,MAAA,EAAQ;MACpBH,SAAA,CAAUI,OAAA,CAASC,EAAA,IAAO;QACxBA,EAAA;MAAA;IAAA;EAAA;AAAA;MAMKC,iBAAA,GAAoB,SAAAA,CAC/BC,OAAA,EACAF,EAAA,EACM;EACN,IAAIG,QAAA,IAAY,CAACD,OAAA,EAAS;EAC1B,IAAI,CAACA,OAAA,CAAQL,mBAAA,EAAqB;IAChCK,OAAA,CAAQL,mBAAA,GAAsB;IAC9BK,OAAA,CAAQE,MAAA,GAAS,IAAIC,cAAA,CAAeb,aAAA;IACpCU,OAAA,CAAQE,MAAA,CAAOE,OAAA,CAAQJ,OAAA;EAAA;EAEzBA,OAAA,CAAQL,mBAAA,CAAoBU,IAAA,CAAKP,EAAA;AAAA;MAGtBQ,oBAAA,GAAuB,SAAAA,CAClCN,OAAA,EACAF,EAAA,EACM;EArCR,IAAAS,EAAA;EAsCE,IAAI,CAACP,OAAA,IAAW,CAACA,OAAA,CAAQL,mBAAA,EAAqB;EAC9CK,OAAA,CAAQL,mBAAA,CAAoBa,MAAA,CAAOR,OAAA,CAAQL,mBAAA,CAAoBc,OAAA,CAAQX,EAAA,GAAK;EAC5E,IAAI,CAACE,OAAA,CAAQL,mBAAA,CAAoBC,MAAA,EAAQ;IACvC,CAAAW,EAAA,GAAAP,OAAA,CAAQE,MAAA,KAAR,gBAAAK,EAAA,CAAgBG,UAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}