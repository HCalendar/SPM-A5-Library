{"ast":null,"code":"import { defineComponent, onMounted, getCurrentInstance } from 'vue';\nimport '../../../directives/index.mjs';\nimport { useDropdown, initDropdownDomEvent } from './useDropdown.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nvar script = defineComponent({\n  name: \"ElDropdownMenu\",\n  directives: {\n    ClickOutside\n  },\n  setup() {\n    const {\n      _elDropdownSize,\n      elDropdown\n    } = useDropdown();\n    const size = _elDropdownSize.value;\n    function show() {\n      var _a;\n      if ([\"click\", \"contextmenu\"].includes(elDropdown.trigger.value)) return;\n      (_a = elDropdown.show) == null ? void 0 : _a.call(elDropdown);\n    }\n    function hide() {\n      if ([\"click\", \"contextmenu\"].includes(elDropdown.trigger.value)) return;\n      _hide();\n    }\n    function _hide() {\n      var _a;\n      (_a = elDropdown.hide) == null ? void 0 : _a.call(elDropdown);\n    }\n    onMounted(() => {\n      const dropdownMenu = getCurrentInstance();\n      initDropdownDomEvent(dropdownMenu, elDropdown.triggerElm.value, elDropdown.instance);\n    });\n    return {\n      size,\n      show,\n      hide,\n      innerHide: _hide,\n      triggerElm: elDropdown.triggerElm\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","directives","ClickOutside","setup","_elDropdownSize","elDropdown","useDropdown","size","value","show","includes","trigger","_a","call","hide","_hide","onMounted","dropdownMenu","getCurrentInstance","initDropdownDomEvent","triggerElm","instance","innerHide"],"sources":["../../../../../../packages/components/dropdown/src/dropdown-menu.vue"],"sourcesContent":["<template>\n  <ul\n    v-clickOutside:[triggerElm]=\"innerHide\"\n    :class=\"[size && `el-dropdown-menu--${size}`]\"\n    class=\"el-dropdown-menu\"\n    @mouseenter.stop=\"show\"\n    @mouseleave.stop=\"hide\"\n  >\n    <slot></slot>\n  </ul>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, getCurrentInstance, onMounted } from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport { useDropdown, initDropdownDomEvent } from './useDropdown'\n\nexport default defineComponent({\n  name: 'ElDropdownMenu',\n  directives: {\n    ClickOutside,\n  },\n  setup() {\n    const { _elDropdownSize, elDropdown } = useDropdown()\n    const size = _elDropdownSize.value\n\n    function show() {\n      if (['click', 'contextmenu'].includes(elDropdown.trigger.value)) return\n      elDropdown.show?.()\n    }\n    function hide() {\n      if (['click', 'contextmenu'].includes(elDropdown.trigger.value)) return\n      _hide()\n    }\n    function _hide() {\n      elDropdown.hide?.()\n    }\n\n    onMounted(() => {\n      const dropdownMenu = getCurrentInstance()\n      initDropdownDomEvent(\n        dropdownMenu,\n        elDropdown.triggerElm.value,\n        elDropdown.instance\n      )\n    })\n\n    return {\n      size,\n      show,\n      hide,\n      innerHide: _hide,\n      triggerElm: elDropdown.triggerElm,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;AAgBA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,UAAA,EAAY;IACVC;EAAA;EAEFC,MAAA,EAAQ;IACN,MAAM;MAAEC,eAAA;MAAiBC;IAAA,IAAeC,WAAA;IACxC,MAAMC,IAAA,GAAOH,eAAA,CAAgBI,KAAA;IAE7B,SAAAC,KAAA,EAAgB;;MACd,IAAI,CAAC,SAAS,eAAeC,QAAA,CAASL,UAAA,CAAWM,OAAA,CAAQH,KAAA,GAAQ;MACjE,CAAAI,EAAA,GAAAP,UAAA,CAAWI,IAAA,KAAX,gBAAAG,EAAA,CAAAC,IAAA,CAAAR,UAAA;IAAA;IAEF,SAAAS,KAAA,EAAgB;MACd,IAAI,CAAC,SAAS,eAAeJ,QAAA,CAASL,UAAA,CAAWM,OAAA,CAAQH,KAAA,GAAQ;MACjEO,KAAA;IAAA;IAEF,SAAAA,MAAA,EAAiB;;MACf,CAAAH,EAAA,GAAAP,UAAA,CAAWS,IAAA,KAAX,gBAAAF,EAAA,CAAAC,IAAA,CAAAR,UAAA;IAAA;IAGFW,SAAA,CAAU,MAAM;MACd,MAAMC,YAAA,GAAeC,kBAAA;MACrBC,oBAAA,CACEF,YAAA,EACAZ,UAAA,CAAWe,UAAA,CAAWZ,KAAA,EACtBH,UAAA,CAAWgB,QAAA;IAAA;IAIf,OAAO;MACLd,IAAA;MACAE,IAAA;MACAK,IAAA;MACAQ,SAAA,EAAWP,KAAA;MACXK,UAAA,EAAYf,UAAA,CAAWe;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}