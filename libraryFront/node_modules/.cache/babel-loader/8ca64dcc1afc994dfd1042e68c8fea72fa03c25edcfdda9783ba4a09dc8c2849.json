{"ast":null,"code":"import { openBlock, createElementBlock, renderSlot } from 'vue';\nconst _hoisted_1 = {\n  ref: \"breadcrumb\",\n  class: \"el-breadcrumb\",\n  \"aria-label\": \"Breadcrumb\",\n  role: \"navigation\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"default\")], 512);\n}\nexport { render };","map":{"version":3,"names":["ref","class","role","createElementBlock","_hoisted_1","renderSlot","_ctx","$slots"],"sources":["../../../../../../packages/components/breadcrumb/src/breadcrumb.vue?vue&type=template&id=b67a42b6&lang.js"],"sourcesContent":["<template>\n  <div\n    ref=\"breadcrumb\"\n    class=\"el-breadcrumb\"\n    aria-label=\"Breadcrumb\"\n    role=\"navigation\"\n  >\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, provide, ref, onMounted } from 'vue'\nimport { elBreadcrumbKey } from '@element-plus/tokens'\n\nimport { breadcrumbProps } from './breadcrumb'\n\nexport default defineComponent({\n  name: 'ElBreadcrumb',\n  props: breadcrumbProps,\n\n  setup(props) {\n    const breadcrumb = ref<HTMLDivElement>()\n\n    provide(elBreadcrumbKey, props)\n\n    onMounted(() => {\n      const items = breadcrumb.value!.querySelectorAll('.el-breadcrumb__item')\n      if (items.length) {\n        items[items.length - 1].setAttribute('aria-current', 'page')\n      }\n    })\n\n    return {\n      breadcrumb,\n    }\n  },\n})\n</script>\n"],"mappings":";;EAEIA,GAAA,EAAI;EACJC,KAAA,EAAM;EACN,cAAW;EACXC,IAAA,EAAK;AAAA;;sBAJPC,kBAAA,QAAAC,UAAA,GAMEC,UAAA,CAAAC,IAAA,CAAAC,MAAA,a","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}