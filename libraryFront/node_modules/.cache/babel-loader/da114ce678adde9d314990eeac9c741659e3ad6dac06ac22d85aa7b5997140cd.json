{"ast":null,"code":"import { defineComponent, ref, inject, getCurrentInstance, onMounted, watch, onBeforeUnmount, computed, reactive } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Close, Check } from '@element-plus/icons-vue';\nvar script = defineComponent({\n  name: \"ElStep\",\n  components: {\n    ElIcon,\n    Close,\n    Check\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"\"\n    },\n    icon: {\n      type: [String, Object],\n      default: \"\"\n    },\n    description: {\n      type: String,\n      default: \"\"\n    },\n    status: {\n      type: String,\n      default: \"\",\n      validator: val => [\"\", \"wait\", \"process\", \"finish\", \"error\", \"success\"].includes(val)\n    }\n  },\n  setup(props) {\n    const index = ref(-1);\n    const lineStyle = ref({});\n    const internalStatus = ref(\"\");\n    const parent = inject(\"ElSteps\");\n    const currentInstance = getCurrentInstance();\n    onMounted(() => {\n      watch([() => parent.props.active, () => parent.props.processStatus, () => parent.props.finishStatus], ([active]) => {\n        updateStatus(active);\n      }, {\n        immediate: true\n      });\n    });\n    onBeforeUnmount(() => {\n      parent.steps.value = parent.steps.value.filter(instance => instance.uid !== currentInstance.uid);\n    });\n    const currentStatus = computed(() => {\n      return props.status || internalStatus.value;\n    });\n    const prevStatus = computed(() => {\n      const prevStep = parent.steps.value[index.value - 1];\n      return prevStep ? prevStep.currentStatus : \"wait\";\n    });\n    const isCenter = computed(() => {\n      return parent.props.alignCenter;\n    });\n    const isVertical = computed(() => {\n      return parent.props.direction === \"vertical\";\n    });\n    const isSimple = computed(() => {\n      return parent.props.simple;\n    });\n    const stepsCount = computed(() => {\n      return parent.steps.value.length;\n    });\n    const isLast = computed(() => {\n      var _a;\n      return ((_a = parent.steps.value[stepsCount.value - 1]) == null ? void 0 : _a.uid) === currentInstance.uid;\n    });\n    const space = computed(() => {\n      return isSimple.value ? \"\" : parent.props.space;\n    });\n    const style = computed(() => {\n      const style2 = {\n        flexBasis: typeof space.value === \"number\" ? `${space.value}px` : space.value ? space.value : `${100 / (stepsCount.value - (isCenter.value ? 0 : 1))}%`\n      };\n      if (isVertical.value) return style2;\n      if (isLast.value) {\n        style2.maxWidth = `${100 / stepsCount.value}%`;\n      }\n      return style2;\n    });\n    const setIndex = val => {\n      index.value = val;\n    };\n    const calcProgress = status => {\n      let step = 100;\n      const style2 = {};\n      style2.transitionDelay = `${150 * index.value}ms`;\n      if (status === parent.props.processStatus) {\n        step = 0;\n      } else if (status === \"wait\") {\n        step = 0;\n        style2.transitionDelay = `${-150 * index.value}ms`;\n      }\n      style2.borderWidth = step && !isSimple.value ? \"1px\" : 0;\n      style2[parent.props.direction === \"vertical\" ? \"height\" : \"width\"] = `${step}%`;\n      lineStyle.value = style2;\n    };\n    const updateStatus = activeIndex => {\n      if (activeIndex > index.value) {\n        internalStatus.value = parent.props.finishStatus;\n      } else if (activeIndex === index.value && prevStatus.value !== \"error\") {\n        internalStatus.value = parent.props.processStatus;\n      } else {\n        internalStatus.value = \"wait\";\n      }\n      const prevChild = parent.steps.value[stepsCount.value - 1];\n      if (prevChild) prevChild.calcProgress(internalStatus.value);\n    };\n    const stepItemState = reactive({\n      uid: computed(() => currentInstance.uid),\n      currentStatus,\n      setIndex,\n      calcProgress\n    });\n    parent.steps.value = [...parent.steps.value, stepItemState];\n    return {\n      index,\n      lineStyle,\n      currentStatus,\n      isCenter,\n      isVertical,\n      isSimple,\n      isLast,\n      space,\n      style,\n      parent,\n      setIndex,\n      calcProgress,\n      updateStatus\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","components","ElIcon","Close","Check","props","title","type","String","default","icon","Object","description","status","validator","val","includes","setup","index","ref","lineStyle","internalStatus","parent","inject","currentInstance","getCurrentInstance","onMounted","watch","active","processStatus","finishStatus","updateStatus","immediate","onBeforeUnmount","steps","value","filter","instance","uid","currentStatus","computed","prevStatus","prevStep","isCenter","alignCenter","isVertical","direction","isSimple","simple","stepsCount","length","isLast","_a","space","style","style2","flexBasis","maxWidth","setIndex","calcProgress","step","transitionDelay","borderWidth","activeIndex","prevChild","stepItemState","reactive"],"sources":["../../../../../../packages/components/steps/src/item.vue"],"sourcesContent":["<template>\n  <div\n    :style=\"style\"\n    :class=\"[\n      'el-step',\n      isSimple ? 'is-simple' : `is-${parent.props.direction}`,\n      isLast && !space && !isCenter && 'is-flex',\n      isCenter && !isVertical && !isSimple && 'is-center',\n    ]\"\n  >\n    <!-- icon & line -->\n    <div :class=\"['el-step__head', `is-${currentStatus}`]\">\n      <div class=\"el-step__line\">\n        <i class=\"el-step__line-inner\" :style=\"lineStyle\"></i>\n      </div>\n\n      <div :class=\"['el-step__icon', `is-${icon ? 'icon' : 'text'}`]\">\n        <slot\n          v-if=\"currentStatus !== 'success' && currentStatus !== 'error'\"\n          name=\"icon\"\n        >\n          <el-icon v-if=\"icon\" class=\"el-step__icon-inner\">\n            <component :is=\"icon\" />\n          </el-icon>\n          <div v-if=\"!icon && !isSimple\" class=\"el-step__icon-inner\">\n            {{ index + 1 }}\n          </div>\n        </slot>\n        <el-icon v-else class=\"el-step__icon-inner is-status\">\n          <check v-if=\"currentStatus === 'success'\" />\n          <close v-else />\n        </el-icon>\n      </div>\n    </div>\n    <!-- title & description -->\n    <div class=\"el-step__main\">\n      <div :class=\"['el-step__title', `is-${currentStatus}`]\">\n        <slot name=\"title\">{{ title }}</slot>\n      </div>\n      <div v-if=\"isSimple\" class=\"el-step__arrow\"></div>\n      <div v-else :class=\"['el-step__description', `is-${currentStatus}`]\">\n        <slot name=\"description\">{{ description }}</slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  reactive,\n  watch,\n} from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { Close, Check } from '@element-plus/icons-vue'\n\nimport type { Ref, PropType, Component } from 'vue'\n\nexport interface IStepsProps {\n  space: number | string\n  active: number\n  direction: string\n  alignCenter: boolean\n  simple: boolean\n  finishStatus: string\n  processStatus: string\n}\n\nexport interface StepItemState {\n  uid: number\n  currentStatus: string\n  setIndex: (val: number) => void\n  calcProgress: (status: string) => void\n}\n\nexport interface IStepsInject {\n  props: IStepsProps\n  steps: Ref<StepItemState[]>\n}\n\nexport default defineComponent({\n  name: 'ElStep',\n  components: {\n    ElIcon,\n    Close,\n    Check,\n  },\n  props: {\n    title: {\n      type: String,\n      default: '',\n    },\n    icon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: '',\n    },\n    description: {\n      type: String,\n      default: '',\n    },\n    status: {\n      type: String,\n      default: '',\n      validator: (val: string): boolean =>\n        ['', 'wait', 'process', 'finish', 'error', 'success'].includes(val),\n    },\n  },\n  setup(props) {\n    const index = ref(-1)\n    const lineStyle = ref({})\n    const internalStatus = ref('')\n    const parent: IStepsInject = inject('ElSteps')\n    const currentInstance = getCurrentInstance()\n\n    onMounted(() => {\n      watch(\n        [\n          () => parent.props.active,\n          () => parent.props.processStatus,\n          () => parent.props.finishStatus,\n        ],\n        ([active]) => {\n          updateStatus(active)\n        },\n        { immediate: true }\n      )\n    })\n\n    onBeforeUnmount(() => {\n      parent.steps.value = parent.steps.value.filter(\n        (instance) => instance.uid !== currentInstance.uid\n      )\n    })\n\n    const currentStatus = computed(() => {\n      return props.status || internalStatus.value\n    })\n    const prevStatus = computed(() => {\n      const prevStep = parent.steps.value[index.value - 1]\n      return prevStep ? prevStep.currentStatus : 'wait'\n    })\n    const isCenter = computed(() => {\n      return parent.props.alignCenter\n    })\n    const isVertical = computed(() => {\n      return parent.props.direction === 'vertical'\n    })\n    const isSimple = computed(() => {\n      return parent.props.simple\n    })\n    const stepsCount = computed(() => {\n      return parent.steps.value.length\n    })\n    const isLast = computed(() => {\n      return (\n        parent.steps.value[stepsCount.value - 1]?.uid === currentInstance.uid\n      )\n    })\n    const space = computed(() => {\n      return isSimple.value ? '' : parent.props.space\n    })\n    const style = computed(() => {\n      const style: Record<string, unknown> = {\n        flexBasis:\n          typeof space.value === 'number'\n            ? `${space.value}px`\n            : space.value\n            ? space.value\n            : `${100 / (stepsCount.value - (isCenter.value ? 0 : 1))}%`,\n      }\n      if (isVertical.value) return style\n      if (isLast.value) {\n        style.maxWidth = `${100 / stepsCount.value}%`\n      }\n      return style\n    })\n\n    const setIndex = (val) => {\n      index.value = val\n    }\n    const calcProgress = (status) => {\n      let step = 100\n      const style: Record<string, unknown> = {}\n\n      style.transitionDelay = `${150 * index.value}ms`\n      if (status === parent.props.processStatus) {\n        step = 0\n      } else if (status === 'wait') {\n        step = 0\n        style.transitionDelay = `${-150 * index.value}ms`\n      }\n      style.borderWidth = step && !isSimple.value ? '1px' : 0\n      style[\n        parent.props.direction === 'vertical' ? 'height' : 'width'\n      ] = `${step}%`\n      lineStyle.value = style\n    }\n    const updateStatus = (activeIndex) => {\n      if (activeIndex > index.value) {\n        internalStatus.value = parent.props.finishStatus\n      } else if (activeIndex === index.value && prevStatus.value !== 'error') {\n        internalStatus.value = parent.props.processStatus\n      } else {\n        internalStatus.value = 'wait'\n      }\n      const prevChild = parent.steps.value[stepsCount.value - 1]\n      if (prevChild) prevChild.calcProgress(internalStatus.value)\n    }\n\n    const stepItemState = reactive({\n      uid: computed(() => currentInstance.uid),\n      currentStatus,\n      setIndex,\n      calcProgress,\n    })\n    parent.steps.value = [...parent.steps.value, stepItemState]\n\n    return {\n      index,\n      lineStyle,\n      currentStatus,\n      isCenter,\n      isVertical,\n      isSimple,\n      isLast,\n      space,\n      style,\n      parent,\n      setIndex,\n      calcProgress,\n      updateStatus,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}