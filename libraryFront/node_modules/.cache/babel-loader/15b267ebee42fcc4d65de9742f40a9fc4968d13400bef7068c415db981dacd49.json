{"ast":null,"code":"import { openBlock, createElementBlock, normalizeClass, withDirectives, vModelCheckbox, normalizeStyle, renderSlot, createTextVNode, toDisplayString, createCommentVNode } from 'vue';\nconst _hoisted_1 = [\"aria-checked\", \"aria-disabled\"];\nconst _hoisted_2 = [\"name\", \"tabindex\", \"disabled\", \"true-value\", \"false-value\"];\nconst _hoisted_3 = [\"name\", \"tabindex\", \"disabled\", \"value\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"label\", {\n    class: normalizeClass([\"el-checkbox-button\", [_ctx.size ? \"el-checkbox-button--\" + _ctx.size : \"\", {\n      \"is-disabled\": _ctx.isDisabled\n    }, {\n      \"is-checked\": _ctx.isChecked\n    }, {\n      \"is-focus\": _ctx.focus\n    }]]),\n    role: \"checkbox\",\n    \"aria-checked\": _ctx.isChecked,\n    \"aria-disabled\": _ctx.isDisabled\n  }, [_ctx.trueLabel || _ctx.falseLabel ? withDirectives((openBlock(), createElementBlock(\"input\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.model = $event),\n    class: \"el-checkbox-button__original\",\n    type: \"checkbox\",\n    name: _ctx.name,\n    tabindex: _ctx.tabindex,\n    disabled: _ctx.isDisabled,\n    \"true-value\": _ctx.trueLabel,\n    \"false-value\": _ctx.falseLabel,\n    onChange: _cache[1] || (_cache[1] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n    onFocus: _cache[2] || (_cache[2] = $event => _ctx.focus = true),\n    onBlur: _cache[3] || (_cache[3] = $event => _ctx.focus = false)\n  }, null, 40, _hoisted_2)), [[vModelCheckbox, _ctx.model]]) : withDirectives((openBlock(), createElementBlock(\"input\", {\n    key: 1,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.model = $event),\n    class: \"el-checkbox-button__original\",\n    type: \"checkbox\",\n    name: _ctx.name,\n    tabindex: _ctx.tabindex,\n    disabled: _ctx.isDisabled,\n    value: _ctx.label,\n    onChange: _cache[5] || (_cache[5] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n    onFocus: _cache[6] || (_cache[6] = $event => _ctx.focus = true),\n    onBlur: _cache[7] || (_cache[7] = $event => _ctx.focus = false)\n  }, null, 40, _hoisted_3)), [[vModelCheckbox, _ctx.model]]), _ctx.$slots.default || _ctx.label ? (openBlock(), createElementBlock(\"span\", {\n    key: 2,\n    class: \"el-checkbox-button__inner\",\n    style: normalizeStyle(_ctx.isChecked ? _ctx.activeStyle : null)\n  }, [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(_ctx.label), 1)])], 4)) : createCommentVNode(\"v-if\", true)], 10, _hoisted_1);\n}\nexport { render };","map":{"version":3,"names":["createElementBlock","class","normalizeClass","role","_ctx","isChecked","isDisabled","trueLabel","falseLabel","withDirectives","openBlock","model","$event","type","name","tabindex","disabled","onChange","_cache","args","handleChange","onFocus","focus","onBlur","value","label","$slots","default","style","normalizeStyle","activeStyle","renderSlot"],"sources":["../../../../../../packages/components/checkbox/src/checkbox-button.vue?vue&type=template&id=f839a66c&lang.js"],"sourcesContent":["<template>\n  <label\n    class=\"el-checkbox-button\"\n    :class=\"[\n      size ? 'el-checkbox-button--' + size : '',\n      { 'is-disabled': isDisabled },\n      { 'is-checked': isChecked },\n      { 'is-focus': focus },\n    ]\"\n    role=\"checkbox\"\n    :aria-checked=\"isChecked\"\n    :aria-disabled=\"isDisabled\"\n  >\n    <input\n      v-if=\"trueLabel || falseLabel\"\n      v-model=\"model\"\n      class=\"el-checkbox-button__original\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :tabindex=\"tabindex\"\n      :disabled=\"isDisabled\"\n      :true-value=\"trueLabel\"\n      :false-value=\"falseLabel\"\n      @change=\"handleChange\"\n      @focus=\"focus = true\"\n      @blur=\"focus = false\"\n    />\n    <input\n      v-else\n      v-model=\"model\"\n      class=\"el-checkbox-button__original\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :tabindex=\"tabindex\"\n      :disabled=\"isDisabled\"\n      :value=\"label\"\n      @change=\"handleChange\"\n      @focus=\"focus = true\"\n      @blur=\"focus = false\"\n    />\n\n    <span\n      v-if=\"$slots.default || label\"\n      class=\"el-checkbox-button__inner\"\n      :style=\"isChecked ? activeStyle : null\"\n    >\n      <slot>{{ label }}</slot>\n    </span>\n  </label>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/utils/constants'\nimport { useCheckbox, useCheckboxGroup, useCheckboxProps } from './useCheckbox'\n\nexport default defineComponent({\n  name: 'ElCheckboxButton',\n  props: useCheckboxProps,\n  emits: [UPDATE_MODEL_EVENT, 'change'],\n  setup(props) {\n    const { focus, isChecked, isDisabled, size, model, handleChange } =\n      useCheckbox(props)\n    const { checkboxGroup } = useCheckboxGroup()\n\n    const activeStyle = computed(() => {\n      const fillValue = checkboxGroup?.fill?.value ?? ''\n      return {\n        backgroundColor: fillValue,\n        borderColor: fillValue,\n        color: checkboxGroup?.textColor?.value ?? '',\n        boxShadow: fillValue ? `-1px 0 0 0 ${fillValue}` : null,\n      }\n    })\n\n    return {\n      focus,\n      isChecked,\n      isDisabled,\n      model,\n      handleChange,\n      activeStyle,\n      size,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;sBACEA,kBAAA;IACEC,KAAA,EAAAC,cAAA,EAAM,uB;;;;;;;IAONC,IAAA,EAAK;IACJ,gBAAcC,IAAA,CAAAC,SAAA;IACd,iBAAeD,IAAA,CAAAE;MAGRF,IAAA,CAAAG,SAAA,IAAaH,IAAA,CAAAI,UAAA,GAAAC,cAAA,EAAAC,SAAA,IADrBV,kBAAA;;+DAEWI,IAAA,CAAAO,KAAA,GAAAC,MAAA;IACTX,KAAA,EAAM;IACNY,IAAA,EAAK;IACJC,IAAA,EAAMV,IAAA,CAAAU,IAAA;IACNC,QAAA,EAAUX,IAAA,CAAAW,QAAA;IACVC,QAAA,EAAUZ,IAAA,CAAAE,UAAA;IACV,cAAYF,IAAA,CAAAG,SAAA;IACZ,eAAaH,IAAA,CAAAI,UAAA;IACbS,QAAA,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAQf,IAAA,CAAAgB,YAAA,IAAAhB,IAAA,CAAAgB,YAAA,IAAAD,IAAA;IACRE,OAAA,EAAAH,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAAOR,IAAA,CAAAkB,KAAA;IACPC,MAAA,EAAAL,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAAMR,IAAA,CAAAkB,KAAA;+CAVElB,IAAA,CAAAO,KAAA,E,iCAYXX,kBAAA;;+DAEWI,IAAA,CAAAO,KAAA,GAAAC,MAAA;IACTX,KAAA,EAAM;IACNY,IAAA,EAAK;IACJC,IAAA,EAAMV,IAAA,CAAAU,IAAA;IACNC,QAAA,EAAUX,IAAA,CAAAW,QAAA;IACVC,QAAA,EAAUZ,IAAA,CAAAE,UAAA;IACVkB,KAAA,EAAOpB,IAAA,CAAAqB,KAAA;IACPR,QAAA,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAQf,IAAA,CAAAgB,YAAA,IAAAhB,IAAA,CAAAgB,YAAA,IAAAD,IAAA;IACRE,OAAA,EAAAH,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAAOR,IAAA,CAAAkB,KAAA;IACPC,MAAA,EAAAL,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAAMR,IAAA,CAAAkB,KAAA;+CATElB,IAAA,CAAAO,KAAA,E,GAaHP,IAAA,CAAAsB,MAAA,CAAOC,OAAA,IAAWvB,IAAA,CAAAqB,KAAA,IAAAf,SAAA,IAD1BV,kBAAA;;IAEEC,KAAA,EAAM;IACL2B,KAAA,EAAAC,cAAA,CAAOzB,IAAA,CAAAC,SAAA,GAAYD,IAAA,CAAA0B,WAAA;MAEpBC,UAAA,CAAA3B,IAAA,CAAAsB,MAAA,wB,gCAAStB,IAAA,CAAAqB,KAAA,M","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}