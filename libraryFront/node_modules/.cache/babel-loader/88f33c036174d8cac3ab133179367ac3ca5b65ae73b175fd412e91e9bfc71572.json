{"ast":null,"code":"import { defineComponent, provide } from 'vue';\nimport '../../../hooks/index.mjs';\nimport '../../../tokens/index.mjs';\nimport { configProviderProps } from './config-provider.mjs';\nimport { provideLocale } from '../../../hooks/use-locale/index.mjs';\nimport { configProviderContextKey } from '../../../tokens/config-provider.mjs';\nconst ConfigProvider = defineComponent({\n  name: \"ElConfigProvider\",\n  props: configProviderProps,\n  setup(props, {\n    slots\n  }) {\n    provideLocale();\n    provide(configProviderContextKey, props);\n    return () => {\n      var _a;\n      return (_a = slots.default) == null ? void 0 : _a.call(slots);\n    };\n  }\n});\nexport { ConfigProvider };","map":{"version":3,"names":["ConfigProvider","defineComponent","name","props","configProviderProps","setup","slots","provideLocale","provide","configProviderContextKey","_a","default","call"],"sources":["../../../../../../packages/components/config-provider/src/index.ts"],"sourcesContent":["import { provide, defineComponent } from 'vue'\nimport { provideLocale } from '@element-plus/hooks'\nimport { configProviderContextKey } from '@element-plus/tokens'\nimport { configProviderProps } from './config-provider'\n\nexport const ConfigProvider = defineComponent({\n  name: 'ElConfigProvider',\n  props: configProviderProps,\n  setup(props, { slots }) {\n    provideLocale()\n    provide(configProviderContextKey, props)\n    return () => slots.default?.()\n  },\n})\n"],"mappings":";;;;;;MAKaA,cAAA,GAAiBC,eAAA,CAAgB;EAC5CC,IAAA,EAAM;EACNC,KAAA,EAAOC,mBAAA;EACPC,MAAMF,KAAA,EAAO;IAAEG;EAAA,GAAS;IACtBC,aAAA;IACAC,OAAA,CAAQC,wBAAA,EAA0BN,KAAA;IAClC,OAAO,MAAG;MAXd,IAAAO,EAAA;MAWiB,QAAAA,EAAA,GAAAJ,KAAA,CAAMK,OAAA,KAAN,gBAAAD,EAAA,CAAAE,IAAA,CAAAN,KAAA;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}