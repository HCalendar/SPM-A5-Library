{"ast":null,"code":"import { markRaw, defineComponent, ref, effectScope, computed, watch, nextTick, onMounted } from 'vue';\nimport { useEventListener } from '@vueuse/core';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { EVENT_CODE } from '../../../utils/aria.mjs';\nimport { isFirefox, rafThrottle } from '../../../utils/util.mjs';\nimport { FullScreen, ScaleToOriginal, Close, ArrowLeft, ArrowRight, ZoomOut, ZoomIn, RefreshLeft, RefreshRight } from '@element-plus/icons-vue';\nimport { imageViewerProps, imageViewerEmits } from './image-viewer.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nconst Mode = {\n  CONTAIN: {\n    name: \"contain\",\n    icon: markRaw(FullScreen)\n  },\n  ORIGINAL: {\n    name: \"original\",\n    icon: markRaw(ScaleToOriginal)\n  }\n};\nconst mousewheelEventName = isFirefox() ? \"DOMMouseScroll\" : \"mousewheel\";\nvar script = defineComponent({\n  name: \"ElImageViewer\",\n  components: {\n    ElIcon,\n    Close,\n    ArrowLeft,\n    ArrowRight,\n    ZoomOut,\n    ZoomIn,\n    RefreshLeft,\n    RefreshRight\n  },\n  props: imageViewerProps,\n  emits: imageViewerEmits,\n  setup(props, {\n    emit\n  }) {\n    const {\n      t\n    } = useLocale();\n    const wrapper = ref();\n    const img = ref();\n    const scopeEventListener = effectScope();\n    const loading = ref(true);\n    const index = ref(props.initialIndex);\n    const mode = ref(Mode.CONTAIN);\n    const transform = ref({\n      scale: 1,\n      deg: 0,\n      offsetX: 0,\n      offsetY: 0,\n      enableTransition: false\n    });\n    const isSingle = computed(() => {\n      const {\n        urlList\n      } = props;\n      return urlList.length <= 1;\n    });\n    const isFirst = computed(() => {\n      return index.value === 0;\n    });\n    const isLast = computed(() => {\n      return index.value === props.urlList.length - 1;\n    });\n    const currentImg = computed(() => {\n      return props.urlList[index.value];\n    });\n    const imgStyle = computed(() => {\n      const {\n        scale,\n        deg,\n        offsetX,\n        offsetY,\n        enableTransition\n      } = transform.value;\n      const style = {\n        transform: `scale(${scale}) rotate(${deg}deg)`,\n        transition: enableTransition ? \"transform .3s\" : \"\",\n        marginLeft: `${offsetX}px`,\n        marginTop: `${offsetY}px`\n      };\n      if (mode.value.name === Mode.CONTAIN.name) {\n        style.maxWidth = style.maxHeight = \"100%\";\n      }\n      return style;\n    });\n    function hide() {\n      unregisterEventListener();\n      emit(\"close\");\n    }\n    function registerEventListener() {\n      const keydownHandler = rafThrottle(e => {\n        switch (e.code) {\n          case EVENT_CODE.esc:\n            hide();\n            break;\n          case EVENT_CODE.space:\n            toggleMode();\n            break;\n          case EVENT_CODE.left:\n            prev();\n            break;\n          case EVENT_CODE.up:\n            handleActions(\"zoomIn\");\n            break;\n          case EVENT_CODE.right:\n            next();\n            break;\n          case EVENT_CODE.down:\n            handleActions(\"zoomOut\");\n            break;\n        }\n      });\n      const mousewheelHandler = rafThrottle(e => {\n        const delta = e.wheelDelta ? e.wheelDelta : -e.detail;\n        if (delta > 0) {\n          handleActions(\"zoomIn\", {\n            zoomRate: 0.015,\n            enableTransition: false\n          });\n        } else {\n          handleActions(\"zoomOut\", {\n            zoomRate: 0.015,\n            enableTransition: false\n          });\n        }\n      });\n      scopeEventListener.run(() => {\n        useEventListener(document, \"keydown\", keydownHandler);\n        useEventListener(document, mousewheelEventName, mousewheelHandler);\n      });\n    }\n    function unregisterEventListener() {\n      scopeEventListener.stop();\n    }\n    function handleImgLoad() {\n      loading.value = false;\n    }\n    function handleImgError(e) {\n      loading.value = false;\n      e.target.alt = t(\"el.image.error\");\n    }\n    function handleMouseDown(e) {\n      if (loading.value || e.button !== 0 || !wrapper.value) return;\n      const {\n        offsetX,\n        offsetY\n      } = transform.value;\n      const startX = e.pageX;\n      const startY = e.pageY;\n      const divLeft = wrapper.value.clientLeft;\n      const divRight = wrapper.value.clientLeft + wrapper.value.clientWidth;\n      const divTop = wrapper.value.clientTop;\n      const divBottom = wrapper.value.clientTop + wrapper.value.clientHeight;\n      const dragHandler = rafThrottle(ev => {\n        transform.value = {\n          ...transform.value,\n          offsetX: offsetX + ev.pageX - startX,\n          offsetY: offsetY + ev.pageY - startY\n        };\n      });\n      const removeMousemove = useEventListener(document, \"mousemove\", dragHandler);\n      useEventListener(document, \"mouseup\", evt => {\n        const mouseX = evt.pageX;\n        const mouseY = evt.pageY;\n        if (mouseX < divLeft || mouseX > divRight || mouseY < divTop || mouseY > divBottom) {\n          reset();\n        }\n        removeMousemove();\n      });\n      e.preventDefault();\n    }\n    function reset() {\n      transform.value = {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false\n      };\n    }\n    function toggleMode() {\n      if (loading.value) return;\n      const modeNames = Object.keys(Mode);\n      const modeValues = Object.values(Mode);\n      const currentMode = mode.value.name;\n      const index2 = modeValues.findIndex(i => i.name === currentMode);\n      const nextIndex = (index2 + 1) % modeNames.length;\n      mode.value = Mode[modeNames[nextIndex]];\n      reset();\n    }\n    function prev() {\n      if (isFirst.value && !props.infinite) return;\n      const len = props.urlList.length;\n      index.value = (index.value - 1 + len) % len;\n    }\n    function next() {\n      if (isLast.value && !props.infinite) return;\n      const len = props.urlList.length;\n      index.value = (index.value + 1) % len;\n    }\n    function handleActions(action, options = {}) {\n      if (loading.value) return;\n      const {\n        zoomRate,\n        rotateDeg,\n        enableTransition\n      } = {\n        zoomRate: 0.2,\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options\n      };\n      switch (action) {\n        case \"zoomOut\":\n          if (transform.value.scale > 0.2) {\n            transform.value.scale = parseFloat((transform.value.scale - zoomRate).toFixed(3));\n          }\n          break;\n        case \"zoomIn\":\n          transform.value.scale = parseFloat((transform.value.scale + zoomRate).toFixed(3));\n          break;\n        case \"clockwise\":\n          transform.value.deg += rotateDeg;\n          break;\n        case \"anticlockwise\":\n          transform.value.deg -= rotateDeg;\n          break;\n      }\n      transform.value.enableTransition = enableTransition;\n    }\n    watch(currentImg, () => {\n      nextTick(() => {\n        const $img = img.value;\n        if (!($img == null ? void 0 : $img.complete)) {\n          loading.value = true;\n        }\n      });\n    });\n    watch(index, val => {\n      reset();\n      emit(\"switch\", val);\n    });\n    onMounted(() => {\n      var _a, _b;\n      registerEventListener();\n      (_b = (_a = wrapper.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    });\n    return {\n      index,\n      wrapper,\n      img,\n      isSingle,\n      isFirst,\n      isLast,\n      currentImg,\n      imgStyle,\n      mode,\n      handleActions,\n      prev,\n      next,\n      hide,\n      toggleMode,\n      handleImgLoad,\n      handleImgError,\n      handleMouseDown\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["Mode","CONTAIN","name","icon","markRaw","FullScreen","ORIGINAL","ScaleToOriginal","mousewheelEventName","isFirefox","script","defineComponent","components","ElIcon","Close","ArrowLeft","ArrowRight","ZoomOut","ZoomIn","RefreshLeft","RefreshRight","props","imageViewerProps","emits","imageViewerEmits","setup","emit","t","useLocale","wrapper","ref","img","scopeEventListener","effectScope","loading","index","initialIndex","mode","transform","scale","deg","offsetX","offsetY","enableTransition","isSingle","computed","urlList","length","isFirst","value","isLast","currentImg","imgStyle","style","transition","marginLeft","marginTop","maxWidth","maxHeight","hide","unregisterEventListener","registerEventListener","keydownHandler","rafThrottle","e","code","EVENT_CODE","esc","space","toggleMode","left","prev","up","handleActions","right","next","down","mousewheelHandler","delta","wheelDelta","detail","zoomRate","run","useEventListener","document","stop","handleImgLoad","handleImgError","target","alt","handleMouseDown","button","startX","pageX","startY","pageY","divLeft","clientLeft","divRight","clientWidth","divTop","clientTop","divBottom","clientHeight","dragHandler","ev","removeMousemove","evt","mouseX","mouseY","reset","preventDefault","modeNames","Object","keys","modeValues","values","currentMode","index2","findIndex","i","nextIndex","infinite","len","action","options","rotateDeg","parseFloat","toFixed","watch","nextTick","$img","complete","val","onMounted","_b","_a","focus","call"],"sources":["../../../../../../packages/components/image-viewer/src/image-viewer.vue"],"sourcesContent":["<template>\n  <transition name=\"viewer-fade\">\n    <div\n      ref=\"wrapper\"\n      :tabindex=\"-1\"\n      class=\"el-image-viewer__wrapper\"\n      :style=\"{ zIndex }\"\n    >\n      <div\n        class=\"el-image-viewer__mask\"\n        @click.self=\"hideOnClickModal && hide()\"\n      />\n\n      <!-- CLOSE -->\n      <span class=\"el-image-viewer__btn el-image-viewer__close\" @click=\"hide\">\n        <el-icon><close /></el-icon>\n      </span>\n\n      <!-- ARROW -->\n      <template v-if=\"!isSingle\">\n        <span\n          class=\"el-image-viewer__btn el-image-viewer__prev\"\n          :class=\"{ 'is-disabled': !infinite && isFirst }\"\n          @click=\"prev\"\n        >\n          <el-icon><arrow-left /></el-icon>\n        </span>\n        <span\n          class=\"el-image-viewer__btn el-image-viewer__next\"\n          :class=\"{ 'is-disabled': !infinite && isLast }\"\n          @click=\"next\"\n        >\n          <el-icon><arrow-right /></el-icon>\n        </span>\n      </template>\n      <!-- ACTIONS -->\n      <div class=\"el-image-viewer__btn el-image-viewer__actions\">\n        <div class=\"el-image-viewer__actions__inner\">\n          <el-icon @click=\"handleActions('zoomOut')\">\n            <zoom-out />\n          </el-icon>\n          <el-icon @click=\"handleActions('zoomIn')\">\n            <zoom-in />\n          </el-icon>\n          <i class=\"el-image-viewer__actions__divider\"></i>\n          <el-icon @click=\"toggleMode\">\n            <component :is=\"mode.icon\" />\n          </el-icon>\n          <i class=\"el-image-viewer__actions__divider\"></i>\n          <el-icon @click=\"handleActions('anticlockwise')\">\n            <refresh-left />\n          </el-icon>\n          <el-icon @click=\"handleActions('clockwise')\">\n            <refresh-right />\n          </el-icon>\n        </div>\n      </div>\n      <!-- CANVAS -->\n      <div class=\"el-image-viewer__canvas\">\n        <img\n          v-for=\"(url, i) in urlList\"\n          v-show=\"i === index\"\n          ref=\"img\"\n          :key=\"url\"\n          :src=\"url\"\n          :style=\"imgStyle\"\n          class=\"el-image-viewer__img\"\n          @load=\"handleImgLoad\"\n          @error=\"handleImgError\"\n          @mousedown=\"handleMouseDown\"\n        />\n      </div>\n      <slot />\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  computed,\n  ref,\n  onMounted,\n  watch,\n  nextTick,\n  effectScope,\n  markRaw,\n} from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport ElIcon from '@element-plus/components/icon'\nimport { useLocale } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/utils/aria'\nimport { rafThrottle, isFirefox } from '@element-plus/utils/util'\nimport {\n  Close,\n  ArrowLeft,\n  ArrowRight,\n  ZoomOut,\n  ZoomIn,\n  RefreshLeft,\n  RefreshRight,\n  FullScreen,\n  ScaleToOriginal,\n} from '@element-plus/icons-vue'\nimport { imageViewerProps, imageViewerEmits } from './image-viewer'\n\nimport type { CSSProperties } from 'vue'\n\nconst Mode = {\n  CONTAIN: {\n    name: 'contain',\n    icon: markRaw(FullScreen),\n  },\n  ORIGINAL: {\n    name: 'original',\n    icon: markRaw(ScaleToOriginal),\n  },\n}\n\nconst mousewheelEventName = isFirefox() ? 'DOMMouseScroll' : 'mousewheel'\nexport type ImageViewerAction =\n  | 'zoomIn'\n  | 'zoomOut'\n  | 'clockwise'\n  | 'anticlockwise'\n\nexport default defineComponent({\n  name: 'ElImageViewer',\n  components: {\n    ElIcon,\n    Close,\n    ArrowLeft,\n    ArrowRight,\n    ZoomOut,\n    ZoomIn,\n    RefreshLeft,\n    RefreshRight,\n  },\n  props: imageViewerProps,\n  emits: imageViewerEmits,\n\n  setup(props, { emit }) {\n    const { t } = useLocale()\n    const wrapper = ref<HTMLDivElement>()\n    const img = ref<HTMLImageElement>()\n\n    const scopeEventListener = effectScope()\n\n    const loading = ref(true)\n    const index = ref(props.initialIndex)\n    const mode = ref(Mode.CONTAIN)\n    const transform = ref({\n      scale: 1,\n      deg: 0,\n      offsetX: 0,\n      offsetY: 0,\n      enableTransition: false,\n    })\n\n    const isSingle = computed(() => {\n      const { urlList } = props\n      return urlList.length <= 1\n    })\n\n    const isFirst = computed(() => {\n      return index.value === 0\n    })\n\n    const isLast = computed(() => {\n      return index.value === props.urlList.length - 1\n    })\n\n    const currentImg = computed(() => {\n      return props.urlList[index.value]\n    })\n\n    const imgStyle = computed(() => {\n      const { scale, deg, offsetX, offsetY, enableTransition } = transform.value\n      const style: CSSProperties = {\n        transform: `scale(${scale}) rotate(${deg}deg)`,\n        transition: enableTransition ? 'transform .3s' : '',\n        marginLeft: `${offsetX}px`,\n        marginTop: `${offsetY}px`,\n      }\n      if (mode.value.name === Mode.CONTAIN.name) {\n        style.maxWidth = style.maxHeight = '100%'\n      }\n      return style\n    })\n\n    function hide() {\n      unregisterEventListener()\n      emit('close')\n    }\n\n    function registerEventListener() {\n      const keydownHandler = rafThrottle((e: KeyboardEvent) => {\n        switch (e.code) {\n          // ESC\n          case EVENT_CODE.esc:\n            hide()\n            break\n          // SPACE\n          case EVENT_CODE.space:\n            toggleMode()\n            break\n          // LEFT_ARROW\n          case EVENT_CODE.left:\n            prev()\n            break\n          // UP_ARROW\n          case EVENT_CODE.up:\n            handleActions('zoomIn')\n            break\n          // RIGHT_ARROW\n          case EVENT_CODE.right:\n            next()\n            break\n          // DOWN_ARROW\n          case EVENT_CODE.down:\n            handleActions('zoomOut')\n            break\n        }\n      })\n      const mousewheelHandler = rafThrottle(\n        (e: WheelEvent | any /* TODO: wheelDelta is deprecated */) => {\n          const delta = e.wheelDelta ? e.wheelDelta : -e.detail\n          if (delta > 0) {\n            handleActions('zoomIn', {\n              zoomRate: 0.015,\n              enableTransition: false,\n            })\n          } else {\n            handleActions('zoomOut', {\n              zoomRate: 0.015,\n              enableTransition: false,\n            })\n          }\n        }\n      )\n\n      scopeEventListener.run(() => {\n        useEventListener(document, 'keydown', keydownHandler)\n        useEventListener(document, mousewheelEventName, mousewheelHandler)\n      })\n    }\n\n    function unregisterEventListener() {\n      scopeEventListener.stop()\n    }\n\n    function handleImgLoad() {\n      loading.value = false\n    }\n\n    function handleImgError(e: Event) {\n      loading.value = false\n      ;(e.target as HTMLImageElement).alt = t('el.image.error')\n    }\n\n    function handleMouseDown(e: MouseEvent) {\n      if (loading.value || e.button !== 0 || !wrapper.value) return\n\n      const { offsetX, offsetY } = transform.value\n      const startX = e.pageX\n      const startY = e.pageY\n\n      const divLeft = wrapper.value.clientLeft\n      const divRight = wrapper.value.clientLeft + wrapper.value.clientWidth\n      const divTop = wrapper.value.clientTop\n      const divBottom = wrapper.value.clientTop + wrapper.value.clientHeight\n\n      const dragHandler = rafThrottle((ev: MouseEvent) => {\n        transform.value = {\n          ...transform.value,\n          offsetX: offsetX + ev.pageX - startX,\n          offsetY: offsetY + ev.pageY - startY,\n        }\n      })\n      const removeMousemove = useEventListener(\n        document,\n        'mousemove',\n        dragHandler\n      )\n      useEventListener(document, 'mouseup', (evt) => {\n        const mouseX = evt.pageX\n        const mouseY = evt.pageY\n        if (\n          mouseX < divLeft ||\n          mouseX > divRight ||\n          mouseY < divTop ||\n          mouseY > divBottom\n        ) {\n          reset()\n        }\n        removeMousemove()\n      })\n\n      e.preventDefault()\n    }\n\n    function reset() {\n      transform.value = {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false,\n      }\n    }\n\n    function toggleMode() {\n      if (loading.value) return\n\n      const modeNames = Object.keys(Mode)\n      const modeValues = Object.values(Mode)\n      const currentMode = mode.value.name\n      const index = modeValues.findIndex((i) => i.name === currentMode)\n      const nextIndex = (index + 1) % modeNames.length\n      mode.value = Mode[modeNames[nextIndex]]\n      reset()\n    }\n\n    function prev() {\n      if (isFirst.value && !props.infinite) return\n      const len = props.urlList.length\n      index.value = (index.value - 1 + len) % len\n    }\n\n    function next() {\n      if (isLast.value && !props.infinite) return\n      const len = props.urlList.length\n      index.value = (index.value + 1) % len\n    }\n\n    function handleActions(action: ImageViewerAction, options = {}) {\n      if (loading.value) return\n      const { zoomRate, rotateDeg, enableTransition } = {\n        zoomRate: 0.2,\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options,\n      }\n      switch (action) {\n        case 'zoomOut':\n          if (transform.value.scale > 0.2) {\n            transform.value.scale = parseFloat(\n              (transform.value.scale - zoomRate).toFixed(3)\n            )\n          }\n          break\n        case 'zoomIn':\n          transform.value.scale = parseFloat(\n            (transform.value.scale + zoomRate).toFixed(3)\n          )\n          break\n        case 'clockwise':\n          transform.value.deg += rotateDeg\n          break\n        case 'anticlockwise':\n          transform.value.deg -= rotateDeg\n          break\n      }\n      transform.value.enableTransition = enableTransition\n    }\n\n    watch(currentImg, () => {\n      nextTick(() => {\n        const $img = img.value\n        if (!$img?.complete) {\n          loading.value = true\n        }\n      })\n    })\n\n    watch(index, (val) => {\n      reset()\n      emit('switch', val)\n    })\n\n    onMounted(() => {\n      registerEventListener()\n      // add tabindex then wrapper can be focusable via Javascript\n      // focus wrapper so arrow key can't cause inner scroll behavior underneath\n      wrapper.value?.focus?.()\n    })\n\n    return {\n      index,\n      wrapper,\n      img,\n      isSingle,\n      isFirst,\n      isLast,\n      currentImg,\n      imgStyle,\n      mode,\n      handleActions,\n      prev,\n      next,\n      hide,\n      toggleMode,\n      handleImgLoad,\n      handleImgError,\n      handleMouseDown,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}