{"ast":null,"code":"import { defineComponent, getCurrentInstance, ref, computed, onMounted, nextTick, h } from 'vue';\nimport { ElCheckbox } from '../../../checkbox/index.mjs';\nimport '../filter-panel.mjs';\nimport useLayoutObserver from '../layout-observer.mjs';\nimport { hColgroup } from '../h-helper.mjs';\nimport useEvent from './event-helper.mjs';\nimport useStyle from './style.helper.mjs';\nimport useUtils from './utils-helper.mjs';\nimport script from '../filter-panel.vue_vue_type_script_lang.mjs';\nvar TableHeader = defineComponent({\n  name: \"ElTableHeader\",\n  components: {\n    ElCheckbox\n  },\n  props: {\n    fixed: {\n      type: String,\n      default: \"\"\n    },\n    store: {\n      required: true,\n      type: Object\n    },\n    border: Boolean,\n    defaultSort: {\n      type: Object,\n      default: () => {\n        return {\n          prop: \"\",\n          order: \"\"\n        };\n      }\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const instance = getCurrentInstance();\n    const parent = instance.parent;\n    const storeData = parent.store.states;\n    const filterPanels = ref({});\n    const {\n      tableLayout,\n      onColumnsChange,\n      onScrollableChange\n    } = useLayoutObserver(parent);\n    const hasGutter = computed(() => {\n      return !props.fixed && tableLayout.gutterWidth;\n    });\n    onMounted(() => {\n      nextTick(() => {\n        const {\n          prop,\n          order\n        } = props.defaultSort;\n        const init = true;\n        parent.store.commit(\"sort\", {\n          prop,\n          order,\n          init\n        });\n      });\n    });\n    const {\n      handleHeaderClick,\n      handleHeaderContextMenu,\n      handleMouseDown,\n      handleMouseMove,\n      handleMouseOut,\n      handleSortClick,\n      handleFilterClick\n    } = useEvent(props, emit);\n    const {\n      getHeaderRowStyle,\n      getHeaderRowClass,\n      getHeaderCellStyle,\n      getHeaderCellClass\n    } = useStyle(props);\n    const {\n      isGroup,\n      toggleAllSelection,\n      columnRows\n    } = useUtils(props);\n    instance.state = {\n      onColumnsChange,\n      onScrollableChange\n    };\n    instance.filterPanels = filterPanels;\n    return {\n      columns: storeData.columns,\n      filterPanels,\n      hasGutter,\n      onColumnsChange,\n      onScrollableChange,\n      columnRows,\n      getHeaderRowClass,\n      getHeaderRowStyle,\n      getHeaderCellClass,\n      getHeaderCellStyle,\n      handleHeaderClick,\n      handleHeaderContextMenu,\n      handleMouseDown,\n      handleMouseMove,\n      handleMouseOut,\n      handleSortClick,\n      handleFilterClick,\n      isGroup,\n      toggleAllSelection\n    };\n  },\n  render() {\n    return h(\"table\", {\n      border: \"0\",\n      cellpadding: \"0\",\n      cellspacing: \"0\",\n      class: \"el-table__header\"\n    }, [hColgroup(this.columns, this.hasGutter), h(\"thead\", {\n      class: {\n        \"is-group\": this.isGroup,\n        \"has-gutter\": this.hasGutter\n      }\n    }, this.columnRows.map((subColumns, rowIndex) => h(\"tr\", {\n      class: this.getHeaderRowClass(rowIndex),\n      key: rowIndex,\n      style: this.getHeaderRowStyle(rowIndex)\n    }, subColumns.map((column, cellIndex) => h(\"th\", {\n      class: this.getHeaderCellClass(rowIndex, cellIndex, subColumns, column),\n      colspan: column.colSpan,\n      key: `${column.id}-thead`,\n      rowSpan: column.rowSpan,\n      style: this.getHeaderCellStyle(rowIndex, cellIndex, subColumns, column),\n      onClick: $event => this.handleHeaderClick($event, column),\n      onContextmenu: $event => this.handleHeaderContextMenu($event, column),\n      onMousedown: $event => this.handleMouseDown($event, column),\n      onMousemove: $event => this.handleMouseMove($event, column),\n      onMouseout: this.handleMouseOut\n    }, [h(\"div\", {\n      class: [\"cell\", column.filteredValue && column.filteredValue.length > 0 ? \"highlight\" : \"\", column.labelClassName]\n    }, [column.renderHeader ? column.renderHeader({\n      column,\n      $index: cellIndex,\n      store: this.store,\n      _self: this.$parent\n    }) : column.label, column.sortable && h(\"span\", {\n      onClick: $event => this.handleSortClick($event, column),\n      class: \"caret-wrapper\"\n    }, [h(\"i\", {\n      onClick: $event => this.handleSortClick($event, column, \"ascending\"),\n      class: \"sort-caret ascending\"\n    }), h(\"i\", {\n      onClick: $event => this.handleSortClick($event, column, \"descending\"),\n      class: \"sort-caret descending\"\n    })]), column.filterable && h(script, {\n      store: this.$parent.store,\n      placement: column.filterPlacement || \"bottom-start\",\n      column,\n      upDataColumn: (key, value) => {\n        column[key] = value;\n      }\n    })])])))))]);\n  }\n});\nexport { TableHeader as default };","map":{"version":3,"names":["TableHeader","defineComponent","name","components","ElCheckbox","props","fixed","type","String","default","store","required","Object","border","Boolean","defaultSort","prop","order","setup","emit","instance","getCurrentInstance","parent","storeData","states","filterPanels","ref","tableLayout","onColumnsChange","onScrollableChange","useLayoutObserver","hasGutter","computed","gutterWidth","onMounted","nextTick","init","commit","handleHeaderClick","handleHeaderContextMenu","handleMouseDown","handleMouseMove","handleMouseOut","handleSortClick","handleFilterClick","useEvent","getHeaderRowStyle","getHeaderRowClass","getHeaderCellStyle","getHeaderCellClass","useStyle","isGroup","toggleAllSelection","columnRows","useUtils","state","columns","render","h","cellpadding","cellspacing","class","hColgroup","map","subColumns","rowIndex","key","style","column","cellIndex","colspan","colSpan","id","rowSpan","onClick","$event","onContextmenu","onMousedown","onMousemove","onMouseout","filteredValue","length","labelClassName","renderHeader","$index","_self","$parent","label","sortable","filterable","script","placement","filterPlacement","upDataColumn","value"],"sources":["../../../../../../../packages/components/table/src/table-header/index.ts"],"sourcesContent":["import {\n  defineComponent,\n  getCurrentInstance,\n  computed,\n  onMounted,\n  nextTick,\n  ref,\n  h,\n} from 'vue'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport FilterPanel from '../filter-panel.vue'\nimport useLayoutObserver from '../layout-observer'\nimport { hColgroup } from '../h-helper'\nimport useEvent from './event-helper'\nimport useStyle from './style.helper'\nimport useUtils from './utils-helper'\n\nimport type { ComponentInternalInstance, Ref, PropType } from 'vue'\nimport type { DefaultRow, Sort, Table } from '../table/defaults'\nimport type { Store } from '../store'\nexport interface TableHeader extends ComponentInternalInstance {\n  state: {\n    onColumnsChange\n    onScrollableChange\n  }\n  filterPanels: Ref<unknown>\n}\nexport interface TableHeaderProps<T> {\n  fixed: string\n  store: Store<T>\n  border: boolean\n  defaultSort: Sort\n}\n\nexport default defineComponent({\n  name: 'ElTableHeader',\n  components: {\n    ElCheckbox,\n  },\n  props: {\n    fixed: {\n      type: String,\n      default: '',\n    },\n    store: {\n      required: true,\n      type: Object as PropType<TableHeaderProps<DefaultRow>['store']>,\n    },\n    border: Boolean,\n    defaultSort: {\n      type: Object as PropType<TableHeaderProps<DefaultRow>['defaultSort']>,\n      default: () => {\n        return {\n          prop: '',\n          order: '',\n        }\n      },\n    },\n  },\n  setup(props, { emit }) {\n    const instance = getCurrentInstance() as TableHeader\n    const parent = instance.parent as Table<unknown>\n    const storeData = parent.store.states\n    const filterPanels = ref({})\n    const { tableLayout, onColumnsChange, onScrollableChange } =\n      useLayoutObserver(parent)\n    const hasGutter = computed(() => {\n      return !props.fixed && tableLayout.gutterWidth\n    })\n    onMounted(() => {\n      nextTick(() => {\n        const { prop, order } = props.defaultSort\n        const init = true\n        parent.store.commit('sort', { prop, order, init })\n      })\n    })\n    const {\n      handleHeaderClick,\n      handleHeaderContextMenu,\n      handleMouseDown,\n      handleMouseMove,\n      handleMouseOut,\n      handleSortClick,\n      handleFilterClick,\n    } = useEvent(props as TableHeaderProps<unknown>, emit)\n    const {\n      getHeaderRowStyle,\n      getHeaderRowClass,\n      getHeaderCellStyle,\n      getHeaderCellClass,\n    } = useStyle(props as TableHeaderProps<unknown>)\n    const { isGroup, toggleAllSelection, columnRows } = useUtils(\n      props as TableHeaderProps<unknown>\n    )\n\n    instance.state = {\n      onColumnsChange,\n      onScrollableChange,\n    }\n    // eslint-disable-next-line\n    instance.filterPanels = filterPanels\n\n    return {\n      columns: storeData.columns,\n      filterPanels,\n      hasGutter,\n      onColumnsChange,\n      onScrollableChange,\n      columnRows,\n      getHeaderRowClass,\n      getHeaderRowStyle,\n      getHeaderCellClass,\n      getHeaderCellStyle,\n      handleHeaderClick,\n      handleHeaderContextMenu,\n      handleMouseDown,\n      handleMouseMove,\n      handleMouseOut,\n      handleSortClick,\n      handleFilterClick,\n      isGroup,\n      toggleAllSelection,\n    }\n  },\n  render() {\n    return h(\n      'table',\n      {\n        border: '0',\n        cellpadding: '0',\n        cellspacing: '0',\n        class: 'el-table__header',\n      },\n      [\n        hColgroup(this.columns, this.hasGutter),\n        h(\n          'thead',\n          {\n            class: { 'is-group': this.isGroup, 'has-gutter': this.hasGutter },\n          },\n          this.columnRows.map((subColumns, rowIndex) =>\n            h(\n              'tr',\n              {\n                class: this.getHeaderRowClass(rowIndex),\n                key: rowIndex,\n                style: this.getHeaderRowStyle(rowIndex),\n              },\n              subColumns.map((column, cellIndex) =>\n                h(\n                  'th',\n                  {\n                    class: this.getHeaderCellClass(\n                      rowIndex,\n                      cellIndex,\n                      subColumns,\n                      column\n                    ),\n                    colspan: column.colSpan,\n                    key: `${column.id}-thead`,\n                    rowSpan: column.rowSpan,\n                    style: this.getHeaderCellStyle(\n                      rowIndex,\n                      cellIndex,\n                      subColumns,\n                      column\n                    ),\n                    onClick: ($event) => this.handleHeaderClick($event, column),\n                    onContextmenu: ($event) =>\n                      this.handleHeaderContextMenu($event, column),\n                    onMousedown: ($event) =>\n                      this.handleMouseDown($event, column),\n                    onMousemove: ($event) =>\n                      this.handleMouseMove($event, column),\n                    onMouseout: this.handleMouseOut,\n                  },\n                  [\n                    h(\n                      'div',\n                      {\n                        class: [\n                          'cell',\n                          column.filteredValue &&\n                          column.filteredValue.length > 0\n                            ? 'highlight'\n                            : '',\n                          column.labelClassName,\n                        ],\n                      },\n                      [\n                        column.renderHeader\n                          ? column.renderHeader({\n                              column,\n                              $index: cellIndex,\n                              store: this.store,\n                              _self: this.$parent,\n                            })\n                          : column.label,\n                        column.sortable &&\n                          h(\n                            'span',\n                            {\n                              onClick: ($event) =>\n                                this.handleSortClick($event, column),\n                              class: 'caret-wrapper',\n                            },\n                            [\n                              h('i', {\n                                onClick: ($event) =>\n                                  this.handleSortClick(\n                                    $event,\n                                    column,\n                                    'ascending'\n                                  ),\n                                class: 'sort-caret ascending',\n                              }),\n                              h('i', {\n                                onClick: ($event) =>\n                                  this.handleSortClick(\n                                    $event,\n                                    column,\n                                    'descending'\n                                  ),\n                                class: 'sort-caret descending',\n                              }),\n                            ]\n                          ),\n                        column.filterable &&\n                          h(FilterPanel, {\n                            store: this.$parent.store,\n                            placement: column.filterPlacement || 'bottom-start',\n                            column,\n                            upDataColumn: (key, value) => {\n                              column[key] = value\n                            },\n                          }),\n                      ]\n                    ),\n                  ]\n                )\n              )\n            )\n          )\n        ),\n      ]\n    )\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}