{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, getCurrentInstance, ref, computed, nextTick, watch, provide, reactive, onMounted, withDirectives, h } from 'vue';\nimport '../../../directives/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { More } from '@element-plus/icons-vue';\nimport Menu$1 from '../../../utils/menu/menu-bar.mjs';\nimport { buildProps, definePropType, mutable } from '../../../utils/props.mjs';\nimport '../../../utils/util.mjs';\nimport './menu-collapse-transition.mjs';\nimport SubMenu from './sub-menu.mjs';\nimport { useMenuCssVar } from './use-menu-css-var.mjs';\nimport { isString, isObject } from '@vue/shared';\nimport Resize from '../../../directives/resize/index.mjs';\nimport script from './menu-collapse-transition.vue_vue_type_script_lang.mjs';\nconst menuProps = buildProps({\n  mode: {\n    type: String,\n    values: [\"horizontal\", \"vertical\"],\n    default: \"vertical\"\n  },\n  defaultActive: {\n    type: String,\n    default: \"\"\n  },\n  defaultOpeneds: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  uniqueOpened: Boolean,\n  router: Boolean,\n  menuTrigger: {\n    type: String,\n    values: [\"hover\", \"click\"],\n    default: \"hover\"\n  },\n  collapse: Boolean,\n  backgroundColor: String,\n  textColor: String,\n  activeTextColor: String,\n  collapseTransition: {\n    type: Boolean,\n    default: true\n  },\n  ellipsis: {\n    type: Boolean,\n    default: true\n  }\n});\nconst checkIndexPath = indexPath => Array.isArray(indexPath) && indexPath.every(path => isString(path));\nconst menuEmits = {\n  close: (index, indexPath) => isString(index) && checkIndexPath(indexPath),\n  open: (index, indexPath) => isString(index) && checkIndexPath(indexPath),\n  select: (index, indexPath, item, routerResult) => isString(index) && checkIndexPath(indexPath) && isObject(item) && (routerResult === void 0 || routerResult instanceof Promise)\n};\nvar Menu = defineComponent({\n  name: \"ElMenu\",\n  props: menuProps,\n  emits: menuEmits,\n  setup(props, {\n    emit,\n    slots,\n    expose\n  }) {\n    const instance = getCurrentInstance();\n    const router = instance.appContext.config.globalProperties.$router;\n    const menu = ref();\n    const openedMenus = ref(props.defaultOpeneds && !props.collapse ? props.defaultOpeneds.slice(0) : []);\n    const activeIndex = ref(props.defaultActive);\n    const items = ref({});\n    const subMenus = ref({});\n    const alteredCollapse = ref(false);\n    const isMenuPopup = computed(() => {\n      return props.mode === \"horizontal\" || props.mode === \"vertical\" && props.collapse;\n    });\n    const initMenu = () => {\n      const activeItem = activeIndex.value && items.value[activeIndex.value];\n      if (!activeItem || props.mode === \"horizontal\" || props.collapse) return;\n      const indexPath = activeItem.indexPath;\n      indexPath.forEach(index => {\n        const subMenu = subMenus.value[index];\n        subMenu && openMenu(index, subMenu.indexPath);\n      });\n    };\n    const openMenu = (index, indexPath) => {\n      if (openedMenus.value.includes(index)) return;\n      if (props.uniqueOpened) {\n        openedMenus.value = openedMenus.value.filter(index2 => indexPath.includes(index2));\n      }\n      openedMenus.value.push(index);\n      emit(\"open\", index, indexPath);\n    };\n    const closeMenu = (index, indexPath) => {\n      const i = openedMenus.value.indexOf(index);\n      if (i !== -1) {\n        openedMenus.value.splice(i, 1);\n      }\n      emit(\"close\", index, indexPath);\n    };\n    const handleSubMenuClick = ({\n      index,\n      indexPath\n    }) => {\n      const isOpened = openedMenus.value.includes(index);\n      if (isOpened) {\n        closeMenu(index, indexPath);\n      } else {\n        openMenu(index, indexPath);\n      }\n    };\n    const handleMenuItemClick = menuItem => {\n      if (props.mode === \"horizontal\" || props.collapse) {\n        openedMenus.value = [];\n      }\n      const {\n        index,\n        indexPath\n      } = menuItem;\n      if (index === void 0 || indexPath === void 0) return;\n      if (props.router && router) {\n        const route = menuItem.route || index;\n        const routerResult = router.push(route).then(res => {\n          if (!res) activeIndex.value = index;\n          return res;\n        });\n        emit(\"select\", index, indexPath, {\n          index,\n          indexPath,\n          route\n        }, routerResult);\n      } else {\n        activeIndex.value = index;\n        emit(\"select\", index, indexPath, {\n          index,\n          indexPath\n        });\n      }\n    };\n    const updateActiveIndex = val => {\n      const itemsInData = items.value;\n      const item = itemsInData[val] || activeIndex.value && itemsInData[activeIndex.value] || itemsInData[props.defaultActive];\n      if (item) {\n        activeIndex.value = item.index;\n        initMenu();\n      } else {\n        if (!alteredCollapse.value) {\n          activeIndex.value = void 0;\n        } else {\n          alteredCollapse.value = false;\n        }\n      }\n    };\n    const handleResize = () => {\n      nextTick(() => instance.proxy.$forceUpdate());\n    };\n    watch(() => props.defaultActive, currentActive => {\n      if (!items.value[currentActive]) {\n        activeIndex.value = \"\";\n      }\n      updateActiveIndex(currentActive);\n    });\n    watch(items.value, () => initMenu());\n    watch(() => props.collapse, (value, prev) => {\n      if (value !== prev) {\n        alteredCollapse.value = true;\n      }\n      if (value) openedMenus.value = [];\n    });\n    {\n      const addSubMenu = item => {\n        subMenus.value[item.index] = item;\n      };\n      const removeSubMenu = item => {\n        delete subMenus.value[item.index];\n      };\n      const addMenuItem = item => {\n        items.value[item.index] = item;\n      };\n      const removeMenuItem = item => {\n        delete items.value[item.index];\n      };\n      provide(\"rootMenu\", reactive({\n        props,\n        openedMenus,\n        items,\n        subMenus,\n        activeIndex,\n        isMenuPopup,\n        addMenuItem,\n        removeMenuItem,\n        addSubMenu,\n        removeSubMenu,\n        openMenu,\n        closeMenu,\n        handleMenuItemClick,\n        handleSubMenuClick\n      }));\n      provide(`subMenu:${instance.uid}`, {\n        addSubMenu,\n        removeSubMenu\n      });\n    }\n    onMounted(() => {\n      initMenu();\n      if (props.mode === \"horizontal\") {\n        new Menu$1(instance.vnode.el);\n      }\n    });\n    {\n      const open = index => {\n        const {\n          indexPath\n        } = subMenus.value[index];\n        indexPath.forEach(i => openMenu(i, indexPath));\n      };\n      expose({\n        open,\n        close: closeMenu,\n        handleResize\n      });\n    }\n    const flattedChildren = children => {\n      const vnodes = Array.isArray(children) ? children : [children];\n      const result = [];\n      vnodes.forEach(child => {\n        if (Array.isArray(child.children)) {\n          result.push(...flattedChildren(child.children));\n        } else {\n          result.push(child);\n        }\n      });\n      return result;\n    };\n    const useVNodeResize = vnode => props.mode === \"horizontal\" ? withDirectives(vnode, [[Resize, handleResize]]) : vnode;\n    return () => {\n      var _a, _b, _c, _d;\n      let slot = (_b = (_a = slots.default) == null ? void 0 : _a.call(slots)) != null ? _b : [];\n      const vShowMore = [];\n      if (props.mode === \"horizontal\" && menu.value) {\n        const items2 = Array.from((_d = (_c = menu.value) == null ? void 0 : _c.childNodes) != null ? _d : []).filter(item => item.nodeName !== \"#text\" || item.nodeValue);\n        const originalSlot = flattedChildren(slot);\n        const moreItemWidth = 64;\n        const paddingLeft = parseInt(getComputedStyle(menu.value).paddingLeft, 10);\n        const paddingRight = parseInt(getComputedStyle(menu.value).paddingRight, 10);\n        const menuWidth = menu.value.clientWidth - paddingLeft - paddingRight;\n        let calcWidth = 0;\n        let sliceIndex = 0;\n        items2.forEach((item, index) => {\n          calcWidth += item.offsetWidth || 0;\n          if (calcWidth <= menuWidth - moreItemWidth) {\n            sliceIndex = index + 1;\n          }\n        });\n        const slotDefault = originalSlot.slice(0, sliceIndex);\n        const slotMore = originalSlot.slice(sliceIndex);\n        if ((slotMore == null ? void 0 : slotMore.length) && props.ellipsis) {\n          slot = slotDefault;\n          vShowMore.push(h(SubMenu, {\n            index: \"sub-menu-more\",\n            class: \"el-sub-menu__hide-arrow\"\n          }, {\n            title: () => h(ElIcon, {\n              class: [\"el-sub-menu__icon-more\"]\n            }, {\n              default: () => h(More)\n            }),\n            default: () => slotMore\n          }));\n        }\n      }\n      const ulStyle = useMenuCssVar(props);\n      const resizeMenu = vNode => props.ellipsis ? useVNodeResize(vNode) : vNode;\n      const vMenu = resizeMenu(h(\"ul\", {\n        key: String(props.collapse),\n        role: \"menubar\",\n        ref: menu,\n        style: ulStyle.value,\n        class: {\n          \"el-menu\": true,\n          \"el-menu--horizontal\": props.mode === \"horizontal\",\n          \"el-menu--collapse\": props.collapse\n        }\n      }, [...slot.map(vnode => resizeMenu(vnode)), ...vShowMore]));\n      if (props.collapseTransition && props.mode === \"vertical\") {\n        return h(script, () => vMenu);\n      }\n      return vMenu;\n    };\n  }\n});\nexport { Menu as default, menuEmits, menuProps };","map":{"version":3,"names":["menuProps","buildProps","mode","type","String","values","default","defaultActive","defaultOpeneds","definePropType","Array","mutable","uniqueOpened","Boolean","router","menuTrigger","collapse","backgroundColor","textColor","activeTextColor","collapseTransition","ellipsis","checkIndexPath","indexPath","isArray","every","path","isString","menuEmits","close","index","open","select","item","routerResult","isObject","Promise","Menu","defineComponent","name","props","emits","setup","emit","slots","expose","instance","getCurrentInstance","appContext","config","globalProperties","$router","menu","ref","openedMenus","slice","activeIndex","items","subMenus","alteredCollapse","isMenuPopup","computed","initMenu","activeItem","value","forEach","subMenu","openMenu","includes","filter","index2","push","closeMenu","i","indexOf","splice","handleSubMenuClick","isOpened","handleMenuItemClick","menuItem","route","then","res","updateActiveIndex","val","itemsInData","handleResize","nextTick","proxy","$forceUpdate","watch","currentActive","prev","addSubMenu","removeSubMenu","addMenuItem","removeMenuItem","provide","reactive","uid","onMounted","Menu$1","vnode","el","flattedChildren","children","vnodes","result","child","useVNodeResize","withDirectives","Resize","_a","_b","_c","_d","slot","call","vShowMore","items2","from","childNodes","nodeName","nodeValue","originalSlot","moreItemWidth","paddingLeft","parseInt","getComputedStyle","paddingRight","menuWidth","clientWidth","calcWidth","sliceIndex","offsetWidth","slotDefault","slotMore","length","h","SubMenu","class","title","ElIcon","More","ulStyle","useMenuCssVar","resizeMenu","vNode","vMenu","key","role","style","map","script"],"sources":["../../../../../../packages/components/menu/src/menu.ts"],"sourcesContent":["import {\n  defineComponent,\n  getCurrentInstance,\n  watch,\n  computed,\n  ref,\n  provide,\n  onMounted,\n  h,\n  withDirectives,\n  reactive,\n  nextTick,\n} from 'vue'\nimport { Resize } from '@element-plus/directives'\nimport ElIcon from '@element-plus/components/icon'\nimport { More } from '@element-plus/icons-vue'\nimport Menubar from '@element-plus/utils/menu/menu-bar'\nimport { buildProps, definePropType, mutable } from '@element-plus/utils/props'\nimport { isString, isObject } from '@element-plus/utils/util'\nimport ElMenuCollapseTransition from './menu-collapse-transition.vue'\nimport ElSubMenu from './sub-menu'\nimport { useMenuCssVar } from './use-menu-css-var'\n\nimport type { MenuItemClicked, MenuProvider, SubMenuProvider } from './types'\nimport type { NavigationFailure, Router } from 'vue-router'\nimport type { VNode, ExtractPropTypes, VNodeNormalizedChildren } from 'vue'\n\nexport const menuProps = buildProps({\n  mode: {\n    type: String,\n    values: ['horizontal', 'vertical'],\n    default: 'vertical',\n  },\n  defaultActive: {\n    type: String,\n    default: '',\n  },\n  defaultOpeneds: {\n    type: definePropType<string[]>(Array),\n    default: () => mutable([] as const),\n  },\n  uniqueOpened: Boolean,\n  router: Boolean,\n  menuTrigger: {\n    type: String,\n    values: ['hover', 'click'],\n    default: 'hover',\n  },\n  collapse: Boolean,\n  backgroundColor: String,\n  textColor: String,\n  activeTextColor: String,\n  collapseTransition: {\n    type: Boolean,\n    default: true,\n  },\n  ellipsis: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\nexport type MenuProps = ExtractPropTypes<typeof menuProps>\n\nconst checkIndexPath = (indexPath: unknown): indexPath is string[] =>\n  Array.isArray(indexPath) && indexPath.every((path) => isString(path))\n\nexport const menuEmits = {\n  close: (index: string, indexPath: string[]) =>\n    isString(index) && checkIndexPath(indexPath),\n\n  open: (index: string, indexPath: string[]) =>\n    isString(index) && checkIndexPath(indexPath),\n\n  select: (\n    index: string,\n    indexPath: string[],\n    item: MenuItemClicked,\n    routerResult?: Promise<void | NavigationFailure>\n  ) =>\n    isString(index) &&\n    checkIndexPath(indexPath) &&\n    isObject(item) &&\n    (routerResult === undefined || routerResult instanceof Promise),\n}\nexport type MenuEmits = typeof menuEmits\n\nexport default defineComponent({\n  name: 'ElMenu',\n\n  props: menuProps,\n  emits: menuEmits,\n\n  setup(props, { emit, slots, expose }) {\n    const instance = getCurrentInstance()!\n    const router = instance.appContext.config.globalProperties.$router as Router\n    const menu = ref<HTMLUListElement>()\n\n    // data\n    const openedMenus = ref<MenuProvider['openedMenus']>(\n      props.defaultOpeneds && !props.collapse\n        ? props.defaultOpeneds.slice(0)\n        : []\n    )\n    const activeIndex = ref<MenuProvider['activeIndex']>(props.defaultActive)\n    const items = ref<MenuProvider['items']>({})\n    const subMenus = ref<MenuProvider['subMenus']>({})\n\n    const alteredCollapse = ref(false)\n\n    // computed\n    const isMenuPopup = computed<MenuProvider['isMenuPopup']>(() => {\n      return (\n        props.mode === 'horizontal' ||\n        (props.mode === 'vertical' && props.collapse)\n      )\n    })\n\n    // methods\n    const initMenu = () => {\n      const activeItem = activeIndex.value && items.value[activeIndex.value]\n      if (!activeItem || props.mode === 'horizontal' || props.collapse) return\n\n      const indexPath = activeItem.indexPath\n\n      // 展开该菜单项的路径上所有子菜单\n      // expand all subMenus of the menu item\n      indexPath.forEach((index) => {\n        const subMenu = subMenus.value[index]\n        subMenu && openMenu(index, subMenu.indexPath)\n      })\n    }\n\n    const openMenu: MenuProvider['openMenu'] = (index, indexPath) => {\n      if (openedMenus.value.includes(index)) return\n      // 将不在该菜单路径下的其余菜单收起\n      // collapse all menu that are not under current menu item\n      if (props.uniqueOpened) {\n        openedMenus.value = openedMenus.value.filter((index: string) =>\n          indexPath.includes(index)\n        )\n      }\n      openedMenus.value.push(index)\n      emit('open', index, indexPath)\n    }\n\n    const closeMenu: MenuProvider['closeMenu'] = (index, indexPath) => {\n      const i = openedMenus.value.indexOf(index)\n      if (i !== -1) {\n        openedMenus.value.splice(i, 1)\n      }\n      emit('close', index, indexPath)\n    }\n\n    const handleSubMenuClick: MenuProvider['handleSubMenuClick'] = ({\n      index,\n      indexPath,\n    }) => {\n      const isOpened = openedMenus.value.includes(index)\n\n      if (isOpened) {\n        closeMenu(index, indexPath)\n      } else {\n        openMenu(index, indexPath)\n      }\n    }\n\n    const handleMenuItemClick: MenuProvider['handleMenuItemClick'] = (\n      menuItem\n    ) => {\n      if (props.mode === 'horizontal' || props.collapse) {\n        openedMenus.value = []\n      }\n\n      const { index, indexPath } = menuItem\n      if (index === undefined || indexPath === undefined) return\n\n      if (props.router && router) {\n        const route = menuItem.route || index\n        const routerResult = router.push(route).then((res) => {\n          if (!res) activeIndex.value = index\n          return res\n        })\n        emit(\n          'select',\n          index,\n          indexPath,\n          { index, indexPath, route },\n          routerResult\n        )\n      } else {\n        activeIndex.value = index\n        emit('select', index, indexPath, { index, indexPath })\n      }\n    }\n\n    const updateActiveIndex = (val: string) => {\n      const itemsInData = items.value\n      const item =\n        itemsInData[val] ||\n        (activeIndex.value && itemsInData[activeIndex.value]) ||\n        itemsInData[props.defaultActive]\n\n      if (item) {\n        activeIndex.value = item.index\n        initMenu()\n      } else {\n        // Can't find item when collapsing\n        // and activeIndex shouldn't be changed when 'collapse' was changed.\n        // Then reset 'alteredCollapse' immediately.\n        if (!alteredCollapse.value) {\n          activeIndex.value = undefined\n        } else {\n          alteredCollapse.value = false\n        }\n      }\n    }\n    const handleResize = () => {\n      nextTick(() => instance.proxy!.$forceUpdate())\n    }\n\n    watch(\n      () => props.defaultActive,\n      (currentActive) => {\n        if (!items.value[currentActive]) {\n          activeIndex.value = ''\n        }\n        updateActiveIndex(currentActive)\n      }\n    )\n\n    watch(items.value, () => initMenu())\n\n    watch(\n      () => props.collapse,\n      (value, prev) => {\n        if (value !== prev) {\n          alteredCollapse.value = true\n        }\n        if (value) openedMenus.value = []\n      }\n    )\n\n    // provide\n    {\n      const addSubMenu: MenuProvider['addSubMenu'] = (item) => {\n        subMenus.value[item.index] = item\n      }\n\n      const removeSubMenu: MenuProvider['removeSubMenu'] = (item) => {\n        delete subMenus.value[item.index]\n      }\n\n      const addMenuItem: MenuProvider['addMenuItem'] = (item) => {\n        items.value[item.index] = item\n      }\n\n      const removeMenuItem: MenuProvider['removeMenuItem'] = (item) => {\n        delete items.value[item.index]\n      }\n      provide<MenuProvider>(\n        'rootMenu',\n        reactive({\n          props,\n          openedMenus,\n          items,\n          subMenus,\n          activeIndex,\n          isMenuPopup,\n\n          addMenuItem,\n          removeMenuItem,\n          addSubMenu,\n          removeSubMenu,\n          openMenu,\n          closeMenu,\n          handleMenuItemClick,\n          handleSubMenuClick,\n        })\n      )\n      provide<SubMenuProvider>(`subMenu:${instance.uid}`, {\n        addSubMenu,\n        removeSubMenu,\n      })\n    }\n\n    // lifecycle\n    onMounted(() => {\n      initMenu()\n      if (props.mode === 'horizontal') {\n        new Menubar(instance.vnode.el!)\n      }\n    })\n\n    {\n      const open = (index: string) => {\n        const { indexPath } = subMenus.value[index]\n        indexPath.forEach((i) => openMenu(i, indexPath))\n      }\n      expose({\n        open,\n        close: closeMenu,\n        handleResize,\n      })\n    }\n\n    const flattedChildren = (children: VNodeNormalizedChildren) => {\n      const vnodes = Array.isArray(children) ? children : [children]\n      const result: any[] = []\n      vnodes.forEach((child: any) => {\n        if (Array.isArray(child.children)) {\n          result.push(...flattedChildren(child.children))\n        } else {\n          result.push(child)\n        }\n      })\n      return result\n    }\n\n    const useVNodeResize = (vnode: VNode) =>\n      props.mode === 'horizontal'\n        ? withDirectives(vnode, [[Resize, handleResize]])\n        : vnode\n    return () => {\n      let slot = slots.default?.() ?? []\n      const vShowMore: VNode[] = []\n\n      if (props.mode === 'horizontal' && menu.value) {\n        const items = Array.from(menu.value?.childNodes ?? []).filter(\n          (item) => item.nodeName !== '#text' || item.nodeValue\n        ) as HTMLElement[]\n        const originalSlot = flattedChildren(slot)\n        const moreItemWidth = 64\n        const paddingLeft = parseInt(\n          getComputedStyle(menu.value).paddingLeft,\n          10\n        )\n        const paddingRight = parseInt(\n          getComputedStyle(menu.value).paddingRight,\n          10\n        )\n        const menuWidth = menu.value.clientWidth - paddingLeft - paddingRight\n        let calcWidth = 0\n        let sliceIndex = 0\n        items.forEach((item, index) => {\n          calcWidth += item.offsetWidth || 0\n          if (calcWidth <= menuWidth - moreItemWidth) {\n            sliceIndex = index + 1\n          }\n        })\n        const slotDefault = originalSlot.slice(0, sliceIndex)\n        const slotMore = originalSlot.slice(sliceIndex)\n        if (slotMore?.length && props.ellipsis) {\n          slot = slotDefault\n          vShowMore.push(\n            h(\n              ElSubMenu,\n              {\n                index: 'sub-menu-more',\n                class: 'el-sub-menu__hide-arrow',\n              },\n              {\n                title: () =>\n                  h(\n                    ElIcon,\n                    {\n                      class: ['el-sub-menu__icon-more'],\n                    },\n                    { default: () => h(More) }\n                  ),\n                default: () => slotMore,\n              }\n            )\n          )\n        }\n      }\n\n      const ulStyle = useMenuCssVar(props)\n\n      const resizeMenu = (vNode: VNode) =>\n        props.ellipsis ? useVNodeResize(vNode) : vNode\n\n      const vMenu = resizeMenu(\n        h(\n          'ul',\n          {\n            key: String(props.collapse),\n            role: 'menubar',\n            ref: menu,\n            style: ulStyle.value,\n            class: {\n              'el-menu': true,\n              'el-menu--horizontal': props.mode === 'horizontal',\n              'el-menu--collapse': props.collapse,\n            },\n          },\n          [...slot.map((vnode) => resizeMenu(vnode)), ...vShowMore]\n        )\n      )\n\n      if (props.collapseTransition && props.mode === 'vertical') {\n        return h(ElMenuCollapseTransition, () => vMenu)\n      }\n\n      return vMenu\n    }\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}