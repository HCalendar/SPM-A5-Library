{"ast":null,"code":"import { buildProps, definePropType, mutable } from '../../../utils/props.mjs';\nimport { isNumber } from '../../../utils/util.mjs';\nconst imageProps = buildProps({\n  appendToBody: {\n    type: Boolean,\n    default: false\n  },\n  hideOnClickModal: {\n    type: Boolean,\n    default: false\n  },\n  src: {\n    type: String,\n    default: \"\"\n  },\n  fit: {\n    type: String,\n    values: [\"\", \"contain\", \"cover\", \"fill\", \"none\", \"scale-down\"],\n    default: \"\"\n  },\n  lazy: {\n    type: Boolean,\n    default: false\n  },\n  scrollContainer: {\n    type: definePropType([String, Object])\n  },\n  previewSrcList: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  zIndex: {\n    type: Number,\n    default: 2e3\n  },\n  initialIndex: {\n    type: Number,\n    default: 0\n  }\n});\nconst imageEmits = {\n  error: evt => evt instanceof Event,\n  switch: val => isNumber(val),\n  close: () => true\n};\nexport { imageEmits, imageProps };","map":{"version":3,"names":["imageProps","buildProps","appendToBody","type","Boolean","default","hideOnClickModal","src","String","fit","values","lazy","scrollContainer","definePropType","Object","previewSrcList","Array","mutable","zIndex","Number","initialIndex","imageEmits","error","evt","Event","switch","val","isNumber","close"],"sources":["../../../../../../packages/components/image/src/image.ts"],"sourcesContent":["import { buildProps, definePropType, mutable } from '@element-plus/utils/props'\nimport { isNumber } from '@element-plus/utils/util'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const imageProps = buildProps({\n  appendToBody: {\n    type: Boolean,\n    default: false,\n  },\n  hideOnClickModal: {\n    type: Boolean,\n    default: false,\n  },\n  src: {\n    type: String,\n    default: '',\n  },\n  fit: {\n    type: String,\n    values: ['', 'contain', 'cover', 'fill', 'none', 'scale-down'],\n    default: '',\n  },\n  lazy: {\n    type: Boolean,\n    default: false,\n  },\n  scrollContainer: {\n    type: definePropType<string | HTMLElement | undefined>([String, Object]),\n  },\n  previewSrcList: {\n    type: definePropType<string[]>(Array),\n    default: () => mutable([] as const),\n  },\n  zIndex: {\n    type: Number,\n    default: 2000,\n  },\n  initialIndex: {\n    type: Number,\n    default: 0,\n  },\n} as const)\nexport type ImageProps = ExtractPropTypes<typeof imageProps>\n\nexport const imageEmits = {\n  error: (evt: Event) => evt instanceof Event,\n  switch: (val: number) => isNumber(val),\n  close: () => true,\n}\nexport type ImageEmits = typeof imageEmits\n"],"mappings":";;MAKaA,UAAA,GAAaC,UAAA,CAAW;EACnCC,YAAA,EAAc;IACZC,IAAA,EAAMC,OAAA;IACNC,OAAA,EAAS;EAAA;EAEXC,gBAAA,EAAkB;IAChBH,IAAA,EAAMC,OAAA;IACNC,OAAA,EAAS;EAAA;EAEXE,GAAA,EAAK;IACHJ,IAAA,EAAMK,MAAA;IACNH,OAAA,EAAS;EAAA;EAEXI,GAAA,EAAK;IACHN,IAAA,EAAMK,MAAA;IACNE,MAAA,EAAQ,CAAC,IAAI,WAAW,SAAS,QAAQ,QAAQ;IACjDL,OAAA,EAAS;EAAA;EAEXM,IAAA,EAAM;IACJR,IAAA,EAAMC,OAAA;IACNC,OAAA,EAAS;EAAA;EAEXO,eAAA,EAAiB;IACfT,IAAA,EAAMU,cAAA,CAAiD,CAACL,MAAA,EAAQM,MAAA;EAAA;EAElEC,cAAA,EAAgB;IACdZ,IAAA,EAAMU,cAAA,CAAyBG,KAAA;IAC/BX,OAAA,EAASA,CAAA,KAAMY,OAAA,CAAQ;EAAA;EAEzBC,MAAA,EAAQ;IACNf,IAAA,EAAMgB,MAAA;IACNd,OAAA,EAAS;EAAA;EAEXe,YAAA,EAAc;IACZjB,IAAA,EAAMgB,MAAA;IACNd,OAAA,EAAS;EAAA;AAAA;MAKAgB,UAAA,GAAa;EACxBC,KAAA,EAAQC,GAAA,IAAeA,GAAA,YAAeC,KAAA;EACtCC,MAAA,EAASC,GAAA,IAAgBC,QAAA,CAASD,GAAA;EAClCE,KAAA,EAAOA,CAAA,KAAM;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}