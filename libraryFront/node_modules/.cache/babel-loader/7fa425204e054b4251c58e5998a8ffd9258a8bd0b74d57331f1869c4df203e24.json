{"ast":null,"code":"import { defineComponent, ref, computed } from 'vue';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport _Popper from '../../popper/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { popconfirmProps, popconfirmEmits } from './popconfirm.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { Effect } from '../../popper/src/use-popper/defaults.mjs';\nvar script = defineComponent({\n  name: \"ElPopconfirm\",\n  components: {\n    ElButton,\n    ElPopper: _Popper,\n    ElIcon\n  },\n  props: popconfirmProps,\n  emits: popconfirmEmits,\n  setup(props, {\n    emit\n  }) {\n    const {\n      t\n    } = useLocale();\n    const visible = ref(false);\n    const confirm = () => {\n      visible.value = false;\n      emit(\"confirm\");\n    };\n    const cancel = () => {\n      visible.value = false;\n      emit(\"cancel\");\n    };\n    const finalConfirmButtonText = computed(() => props.confirmButtonText || t(\"el.popconfirm.confirmButtonText\"));\n    const finalCancelButtonText = computed(() => props.cancelButtonText || t(\"el.popconfirm.cancelButtonText\"));\n    return {\n      Effect,\n      visible,\n      finalConfirmButtonText,\n      finalCancelButtonText,\n      confirm,\n      cancel\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","components","ElButton","ElPopper","_Popper","ElIcon","props","popconfirmProps","emits","popconfirmEmits","setup","emit","t","useLocale","visible","ref","confirm","value","cancel","finalConfirmButtonText","computed","confirmButtonText","finalCancelButtonText","cancelButtonText","Effect"],"sources":["../../../../../../packages/components/popconfirm/src/popconfirm.vue"],"sourcesContent":["<template>\n  <el-popper\n    v-model:visible=\"visible\"\n    trigger=\"click\"\n    :effect=\"Effect.LIGHT\"\n    popper-class=\"el-popover\"\n    append-to-body\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n  >\n    <div class=\"el-popconfirm\">\n      <div class=\"el-popconfirm__main\">\n        <el-icon\n          v-if=\"!hideIcon && icon\"\n          class=\"el-popconfirm__icon\"\n          :style=\"{ color: iconColor }\"\n        >\n          <component :is=\"icon\" />\n        </el-icon>\n        {{ title }}\n      </div>\n      <div class=\"el-popconfirm__action\">\n        <el-button size=\"mini\" :type=\"cancelButtonType\" @click=\"cancel\">\n          {{ finalCancelButtonText }}\n        </el-button>\n        <el-button size=\"mini\" :type=\"confirmButtonType\" @click=\"confirm\">\n          {{ finalConfirmButtonText }}\n        </el-button>\n      </div>\n    </div>\n    <template #trigger>\n      <slot name=\"reference\"></slot>\n    </template>\n  </el-popper>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed } from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElIcon from '@element-plus/components/icon'\nimport ElPopper, { Effect } from '@element-plus/components/popper'\nimport { useLocale } from '@element-plus/hooks'\nimport { popconfirmProps, popconfirmEmits } from './popconfirm'\n\nexport default defineComponent({\n  name: 'ElPopconfirm',\n\n  components: {\n    ElButton,\n    ElPopper,\n    ElIcon,\n  },\n\n  props: popconfirmProps,\n  emits: popconfirmEmits,\n\n  setup(props, { emit }) {\n    const { t } = useLocale()\n    const visible = ref(false)\n    const confirm = () => {\n      visible.value = false\n      emit('confirm')\n    }\n    const cancel = () => {\n      visible.value = false\n      emit('cancel')\n    }\n    const finalConfirmButtonText = computed(\n      () => props.confirmButtonText || t('el.popconfirm.confirmButtonText')\n    )\n    const finalCancelButtonText = computed(\n      () => props.cancelButtonText || t('el.popconfirm.cancelButtonText')\n    )\n\n    return {\n      Effect,\n      visible,\n\n      finalConfirmButtonText,\n      finalCancelButtonText,\n\n      confirm,\n      cancel,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;AA2CA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EAENC,UAAA,EAAY;IACVC,QAAA;IAAAC,QAAA,EACAC,OAAA;IACAC;EAAA;EAGFC,KAAA,EAAOC,eAAA;EACPC,KAAA,EAAOC,eAAA;EAEPC,MAAMJ,KAAA,EAAO;IAAEK;EAAA,GAAQ;IACrB,MAAM;MAAEC;IAAA,IAAMC,SAAA;IACd,MAAMC,OAAA,GAAUC,GAAA,CAAI;IACpB,MAAMC,OAAA,GAAUA,CAAA,KAAM;MACpBF,OAAA,CAAQG,KAAA,GAAQ;MAChBN,IAAA,CAAK;IAAA;IAEP,MAAMO,MAAA,GAASA,CAAA,KAAM;MACnBJ,OAAA,CAAQG,KAAA,GAAQ;MAChBN,IAAA,CAAK;IAAA;IAEP,MAAMQ,sBAAA,GAAyBC,QAAA,CAC7B,MAAMd,KAAA,CAAMe,iBAAA,IAAqBT,CAAA,CAAE;IAErC,MAAMU,qBAAA,GAAwBF,QAAA,CAC5B,MAAMd,KAAA,CAAMiB,gBAAA,IAAoBX,CAAA,CAAE;IAGpC,OAAO;MACLY,MAAA;MACAV,OAAA;MAEAK,sBAAA;MACAG,qBAAA;MAEAN,OAAA;MACAE;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}