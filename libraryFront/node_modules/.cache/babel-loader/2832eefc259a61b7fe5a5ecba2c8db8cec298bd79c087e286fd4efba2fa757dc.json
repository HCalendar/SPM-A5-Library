{"ast":null,"code":"import { buildProps, definePropType } from '../../../utils/props.mjs';\nconst notificationTypes = [\"success\", \"info\", \"warning\", \"error\"];\nconst notificationProps = buildProps({\n  customClass: {\n    type: String,\n    default: \"\"\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: false\n  },\n  duration: {\n    type: Number,\n    default: 4500\n  },\n  icon: {\n    type: definePropType([String, Object]),\n    default: \"\"\n  },\n  id: {\n    type: String,\n    default: \"\"\n  },\n  message: {\n    type: definePropType([String, Object]),\n    default: \"\"\n  },\n  offset: {\n    type: Number,\n    default: 0\n  },\n  onClick: {\n    type: definePropType(Function),\n    default: () => void 0\n  },\n  onClose: {\n    type: definePropType(Function),\n    required: true\n  },\n  position: {\n    type: String,\n    values: [\"top-right\", \"top-left\", \"bottom-right\", \"bottom-left\"],\n    default: \"top-right\"\n  },\n  showClose: {\n    type: Boolean,\n    default: true\n  },\n  title: {\n    type: String,\n    default: \"\"\n  },\n  type: {\n    type: String,\n    values: [...notificationTypes, \"\"],\n    default: \"\"\n  },\n  zIndex: {\n    type: Number,\n    default: 0\n  }\n});\nconst notificationEmits = {\n  destroy: () => true\n};\nexport { notificationEmits, notificationProps, notificationTypes };","map":{"version":3,"names":["notificationTypes","notificationProps","buildProps","customClass","type","String","default","dangerouslyUseHTMLString","Boolean","duration","Number","icon","definePropType","Object","id","message","offset","onClick","Function","onClose","required","position","values","showClose","title","zIndex","notificationEmits","destroy"],"sources":["../../../../../../packages/components/notification/src/notification.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils/props'\n\nimport type { VNode, ExtractPropTypes } from 'vue'\n\nexport const notificationTypes = [\n  'success',\n  'info',\n  'warning',\n  'error',\n] as const\n\nexport const notificationProps = buildProps({\n  customClass: {\n    type: String,\n    default: '',\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: false,\n  },\n  duration: {\n    type: Number,\n    default: 4500,\n  },\n  icon: {\n    type: definePropType<string | Comment>([String, Object]),\n    default: '',\n  },\n  id: {\n    type: String,\n    default: '',\n  },\n  message: {\n    type: definePropType<string | VNode>([String, Object]),\n    default: '',\n  },\n  offset: {\n    type: Number,\n    default: 0,\n  },\n  onClick: {\n    type: definePropType<() => void>(Function),\n    default: () => undefined,\n  },\n  onClose: {\n    type: definePropType<() => void>(Function),\n    required: true,\n  },\n  position: {\n    type: String,\n    values: ['top-right', 'top-left', 'bottom-right', 'bottom-left'],\n    default: 'top-right',\n  },\n  showClose: {\n    type: Boolean,\n    default: true,\n  },\n  title: {\n    type: String,\n    default: '',\n  },\n  type: {\n    type: String,\n    values: [...notificationTypes, ''],\n    default: '',\n  },\n  zIndex: {\n    type: Number,\n    default: 0,\n  },\n} as const)\nexport type NotificationProps = ExtractPropTypes<typeof notificationProps>\n\nexport const notificationEmits = {\n  destroy: () => true,\n}\nexport type NotificationEmits = typeof notificationEmits\n\nexport type NotificationOptions = Omit<NotificationProps, 'id'> & {\n  appendTo?: HTMLElement | string\n}\nexport type NotificationOptionsTyped = Omit<NotificationOptions, 'type'>\n\nexport interface NotificationHandle {\n  close: () => void\n}\n\nexport type NotificationParams = Partial<NotificationOptions> | string | VNode\nexport type NotificationParamsTyped =\n  | Partial<NotificationOptionsTyped>\n  | string\n  | VNode\n\nexport type NotifyFn = ((\n  options?: NotificationParams\n) => NotificationHandle) & { closeAll: () => void }\n\nexport type NotifyTypedFn = (\n  options?: NotificationParamsTyped\n) => NotificationHandle\n\nexport interface Notify extends NotifyFn {\n  success: NotifyTypedFn\n  warning: NotifyTypedFn\n  error: NotifyTypedFn\n  info: NotifyTypedFn\n}\n\nexport interface NotificationQueueItem {\n  vm: VNode\n}\n\nexport type NotificationQueue = NotificationQueueItem[]\n"],"mappings":";MAIaA,iBAAA,GAAoB,CAC/B,WACA,QACA,WACA;MAGWC,iBAAA,GAAoBC,UAAA,CAAW;EAC1CC,WAAA,EAAa;IACXC,IAAA,EAAMC,MAAA;IACNC,OAAA,EAAS;EAAA;EAEXC,wBAAA,EAA0B;IACxBH,IAAA,EAAMI,OAAA;IACNF,OAAA,EAAS;EAAA;EAEXG,QAAA,EAAU;IACRL,IAAA,EAAMM,MAAA;IACNJ,OAAA,EAAS;EAAA;EAEXK,IAAA,EAAM;IACJP,IAAA,EAAMQ,cAAA,CAAiC,CAACP,MAAA,EAAQQ,MAAA;IAChDP,OAAA,EAAS;EAAA;EAEXQ,EAAA,EAAI;IACFV,IAAA,EAAMC,MAAA;IACNC,OAAA,EAAS;EAAA;EAEXS,OAAA,EAAS;IACPX,IAAA,EAAMQ,cAAA,CAA+B,CAACP,MAAA,EAAQQ,MAAA;IAC9CP,OAAA,EAAS;EAAA;EAEXU,MAAA,EAAQ;IACNZ,IAAA,EAAMM,MAAA;IACNJ,OAAA,EAAS;EAAA;EAEXW,OAAA,EAAS;IACPb,IAAA,EAAMQ,cAAA,CAA2BM,QAAA;IACjCZ,OAAA,EAASA,CAAA,KAAM;EAAA;EAEjBa,OAAA,EAAS;IACPf,IAAA,EAAMQ,cAAA,CAA2BM,QAAA;IACjCE,QAAA,EAAU;EAAA;EAEZC,QAAA,EAAU;IACRjB,IAAA,EAAMC,MAAA;IACNiB,MAAA,EAAQ,CAAC,aAAa,YAAY,gBAAgB;IAClDhB,OAAA,EAAS;EAAA;EAEXiB,SAAA,EAAW;IACTnB,IAAA,EAAMI,OAAA;IACNF,OAAA,EAAS;EAAA;EAEXkB,KAAA,EAAO;IACLpB,IAAA,EAAMC,MAAA;IACNC,OAAA,EAAS;EAAA;EAEXF,IAAA,EAAM;IACJA,IAAA,EAAMC,MAAA;IACNiB,MAAA,EAAQ,CAAC,GAAGtB,iBAAA,EAAmB;IAC/BM,OAAA,EAAS;EAAA;EAEXmB,MAAA,EAAQ;IACNrB,IAAA,EAAMM,MAAA;IACNJ,OAAA,EAAS;EAAA;AAAA;MAKAoB,iBAAA,GAAoB;EAC/BC,OAAA,EAASA,CAAA,KAAM;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}