{"ast":null,"code":"import { getCurrentInstance, watch } from 'vue';\nimport { hasOwn } from '@vue/shared';\nimport { parseWidth, parseMinWidth } from '../util.mjs';\nfunction useWatcher(owner, props_) {\n  const instance = getCurrentInstance();\n  const registerComplexWatchers = () => {\n    const props = [\"fixed\"];\n    const aliases = {\n      realWidth: \"width\",\n      realMinWidth: \"minWidth\"\n    };\n    const allAliases = props.reduce((prev, cur) => {\n      prev[cur] = cur;\n      return prev;\n    }, aliases);\n    Object.keys(allAliases).forEach(key => {\n      const columnKey = aliases[key];\n      if (hasOwn(props_, columnKey)) {\n        watch(() => props_[columnKey], newVal => {\n          let value = newVal;\n          if (columnKey === \"width\" && key === \"realWidth\") {\n            value = parseWidth(newVal);\n          }\n          if (columnKey === \"minWidth\" && key === \"realMinWidth\") {\n            value = parseMinWidth(newVal);\n          }\n          instance.columnConfig.value[columnKey] = value;\n          instance.columnConfig.value[key] = value;\n          const updateColumns = columnKey === \"fixed\";\n          owner.value.store.scheduleLayout(updateColumns);\n        });\n      }\n    });\n  };\n  const registerNormalWatchers = () => {\n    const props = [\"label\", \"filters\", \"filterMultiple\", \"sortable\", \"index\", \"formatter\", \"className\", \"labelClassName\", \"showOverflowTooltip\"];\n    const aliases = {\n      property: \"prop\",\n      align: \"realAlign\",\n      headerAlign: \"realHeaderAlign\"\n    };\n    const allAliases = props.reduce((prev, cur) => {\n      prev[cur] = cur;\n      return prev;\n    }, aliases);\n    Object.keys(allAliases).forEach(key => {\n      const columnKey = aliases[key];\n      if (hasOwn(props_, columnKey)) {\n        watch(() => props_[columnKey], newVal => {\n          instance.columnConfig.value[key] = newVal;\n        });\n      }\n    });\n  };\n  return {\n    registerComplexWatchers,\n    registerNormalWatchers\n  };\n}\nexport { useWatcher as default };","map":{"version":3,"names":["useWatcher","owner","props_","instance","getCurrentInstance","registerComplexWatchers","props","aliases","realWidth","realMinWidth","allAliases","reduce","prev","cur","Object","keys","forEach","key","columnKey","hasOwn","watch","newVal","value","parseWidth","parseMinWidth","columnConfig","updateColumns","store","scheduleLayout","registerNormalWatchers","property","align","headerAlign"],"sources":["../../../../../../../packages/components/table/src/table-column/watcher-helper.ts"],"sourcesContent":["import { watch, getCurrentInstance } from 'vue'\nimport { hasOwn } from '@vue/shared'\nimport { parseMinWidth, parseWidth } from '../util'\n\nimport type { ComputedRef } from 'vue'\nimport type { TableColumnCtx, TableColumn, ValueOf } from './defaults'\n\nfunction useWatcher<T>(\n  owner: ComputedRef<any>,\n  props_: Partial<TableColumnCtx<T>>\n) {\n  const instance = getCurrentInstance() as TableColumn<T>\n  const registerComplexWatchers = () => {\n    const props = ['fixed']\n    const aliases = {\n      realWidth: 'width',\n      realMinWidth: 'minWidth',\n    }\n    const allAliases = props.reduce((prev, cur) => {\n      prev[cur] = cur\n      return prev\n    }, aliases)\n\n    Object.keys(allAliases).forEach((key) => {\n      const columnKey = aliases[key]\n      if (hasOwn(props_, columnKey)) {\n        watch(\n          () => props_[columnKey],\n          (newVal) => {\n            let value: ValueOf<TableColumnCtx<T>> = newVal\n            if (columnKey === 'width' && key === 'realWidth') {\n              value = parseWidth(newVal)\n            }\n            if (columnKey === 'minWidth' && key === 'realMinWidth') {\n              value = parseMinWidth(newVal)\n            }\n            instance.columnConfig.value[columnKey as any] = value\n            instance.columnConfig.value[key] = value\n            const updateColumns = columnKey === 'fixed'\n            owner.value.store.scheduleLayout(updateColumns)\n          }\n        )\n      }\n    })\n  }\n  const registerNormalWatchers = () => {\n    const props = [\n      'label',\n      'filters',\n      'filterMultiple',\n      'sortable',\n      'index',\n      'formatter',\n      'className',\n      'labelClassName',\n      'showOverflowTooltip',\n    ]\n    const aliases = {\n      property: 'prop',\n      align: 'realAlign',\n      headerAlign: 'realHeaderAlign',\n    }\n    const allAliases = props.reduce((prev, cur) => {\n      prev[cur] = cur\n      return prev\n    }, aliases)\n    Object.keys(allAliases).forEach((key) => {\n      const columnKey = aliases[key]\n      if (hasOwn(props_, columnKey)) {\n        watch(\n          () => props_[columnKey],\n          (newVal) => {\n            instance.columnConfig.value[key] = newVal\n          }\n        )\n      }\n    })\n  }\n\n  return {\n    registerComplexWatchers,\n    registerNormalWatchers,\n  }\n}\n\nexport default useWatcher\n"],"mappings":";;;AAOA,SAAAA,WACEC,KAAA,EACAC,MAAA,EACA;EACA,MAAMC,QAAA,GAAWC,kBAAA;EACjB,MAAMC,uBAAA,GAA0BA,CAAA,KAAM;IACpC,MAAMC,KAAA,GAAQ,CAAC;IACf,MAAMC,OAAA,GAAU;MACdC,SAAA,EAAW;MACXC,YAAA,EAAc;IAAA;IAEhB,MAAMC,UAAA,GAAaJ,KAAA,CAAMK,MAAA,CAAO,CAACC,IAAA,EAAMC,GAAA,KAAQ;MAC7CD,IAAA,CAAKC,GAAA,IAAOA,GAAA;MACZ,OAAOD,IAAA;IAAA,GACNL,OAAA;IAEHO,MAAA,CAAOC,IAAA,CAAKL,UAAA,EAAYM,OAAA,CAASC,GAAA,IAAQ;MACvC,MAAMC,SAAA,GAAYX,OAAA,CAAQU,GAAA;MAC1B,IAAIE,MAAA,CAAOjB,MAAA,EAAQgB,SAAA,GAAY;QAC7BE,KAAA,CACE,MAAMlB,MAAA,CAAOgB,SAAA,GACZG,MAAA,IAAW;UACV,IAAIC,KAAA,GAAoCD,MAAA;UACxC,IAAIH,SAAA,KAAc,WAAWD,GAAA,KAAQ,aAAa;YAChDK,KAAA,GAAQC,UAAA,CAAWF,MAAA;UAAA;UAErB,IAAIH,SAAA,KAAc,cAAcD,GAAA,KAAQ,gBAAgB;YACtDK,KAAA,GAAQE,aAAA,CAAcH,MAAA;UAAA;UAExBlB,QAAA,CAASsB,YAAA,CAAaH,KAAA,CAAMJ,SAAA,IAAoBI,KAAA;UAChDnB,QAAA,CAASsB,YAAA,CAAaH,KAAA,CAAML,GAAA,IAAOK,KAAA;UACnC,MAAMI,aAAA,GAAgBR,SAAA,KAAc;UACpCjB,KAAA,CAAMqB,KAAA,CAAMK,KAAA,CAAMC,cAAA,CAAeF,aAAA;QAAA;MAAA;IAAA;EAAA;EAM3C,MAAMG,sBAAA,GAAyBA,CAAA,KAAM;IACnC,MAAMvB,KAAA,GAAQ,CACZ,SACA,WACA,kBACA,YACA,SACA,aACA,aACA,kBACA;IAEF,MAAMC,OAAA,GAAU;MACduB,QAAA,EAAU;MACVC,KAAA,EAAO;MACPC,WAAA,EAAa;IAAA;IAEf,MAAMtB,UAAA,GAAaJ,KAAA,CAAMK,MAAA,CAAO,CAACC,IAAA,EAAMC,GAAA,KAAQ;MAC7CD,IAAA,CAAKC,GAAA,IAAOA,GAAA;MACZ,OAAOD,IAAA;IAAA,GACNL,OAAA;IACHO,MAAA,CAAOC,IAAA,CAAKL,UAAA,EAAYM,OAAA,CAASC,GAAA,IAAQ;MACvC,MAAMC,SAAA,GAAYX,OAAA,CAAQU,GAAA;MAC1B,IAAIE,MAAA,CAAOjB,MAAA,EAAQgB,SAAA,GAAY;QAC7BE,KAAA,CACE,MAAMlB,MAAA,CAAOgB,SAAA,GACZG,MAAA,IAAW;UACVlB,QAAA,CAASsB,YAAA,CAAaH,KAAA,CAAML,GAAA,IAAOI,MAAA;QAAA;MAAA;IAAA;EAAA;EAO7C,OAAO;IACLhB,uBAAA;IACAwB;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}