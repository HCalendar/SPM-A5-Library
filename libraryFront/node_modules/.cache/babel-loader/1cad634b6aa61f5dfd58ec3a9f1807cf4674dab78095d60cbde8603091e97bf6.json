{"ast":null,"code":"import normalizeWheel from 'normalize-wheel-es';\nimport { isFirefox } from '../../utils/util.mjs';\nconst mousewheel = function (element, callback) {\n  if (element && element.addEventListener) {\n    const fn = function (event) {\n      const normalized = normalizeWheel(event);\n      callback && callback.apply(this, [event, normalized]);\n    };\n    if (isFirefox()) {\n      element.addEventListener(\"DOMMouseScroll\", fn);\n    } else {\n      element.onmousewheel = fn;\n    }\n  }\n};\nconst Mousewheel = {\n  beforeMount(el, binding) {\n    mousewheel(el, binding.value);\n  }\n};\nexport { Mousewheel as default };","map":{"version":3,"names":["mousewheel","element","callback","addEventListener","fn","event","normalized","normalizeWheel","apply","isFirefox","onmousewheel","Mousewheel","beforeMount","el","binding","value"],"sources":["../../../../../packages/directives/mousewheel/index.ts"],"sourcesContent":["import normalizeWheel from 'normalize-wheel-es'\nimport { isFirefox } from '@element-plus/utils/util'\nimport type { ObjectDirective, DirectiveBinding } from 'vue'\n\nconst mousewheel = function (element, callback) {\n  if (element && element.addEventListener) {\n    const fn = function (this: any, event) {\n      const normalized = normalizeWheel(event)\n      callback && callback.apply(this, [event, normalized])\n    }\n    if (isFirefox()) {\n      element.addEventListener('DOMMouseScroll', fn)\n    } else {\n      element.onmousewheel = fn\n    }\n  }\n}\n\nconst Mousewheel: ObjectDirective = {\n  beforeMount(el: HTMLElement, binding: DirectiveBinding) {\n    mousewheel(el, binding.value)\n  },\n}\n\nexport default Mousewheel\n"],"mappings":";;AAIA,MAAMA,UAAA,GAAa,SAAAA,CAAUC,OAAA,EAASC,QAAA,EAAU;EAC9C,IAAID,OAAA,IAAWA,OAAA,CAAQE,gBAAA,EAAkB;IACvC,MAAMC,EAAA,GAAK,SAAAA,CAAqBC,KAAA,EAAO;MACrC,MAAMC,UAAA,GAAaC,cAAA,CAAeF,KAAA;MAClCH,QAAA,IAAYA,QAAA,CAASM,KAAA,CAAM,MAAM,CAACH,KAAA,EAAOC,UAAA;IAAA;IAE3C,IAAIG,SAAA,IAAa;MACfR,OAAA,CAAQE,gBAAA,CAAiB,kBAAkBC,EAAA;IAAA,OACtC;MACLH,OAAA,CAAQS,YAAA,GAAeN,EAAA;IAAA;EAAA;AAAA;MAKvBO,UAAA,GAA8B;EAClCC,YAAYC,EAAA,EAAiBC,OAAA,EAA2B;IACtDd,UAAA,CAAWa,EAAA,EAAIC,OAAA,CAAQC,KAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}