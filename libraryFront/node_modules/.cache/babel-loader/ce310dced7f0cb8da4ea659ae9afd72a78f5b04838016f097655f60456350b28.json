{"ast":null,"code":"import request from \"@/utils/request\";\nimport { ElMessage } from \"element-plus\";\nexport default {\n  created() {\n    this.penalty = this.$route.params.money;\n  },\n  name: 'PaymentReminder',\n  data() {\n    return {\n      penalty: 0\n    };\n  },\n  methods: {\n    goBack() {\n      window.history.back();\n    },\n    pay() {\n      console.log(this.$route.params.id);\n      request.get('http://localhost:8181/bookwithuser/updateDeadtime/' + this.$route.params.id).then(res => {\n        console.log(res);\n        if (res.code == 0) {\n          ElMessage({\n            message: 'Successfully pay!',\n            type: 'success'\n          });\n          window.history.back();\n        } else {\n          ElMessage.error(res.msg);\n        }\n      }).catch(error => {\n        console.error(error); // 打印任何请求错误\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","ElMessage","created","penalty","$route","params","money","name","data","methods","goBack","window","history","back","pay","console","log","id","get","then","res","code","message","type","error","msg","catch"],"sources":["G:\\SPM-A5-Library\\libraryFront\\src\\views\\Penalty.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">Pay for Penalty</h1>\r\n    <div class=\"image-container\">\r\n      <img src=\"@/img/pay.jpg\" alt=\"pay\" class=\"pay-image\" />\r\n      <p class=\"image-text\">You need to pay $ {{this.penalty}} !</p>\r\n    </div>\r\n    <button class=\"return-button\" @click=\"goBack\">Return</button>\r\n    <button class=\"pay-button\" @click=\"pay\">Yes</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\nexport default {\r\n  created() {\r\n    this.penalty=this.$route.params.money\r\n  },\r\n  name: 'PaymentReminder',\r\n  data(){\r\n    return{\r\n      penalty:0\r\n    }\r\n  },\r\n  methods: {\r\n    goBack() {\r\n      window.history.back();\r\n    },\r\n    pay(){\r\n      console.log(this.$route.params.id)\r\n      request.get('http://localhost:8181/bookwithuser/updateDeadtime/'+this.$route.params.id).then(res => {\r\n        console.log(res);\r\n        if (res.code==0) {\r\n          ElMessage({\r\n            message: 'Successfully pay!',\r\n            type: 'success',\r\n          })\r\n          window.history.back()\r\n        } else {\r\n          ElMessage.error(res.msg)\r\n        }\r\n      }).catch(error => {\r\n        console.error(error); // 打印任何请求错误\r\n      })\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.container {\r\n  text-align: center;\r\n}\r\n\r\n.title {\r\n  font-size: 40px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.image-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.pay-image {\r\n  width: 200px;\r\n  height: 200px;\r\n}\r\n\r\n.image-text {\r\n  margin-top: 10px;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: white;\r\n  color: black;\r\n}\r\n\r\n.return-button {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  padding: 10px 20px;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.return-button:hover {\r\n  background-color: rgba(0, 0, 0, 0.29);\r\n}\r\n\r\n.pay-button {\r\n  position: fixed;\r\n  bottom: 20px;\r\n  right: 130px;\r\n  padding: 10px 20px;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.pay-button:hover {\r\n  background-color: rgba(0, 0, 0, 0.29);\r\n}\r\n\r\n.container {\r\n  text-align: center;\r\n  background-image: url('@/img/background.jpg');\r\n  background-size: cover;\r\n\r\n  background-position: center;\r\n  height: 100vh; /* 设置容器高度为视窗高度，以填满整个屏幕 */\r\n  padding-bottom: 56.25%; /* 根据您的图片宽高比进行调整 */\r\n\r\n  /* 设置容器的宽度为 100%，这样它就能与视口宽度相同（减去任何边距或边框）*/\r\n  width: 100%;\r\n\r\n  /* 使用 position: relative 和伪元素（如果需要）来在背景图片上放置其他内容 */\r\n  position: relative;\r\n\r\n  /* 其他样式... */\r\n  box-sizing: border-box; /* 确保 padding 不会增加容器的实际宽度 */\r\n  margin: 0; /* 移除任何外边距 */\r\n  overflow: hidden;\r\n}\r\n\r\n.element {\r\n  padding: 0;\r\n}\r\n\r\n#app {\r\n  padding: 0px;\r\n}\r\n\r\n\r\n* {\r\n  margin: 0;\r\n\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAaA,OAAOA,OAAM,MAAO,iBAAiB;AACrC,SAAQC,SAAS,QAAO,cAAc;AAEtC,eAAe;EACbC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,GAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,KAAI;EACtC,CAAC;EACDC,IAAI,EAAE,iBAAiB;EACvBC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJL,OAAO,EAAC;IACV;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACPC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC;IACvB,CAAC;IACDC,GAAGA,CAAA,EAAE;MACHC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,MAAM,CAACC,MAAM,CAACY,EAAE;MACjCjB,OAAO,CAACkB,GAAG,CAAC,oDAAoD,GAAC,IAAI,CAACd,MAAM,CAACC,MAAM,CAACY,EAAE,CAAC,CAACE,IAAI,CAACC,GAAE,IAAK;QAClGL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;QAChB,IAAIA,GAAG,CAACC,IAAI,IAAE,CAAC,EAAE;UACfpB,SAAS,CAAC;YACRqB,OAAO,EAAE,mBAAmB;YAC5BC,IAAI,EAAE;UACR,CAAC;UACDZ,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC;QACtB,OAAO;UACLZ,SAAS,CAACuB,KAAK,CAACJ,GAAG,CAACK,GAAG;QACzB;MACF,CAAC,CAAC,CAACC,KAAK,CAACF,KAAI,IAAK;QAChBT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC,EAAE;MACxB,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}