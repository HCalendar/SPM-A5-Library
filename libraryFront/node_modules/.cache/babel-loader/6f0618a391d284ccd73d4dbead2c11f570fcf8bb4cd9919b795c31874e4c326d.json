{"ast":null,"code":"import { defineComponent, toDisplayString, renderSlot, createTextVNode, createCommentVNode, h, Fragment, withDirectives, Teleport } from 'vue';\nimport '../../../directives/index.mjs';\nimport _Popper from '../../popper/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { renderIf, PatchFlags } from '../../../utils/vnode.mjs';\nimport usePopover, { SHOW_EVENT, HIDE_EVENT } from './usePopover.mjs';\nimport popperDefaultProps, { Effect } from '../../popper/src/use-popper/defaults.mjs';\nimport renderPopper from '../../popper/src/renderers/popper.mjs';\nimport renderArrow from '../../popper/src/renderers/arrow.mjs';\nimport renderTrigger from '../../popper/src/renderers/trigger.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nconst emits = [\"update:visible\", \"after-enter\", \"after-leave\", SHOW_EVENT, HIDE_EVENT];\nconst NAME = \"ElPopover\";\nconst _hoist = {\n  key: 0,\n  class: \"el-popover__title\",\n  role: \"title\"\n};\nvar script = defineComponent({\n  name: NAME,\n  components: {\n    ElPopper: _Popper\n  },\n  props: {\n    ...popperDefaultProps,\n    content: {\n      type: String\n    },\n    trigger: {\n      type: String,\n      default: \"click\"\n    },\n    title: {\n      type: String\n    },\n    transition: {\n      type: String,\n      default: \"fade-in-linear\"\n    },\n    width: {\n      type: [String, Number],\n      default: 150\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true\n    },\n    tabindex: [String, Number]\n  },\n  emits,\n  setup(props, ctx) {\n    if (props.visible && !ctx.slots.reference) {\n      debugWarn(NAME, `\n        You cannot init popover without given reference\n      `);\n    }\n    const states = usePopover(props, ctx);\n    return states;\n  },\n  render() {\n    const {\n      $slots\n    } = this;\n    const trigger = $slots.reference ? $slots.reference() : null;\n    const title = renderIf(!!this.title, \"div\", _hoist, toDisplayString(this.title), PatchFlags.TEXT);\n    const content = renderSlot($slots, \"default\", {}, () => [createTextVNode(toDisplayString(this.content), PatchFlags.TEXT)]);\n    const {\n      events,\n      onAfterEnter,\n      onAfterLeave,\n      onPopperMouseEnter,\n      onPopperMouseLeave,\n      popperStyle,\n      popperId,\n      popperClass,\n      showArrow,\n      transition,\n      visibility,\n      tabindex\n    } = this;\n    const kls = [this.content ? \"el-popover--plain\" : \"\", \"el-popover\", popperClass].join(\" \");\n    const popover = renderPopper({\n      effect: Effect.LIGHT,\n      name: transition,\n      popperClass: kls,\n      popperStyle,\n      popperId,\n      visibility,\n      onMouseenter: onPopperMouseEnter,\n      onMouseleave: onPopperMouseLeave,\n      onAfterEnter,\n      onAfterLeave,\n      stopPopperMouseEvent: false\n    }, [title, content, renderArrow(showArrow)]);\n    const _trigger = trigger ? renderTrigger(trigger, {\n      ariaDescribedby: popperId,\n      ref: \"triggerRef\",\n      tabindex,\n      ...events\n    }) : createCommentVNode(\"v-if\", true);\n    return h(Fragment, null, [this.trigger === \"click\" ? withDirectives(_trigger, [[ClickOutside, this.hide]]) : _trigger, h(Teleport, {\n      disabled: !this.appendToBody,\n      to: \"body\"\n    }, [popover])]);\n  }\n});\nexport { script as default };","map":{"version":3,"names":["emits","SHOW_EVENT","HIDE_EVENT","NAME","_hoist","key","class","role","script","defineComponent","name","components","ElPopper","_Popper","props","popperDefaultProps","content","type","String","trigger","default","title","transition","width","Number","appendToBody","Boolean","tabindex","setup","ctx","visible","slots","reference","debugWarn","states","usePopover","render","$slots","renderIf","toDisplayString","PatchFlags","TEXT","renderSlot","createTextVNode","events","onAfterEnter","onAfterLeave","onPopperMouseEnter","onPopperMouseLeave","popperStyle","popperId","popperClass","showArrow","visibility","kls","join","popover","renderPopper","effect","Effect","LIGHT","onMouseenter","onMouseleave","stopPopperMouseEvent","renderArrow","_trigger","renderTrigger","ariaDescribedby","ref","createCommentVNode","h","Fragment","withDirectives","ClickOutside","hide","Teleport","disabled","to"],"sources":["../../../../../../packages/components/popover/src/index.vue"],"sourcesContent":["<script lang=\"ts\">\nimport {\n  defineComponent,\n  Fragment,\n  createTextVNode,\n  renderSlot,\n  toDisplayString,\n  createCommentVNode,\n  withDirectives,\n  Teleport,\n  h,\n} from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElPopper, {\n  popperDefaultProps,\n  Effect,\n  renderArrow,\n  renderPopper,\n  renderTrigger,\n} from '@element-plus/components/popper'\nimport { debugWarn } from '@element-plus/utils/error'\nimport { renderIf, PatchFlags } from '@element-plus/utils/vnode'\nimport usePopover, { SHOW_EVENT, HIDE_EVENT } from './usePopover'\n\nimport type { PropType } from 'vue'\nimport type { TriggerType } from '@element-plus/components/popper'\n\nconst emits = [\n  'update:visible',\n  'after-enter',\n  'after-leave',\n  SHOW_EVENT,\n  HIDE_EVENT,\n]\nconst NAME = 'ElPopover'\n\nconst _hoist = { key: 0, class: 'el-popover__title', role: 'title' }\n\nexport default defineComponent({\n  name: NAME,\n  components: {\n    ElPopper,\n  },\n  props: {\n    ...popperDefaultProps,\n    content: {\n      type: String,\n    },\n    trigger: {\n      type: String as PropType<TriggerType>,\n      default: 'click',\n    },\n    title: {\n      type: String,\n    },\n    transition: {\n      type: String,\n      default: 'fade-in-linear',\n    },\n    width: {\n      type: [String, Number],\n      default: 150,\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true,\n    },\n    tabindex: [String, Number],\n  },\n  emits,\n  setup(props, ctx) {\n    if (props.visible && !ctx.slots.reference) {\n      debugWarn(\n        NAME,\n        `\n        You cannot init popover without given reference\n      `\n      )\n    }\n    const states = usePopover(props, ctx)\n\n    return states\n  },\n  render() {\n    const { $slots } = this\n    const trigger = $slots.reference ? $slots.reference() : null\n\n    const title = renderIf(\n      !!this.title,\n      'div',\n      _hoist,\n      toDisplayString(this.title),\n      PatchFlags.TEXT\n    )\n\n    const content = renderSlot($slots, 'default', {}, () => [\n      createTextVNode(toDisplayString(this.content), PatchFlags.TEXT),\n    ])\n\n    const {\n      events,\n      onAfterEnter,\n      onAfterLeave,\n      onPopperMouseEnter,\n      onPopperMouseLeave,\n      popperStyle,\n      popperId,\n      popperClass,\n      showArrow,\n      transition,\n      visibility,\n      tabindex,\n    } = this\n\n    const kls = [\n      this.content ? 'el-popover--plain' : '',\n      'el-popover',\n      popperClass,\n    ].join(' ')\n\n    const popover = renderPopper(\n      {\n        effect: Effect.LIGHT,\n        name: transition,\n        popperClass: kls,\n        popperStyle,\n        popperId,\n        visibility,\n        onMouseenter: onPopperMouseEnter,\n        onMouseleave: onPopperMouseLeave,\n        onAfterEnter,\n        onAfterLeave,\n        stopPopperMouseEvent: false,\n      },\n      [title, content, renderArrow(showArrow)]\n    )\n\n    // when user uses popover directively, trigger will be null so that we only\n    // render a popper window for displaying contents\n    const _trigger = trigger\n      ? renderTrigger(trigger, {\n          ariaDescribedby: popperId,\n          ref: 'triggerRef',\n          tabindex,\n          ...events,\n        })\n      : createCommentVNode('v-if', true)\n\n    return h(Fragment, null, [\n      this.trigger === 'click'\n        ? withDirectives(_trigger, [[ClickOutside, this.hide]])\n        : _trigger,\n      h(\n        Teleport as any,\n        {\n          disabled: !this.appendToBody,\n          to: 'body',\n        },\n        [popover]\n      ),\n    ])\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}