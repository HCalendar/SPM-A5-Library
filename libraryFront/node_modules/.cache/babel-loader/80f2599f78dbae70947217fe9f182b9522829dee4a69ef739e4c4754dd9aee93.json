{"ast":null,"code":"import { isNumber } from './util.mjs';\nconst isValidWidthUnit = val => {\n  if (isNumber(val)) {\n    return true;\n  } else {\n    return [\"px\", \"rem\", \"em\", \"vw\", \"%\", \"vmin\", \"vmax\"].some(unit => val.endsWith(unit)) || val.startsWith(\"calc\");\n  }\n};\nconst isValidComponentSize = val => [\"\", \"large\", \"medium\", \"small\", \"mini\"].includes(val);\nconst isValidDatePickType = val => [\"year\", \"month\", \"date\", \"dates\", \"week\", \"datetime\", \"datetimerange\", \"daterange\", \"monthrange\"].includes(val);\nexport { isValidComponentSize, isValidDatePickType, isValidWidthUnit };","map":{"version":3,"names":["isValidWidthUnit","val","isNumber","some","unit","endsWith","startsWith","isValidComponentSize","includes","isValidDatePickType"],"sources":["../../../../packages/utils/validators.ts"],"sourcesContent":["import { isNumber } from './util'\n\nexport const isValidWidthUnit = (val: string | number): boolean => {\n  if (isNumber(val)) {\n    return true\n  } else {\n    return (\n      ['px', 'rem', 'em', 'vw', '%', 'vmin', 'vmax'].some((unit) =>\n        (val as string).endsWith(unit)\n      ) || (val as string).startsWith('calc')\n    )\n  }\n}\n\nexport const isValidComponentSize = (val: string) =>\n  ['', 'large', 'medium', 'small', 'mini'].includes(val)\n\nexport const isValidDatePickType = (val: string) =>\n  [\n    'year',\n    'month',\n    'date',\n    'dates',\n    'week',\n    'datetime',\n    'datetimerange',\n    'daterange',\n    'monthrange',\n  ].includes(val)\n"],"mappings":";MAEaA,gBAAA,GAAoBC,GAAA,IAAkC;EACjE,IAAIC,QAAA,CAASD,GAAA,GAAM;IACjB,OAAO;EAAA,OACF;IACL,OACE,CAAC,MAAM,OAAO,MAAM,MAAM,KAAK,QAAQ,QAAQE,IAAA,CAAMC,IAAA,IAClDH,GAAA,CAAeI,QAAA,CAASD,IAAA,MACrBH,GAAA,CAAeK,UAAA,CAAW;EAAA;AAAA;MAKzBC,oBAAA,GAAwBN,GAAA,IACnC,CAAC,IAAI,SAAS,UAAU,SAAS,QAAQO,QAAA,CAASP,GAAA;MAEvCQ,mBAAA,GAAuBR,GAAA,IAClC,CACE,QACA,SACA,QACA,SACA,QACA,YACA,iBACA,aACA,cACAO,QAAA,CAASP,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}