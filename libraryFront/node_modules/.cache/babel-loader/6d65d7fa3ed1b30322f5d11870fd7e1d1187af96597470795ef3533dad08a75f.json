{"ast":null,"code":"import '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/props.mjs';\nimport { useSizeProp } from '../../../hooks/use-common-props/index.mjs';\nconst buttonType = [\"default\", \"primary\", \"success\", \"warning\", \"info\", \"danger\", \"text\", \"\"];\nconst buttonSize = [\"\", \"large\", \"medium\", \"small\", \"mini\"];\nconst buttonNativeType = [\"button\", \"submit\", \"reset\"];\nconst buttonProps = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  type: {\n    type: String,\n    values: buttonType,\n    default: \"\"\n  },\n  icon: {\n    type: definePropType([String, Object]),\n    default: \"\"\n  },\n  nativeType: {\n    type: String,\n    values: buttonNativeType,\n    default: \"button\"\n  },\n  loading: Boolean,\n  plain: Boolean,\n  autofocus: Boolean,\n  round: Boolean,\n  circle: Boolean,\n  color: String,\n  autoInsertSpace: {\n    type: Boolean,\n    default: void 0\n  }\n});\nconst buttonEmits = {\n  click: evt => evt instanceof MouseEvent\n};\nexport { buttonEmits, buttonNativeType, buttonProps, buttonSize, buttonType };","map":{"version":3,"names":["buttonType","buttonSize","buttonNativeType","buttonProps","buildProps","size","useSizeProp","disabled","Boolean","type","String","values","default","icon","definePropType","Object","nativeType","loading","plain","autofocus","round","circle","color","autoInsertSpace","buttonEmits","click","evt","MouseEvent"],"sources":["../../../../../../packages/components/button/src/button.ts"],"sourcesContent":["import { useSizeProp } from '@element-plus/hooks'\nimport { buildProps, definePropType } from '@element-plus/utils/props'\nimport type { ExtractPropTypes, Component } from 'vue'\nimport type button from './button.vue'\n\nexport const buttonType = [\n  'default',\n  'primary',\n  'success',\n  'warning',\n  'info',\n  'danger',\n  'text',\n  '',\n] as const\nexport const buttonSize = ['', 'large', 'medium', 'small', 'mini'] as const\nexport const buttonNativeType = ['button', 'submit', 'reset'] as const\n\nexport const buttonProps = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  type: {\n    type: String,\n    values: buttonType,\n    default: '',\n  },\n  icon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: '',\n  },\n  nativeType: {\n    type: String,\n    values: buttonNativeType,\n    default: 'button',\n  },\n  loading: Boolean,\n  plain: Boolean,\n  autofocus: Boolean,\n  round: Boolean,\n  circle: Boolean,\n  color: String,\n  autoInsertSpace: {\n    type: Boolean,\n    default: undefined,\n  },\n} as const)\n\nexport interface ButtonConfigContext {\n  autoInsertSpace?: boolean\n}\n\nexport const buttonEmits = {\n  click: (evt: MouseEvent) => evt instanceof MouseEvent,\n}\n\nexport type ButtonProps = ExtractPropTypes<typeof buttonProps>\nexport type ButtonEmits = typeof buttonEmits\n\nexport type ButtonType = ButtonProps['type']\nexport type ButtonNativeType = ButtonProps['nativeType']\n\nexport type ButtonInstance = InstanceType<typeof button>\n"],"mappings":";;;MAKaA,UAAA,GAAa,CACxB,WACA,WACA,WACA,WACA,QACA,UACA,QACA;MAEWC,UAAA,GAAa,CAAC,IAAI,SAAS,UAAU,SAAS;MAC9CC,gBAAA,GAAmB,CAAC,UAAU,UAAU;MAExCC,WAAA,GAAcC,UAAA,CAAW;EACpCC,IAAA,EAAMC,WAAA;EACNC,QAAA,EAAUC,OAAA;EACVC,IAAA,EAAM;IACJA,IAAA,EAAMC,MAAA;IACNC,MAAA,EAAQX,UAAA;IACRY,OAAA,EAAS;EAAA;EAEXC,IAAA,EAAM;IACJJ,IAAA,EAAMK,cAAA,CAAmC,CAACJ,MAAA,EAAQK,MAAA;IAClDH,OAAA,EAAS;EAAA;EAEXI,UAAA,EAAY;IACVP,IAAA,EAAMC,MAAA;IACNC,MAAA,EAAQT,gBAAA;IACRU,OAAA,EAAS;EAAA;EAEXK,OAAA,EAAST,OAAA;EACTU,KAAA,EAAOV,OAAA;EACPW,SAAA,EAAWX,OAAA;EACXY,KAAA,EAAOZ,OAAA;EACPa,MAAA,EAAQb,OAAA;EACRc,KAAA,EAAOZ,MAAA;EACPa,eAAA,EAAiB;IACfd,IAAA,EAAMD,OAAA;IACNI,OAAA,EAAS;EAAA;AAAA;MAQAY,WAAA,GAAc;EACzBC,KAAA,EAAQC,GAAA,IAAoBA,GAAA,YAAeC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}