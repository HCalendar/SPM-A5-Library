{"ast":null,"code":"import { getCurrentInstance, ref } from 'vue';\nimport { addClass, removeClass, hasClass } from '../../../../utils/dom.mjs';\nimport isServer from '../../../../utils/isServer.mjs';\nfunction useEvent(props, emit) {\n  const instance = getCurrentInstance();\n  const parent = instance.parent;\n  const handleFilterClick = event => {\n    event.stopPropagation();\n    return;\n  };\n  const handleHeaderClick = (event, column) => {\n    if (!column.filters && column.sortable) {\n      handleSortClick(event, column, false);\n    } else if (column.filterable && !column.sortable) {\n      handleFilterClick(event);\n    }\n    parent.emit(\"header-click\", column, event);\n  };\n  const handleHeaderContextMenu = (event, column) => {\n    parent.emit(\"header-contextmenu\", column, event);\n  };\n  const draggingColumn = ref(null);\n  const dragging = ref(false);\n  const dragState = ref({});\n  const handleMouseDown = (event, column) => {\n    if (isServer) return;\n    if (column.children && column.children.length > 0) return;\n    if (draggingColumn.value && props.border) {\n      dragging.value = true;\n      const table = parent;\n      emit(\"set-drag-visible\", true);\n      const tableEl = table.vnode.el;\n      const tableLeft = tableEl.getBoundingClientRect().left;\n      const columnEl = instance.vnode.el.querySelector(`th.${column.id}`);\n      const columnRect = columnEl.getBoundingClientRect();\n      const minLeft = columnRect.left - tableLeft + 30;\n      addClass(columnEl, \"noclick\");\n      dragState.value = {\n        startMouseLeft: event.clientX,\n        startLeft: columnRect.right - tableLeft,\n        startColumnLeft: columnRect.left - tableLeft,\n        tableLeft\n      };\n      const resizeProxy = table.refs.resizeProxy;\n      resizeProxy.style.left = `${dragState.value.startLeft}px`;\n      document.onselectstart = function () {\n        return false;\n      };\n      document.ondragstart = function () {\n        return false;\n      };\n      const handleMouseMove2 = event2 => {\n        const deltaLeft = event2.clientX - dragState.value.startMouseLeft;\n        const proxyLeft = dragState.value.startLeft + deltaLeft;\n        resizeProxy.style.left = `${Math.max(minLeft, proxyLeft)}px`;\n      };\n      const handleMouseUp = () => {\n        if (dragging.value) {\n          const {\n            startColumnLeft,\n            startLeft\n          } = dragState.value;\n          const finalLeft = parseInt(resizeProxy.style.left, 10);\n          const columnWidth = finalLeft - startColumnLeft;\n          column.width = column.realWidth = columnWidth;\n          table.emit(\"header-dragend\", column.width, startLeft - startColumnLeft, column, event);\n          requestAnimationFrame(() => {\n            props.store.scheduleLayout(false, true);\n          });\n          document.body.style.cursor = \"\";\n          dragging.value = false;\n          draggingColumn.value = null;\n          dragState.value = {};\n          emit(\"set-drag-visible\", false);\n        }\n        document.removeEventListener(\"mousemove\", handleMouseMove2);\n        document.removeEventListener(\"mouseup\", handleMouseUp);\n        document.onselectstart = null;\n        document.ondragstart = null;\n        setTimeout(function () {\n          removeClass(columnEl, \"noclick\");\n        }, 0);\n      };\n      document.addEventListener(\"mousemove\", handleMouseMove2);\n      document.addEventListener(\"mouseup\", handleMouseUp);\n    }\n  };\n  const handleMouseMove = (event, column) => {\n    if (column.children && column.children.length > 0) return;\n    let target = event.target;\n    while (target && target.tagName !== \"TH\") {\n      target = target.parentNode;\n    }\n    if (!column || !column.resizable) return;\n    if (!dragging.value && props.border) {\n      const rect = target.getBoundingClientRect();\n      const bodyStyle = document.body.style;\n      if (rect.width > 12 && rect.right - event.pageX < 8) {\n        bodyStyle.cursor = \"col-resize\";\n        if (hasClass(target, \"is-sortable\")) {\n          target.style.cursor = \"col-resize\";\n        }\n        draggingColumn.value = column;\n      } else if (!dragging.value) {\n        bodyStyle.cursor = \"\";\n        if (hasClass(target, \"is-sortable\")) {\n          target.style.cursor = \"pointer\";\n        }\n        draggingColumn.value = null;\n      }\n    }\n  };\n  const handleMouseOut = () => {\n    if (isServer) return;\n    document.body.style.cursor = \"\";\n  };\n  const toggleOrder = ({\n    order,\n    sortOrders\n  }) => {\n    if (order === \"\") return sortOrders[0];\n    const index = sortOrders.indexOf(order || null);\n    return sortOrders[index > sortOrders.length - 2 ? 0 : index + 1];\n  };\n  const handleSortClick = (event, column, givenOrder) => {\n    event.stopPropagation();\n    const order = column.order === givenOrder ? null : givenOrder || toggleOrder(column);\n    let target = event.target;\n    while (target && target.tagName !== \"TH\") {\n      target = target.parentNode;\n    }\n    if (target && target.tagName === \"TH\") {\n      if (hasClass(target, \"noclick\")) {\n        removeClass(target, \"noclick\");\n        return;\n      }\n    }\n    if (!column.sortable) return;\n    const states = props.store.states;\n    let sortProp = states.sortProp.value;\n    let sortOrder;\n    const sortingColumn = states.sortingColumn.value;\n    if (sortingColumn !== column || sortingColumn === column && sortingColumn.order === null) {\n      if (sortingColumn) {\n        sortingColumn.order = null;\n      }\n      states.sortingColumn.value = column;\n      sortProp = column.property;\n    }\n    if (!order) {\n      sortOrder = column.order = null;\n    } else {\n      sortOrder = column.order = order;\n    }\n    states.sortProp.value = sortProp;\n    states.sortOrder.value = sortOrder;\n    parent.store.commit(\"changeSortCondition\");\n  };\n  return {\n    handleHeaderClick,\n    handleHeaderContextMenu,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseOut,\n    handleSortClick,\n    handleFilterClick\n  };\n}\nexport { useEvent as default };","map":{"version":3,"names":["useEvent","props","emit","instance","getCurrentInstance","parent","handleFilterClick","event","stopPropagation","handleHeaderClick","column","filters","sortable","handleSortClick","filterable","handleHeaderContextMenu","draggingColumn","ref","dragging","dragState","handleMouseDown","isServer","children","length","value","border","table","tableEl","vnode","el","tableLeft","getBoundingClientRect","left","columnEl","querySelector","id","columnRect","minLeft","addClass","startMouseLeft","clientX","startLeft","right","startColumnLeft","resizeProxy","refs","style","document","onselectstart","ondragstart","handleMouseMove2","event2","deltaLeft","proxyLeft","Math","max","handleMouseUp","finalLeft","parseInt","columnWidth","width","realWidth","requestAnimationFrame","store","scheduleLayout","body","cursor","removeEventListener","setTimeout","removeClass","addEventListener","handleMouseMove","target","tagName","parentNode","resizable","rect","bodyStyle","pageX","hasClass","handleMouseOut","toggleOrder","order","sortOrders","index","indexOf","givenOrder","states","sortProp","sortOrder","sortingColumn","property","commit"],"sources":["../../../../../../../packages/components/table/src/table-header/event-helper.ts"],"sourcesContent":["import { getCurrentInstance, ref } from 'vue'\nimport { hasClass, addClass, removeClass } from '@element-plus/utils/dom'\nimport isServer from '@element-plus/utils/isServer'\n\nimport type { TableHeaderProps } from '.'\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type { Table } from '../table/defaults'\n\nfunction useEvent<T>(props: TableHeaderProps<T>, emit) {\n  const instance = getCurrentInstance()\n  const parent = instance.parent as Table<T>\n  const handleFilterClick = (event: Event) => {\n    event.stopPropagation()\n    return\n  }\n\n  const handleHeaderClick = (event: Event, column: TableColumnCtx<T>) => {\n    if (!column.filters && column.sortable) {\n      handleSortClick(event, column, false)\n    } else if (column.filterable && !column.sortable) {\n      handleFilterClick(event)\n    }\n    parent.emit('header-click', column, event)\n  }\n\n  const handleHeaderContextMenu = (event: Event, column: TableColumnCtx<T>) => {\n    parent.emit('header-contextmenu', column, event)\n  }\n  const draggingColumn = ref(null)\n  const dragging = ref(false)\n  const dragState = ref({})\n  const handleMouseDown = (event: MouseEvent, column: TableColumnCtx<T>) => {\n    if (isServer) return\n    if (column.children && column.children.length > 0) return\n    /* istanbul ignore if */\n    if (draggingColumn.value && props.border) {\n      dragging.value = true\n\n      const table = parent\n      emit('set-drag-visible', true)\n      const tableEl = table.vnode.el\n      const tableLeft = tableEl.getBoundingClientRect().left\n      const columnEl = instance.vnode.el.querySelector(`th.${column.id}`)\n      const columnRect = columnEl.getBoundingClientRect()\n      const minLeft = columnRect.left - tableLeft + 30\n\n      addClass(columnEl, 'noclick')\n\n      dragState.value = {\n        startMouseLeft: event.clientX,\n        startLeft: columnRect.right - tableLeft,\n        startColumnLeft: columnRect.left - tableLeft,\n        tableLeft,\n      }\n      const resizeProxy = table.refs.resizeProxy as HTMLElement\n      resizeProxy.style.left = `${(dragState.value as any).startLeft}px`\n\n      document.onselectstart = function () {\n        return false\n      }\n      document.ondragstart = function () {\n        return false\n      }\n\n      const handleMouseMove = (event: MouseEvent) => {\n        const deltaLeft =\n          event.clientX - (dragState.value as any).startMouseLeft\n        const proxyLeft = (dragState.value as any).startLeft + deltaLeft\n\n        resizeProxy.style.left = `${Math.max(minLeft, proxyLeft)}px`\n      }\n\n      const handleMouseUp = () => {\n        if (dragging.value) {\n          const { startColumnLeft, startLeft } = dragState.value as any\n          const finalLeft = parseInt(resizeProxy.style.left, 10)\n          const columnWidth = finalLeft - startColumnLeft\n          column.width = column.realWidth = columnWidth\n          table.emit(\n            'header-dragend',\n            column.width,\n            startLeft - startColumnLeft,\n            column,\n            event\n          )\n          requestAnimationFrame(() => {\n            props.store.scheduleLayout(false, true)\n          })\n          document.body.style.cursor = ''\n          dragging.value = false\n          draggingColumn.value = null\n          dragState.value = {}\n          emit('set-drag-visible', false)\n        }\n\n        document.removeEventListener('mousemove', handleMouseMove)\n        document.removeEventListener('mouseup', handleMouseUp)\n        document.onselectstart = null\n        document.ondragstart = null\n\n        setTimeout(function () {\n          removeClass(columnEl, 'noclick')\n        }, 0)\n      }\n\n      document.addEventListener('mousemove', handleMouseMove)\n      document.addEventListener('mouseup', handleMouseUp)\n    }\n  }\n\n  const handleMouseMove = (event: MouseEvent, column: TableColumnCtx<T>) => {\n    if (column.children && column.children.length > 0) return\n    let target = event.target as HTMLElement\n    while (target && target.tagName !== 'TH') {\n      target = target.parentNode as HTMLElement\n    }\n\n    if (!column || !column.resizable) return\n\n    if (!dragging.value && props.border) {\n      const rect = target.getBoundingClientRect()\n\n      const bodyStyle = document.body.style\n      if (rect.width > 12 && rect.right - event.pageX < 8) {\n        bodyStyle.cursor = 'col-resize'\n        if (hasClass(target, 'is-sortable')) {\n          target.style.cursor = 'col-resize'\n        }\n        draggingColumn.value = column\n      } else if (!dragging.value) {\n        bodyStyle.cursor = ''\n        if (hasClass(target, 'is-sortable')) {\n          target.style.cursor = 'pointer'\n        }\n        draggingColumn.value = null\n      }\n    }\n  }\n\n  const handleMouseOut = () => {\n    if (isServer) return\n    document.body.style.cursor = ''\n  }\n  const toggleOrder = ({ order, sortOrders }) => {\n    if (order === '') return sortOrders[0]\n    const index = sortOrders.indexOf(order || null)\n    return sortOrders[index > sortOrders.length - 2 ? 0 : index + 1]\n  }\n  const handleSortClick = (\n    event: Event,\n    column: TableColumnCtx<T>,\n    givenOrder: string | boolean\n  ) => {\n    event.stopPropagation()\n    const order =\n      column.order === givenOrder ? null : givenOrder || toggleOrder(column)\n\n    let target = event.target as HTMLElement\n    while (target && target.tagName !== 'TH') {\n      target = target.parentNode as HTMLElement\n    }\n\n    if (target && target.tagName === 'TH') {\n      if (hasClass(target, 'noclick')) {\n        removeClass(target, 'noclick')\n        return\n      }\n    }\n\n    if (!column.sortable) return\n\n    const states = props.store.states\n    let sortProp = states.sortProp.value\n    let sortOrder\n    const sortingColumn = states.sortingColumn.value\n\n    if (\n      sortingColumn !== column ||\n      (sortingColumn === column && sortingColumn.order === null)\n    ) {\n      if (sortingColumn) {\n        sortingColumn.order = null\n      }\n      states.sortingColumn.value = column\n      sortProp = column.property\n    }\n    if (!order) {\n      sortOrder = column.order = null\n    } else {\n      sortOrder = column.order = order\n    }\n\n    states.sortProp.value = sortProp\n    states.sortOrder.value = sortOrder\n\n    parent.store.commit('changeSortCondition')\n  }\n\n  return {\n    handleHeaderClick,\n    handleHeaderContextMenu,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseOut,\n    handleSortClick,\n    handleFilterClick,\n  }\n}\n\nexport default useEvent\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}