{"ast":null,"code":"import { resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, renderSlot } from 'vue';\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_clickOutside = resolveDirective(\"clickOutside\");\n  return withDirectives((openBlock(), createElementBlock(\"ul\", {\n    class: normalizeClass([[_ctx.size && `el-dropdown-menu--${_ctx.size}`], \"el-dropdown-menu\"]),\n    onMouseenter: _cache[0] || (_cache[0] = withModifiers((...args) => _ctx.show && _ctx.show(...args), [\"stop\"])),\n    onMouseleave: _cache[1] || (_cache[1] = withModifiers((...args) => _ctx.hide && _ctx.hide(...args), [\"stop\"]))\n  }, [renderSlot(_ctx.$slots, \"default\")], 34)), [[_directive_clickOutside, _ctx.innerHide, _ctx.triggerElm]]);\n}\nexport { render };","map":{"version":3,"names":["createElementBlock","class","normalizeClass","_ctx","size","onMouseenter","_cache","withModifiers","args","show","onMouseleave","hide","renderSlot","$slots","innerHide","triggerElm"],"sources":["../../../../../../packages/components/dropdown/src/dropdown-menu.vue?vue&type=template&id=617b3492&lang.js"],"sourcesContent":["<template>\n  <ul\n    v-clickOutside:[triggerElm]=\"innerHide\"\n    :class=\"[size && `el-dropdown-menu--${size}`]\"\n    class=\"el-dropdown-menu\"\n    @mouseenter.stop=\"show\"\n    @mouseleave.stop=\"hide\"\n  >\n    <slot></slot>\n  </ul>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, getCurrentInstance, onMounted } from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport { useDropdown, initDropdownDomEvent } from './useDropdown'\n\nexport default defineComponent({\n  name: 'ElDropdownMenu',\n  directives: {\n    ClickOutside,\n  },\n  setup() {\n    const { _elDropdownSize, elDropdown } = useDropdown()\n    const size = _elDropdownSize.value\n\n    function show() {\n      if (['click', 'contextmenu'].includes(elDropdown.trigger.value)) return\n      elDropdown.show?.()\n    }\n    function hide() {\n      if (['click', 'contextmenu'].includes(elDropdown.trigger.value)) return\n      _hide()\n    }\n    function _hide() {\n      elDropdown.hide?.()\n    }\n\n    onMounted(() => {\n      const dropdownMenu = getCurrentInstance()\n      initDropdownDomEvent(\n        dropdownMenu,\n        elDropdown.triggerElm.value,\n        elDropdown.instance\n      )\n    })\n\n    return {\n      size,\n      show,\n      hide,\n      innerHide: _hide,\n      triggerElm: elDropdown.triggerElm,\n    }\n  },\n})\n</script>\n"],"mappings":";;;sCACEA,kBAAA;IAEGC,KAAA,EAAAC,cAAA,GAAQC,IAAA,CAAAC,IAAA,yBAA6BD,IAAA,CAAAC,IAAA,KAChC;IACLC,YAAA,EAAAC,MAAA,QAAAA,MAAA,MAAAC,aAAA,KAAAC,IAAA,KAAiBL,IAAA,CAAAM,IAAA,IAAAN,IAAA,CAAAM,IAAA,IAAAD,IAAA;IACjBE,YAAA,EAAAJ,MAAA,QAAAA,MAAA,MAAAC,aAAA,KAAAC,IAAA,KAAiBL,IAAA,CAAAQ,IAAA,IAAAR,IAAA,CAAAQ,IAAA,IAAAH,IAAA;MAElBI,UAAA,CAAAT,IAAA,CAAAU,MAAA,a,mCAN6BV,IAAA,CAAAW,SAAA,EAAdX,IAAA,CAAAY,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}