{"ast":null,"code":"import { defineComponent, computed, h } from 'vue';\nvar script = defineComponent({\n  name: \"ElMarker\",\n  props: {\n    mark: {\n      type: [String, Object],\n      default: () => void 0\n    }\n  },\n  setup(props) {\n    const label = computed(() => {\n      return typeof props.mark === \"string\" ? props.mark : props.mark.label;\n    });\n    return {\n      label\n    };\n  },\n  render() {\n    var _a;\n    return h(\"div\", {\n      class: \"el-slider__marks-text\",\n      style: (_a = this.mark) == null ? void 0 : _a.style\n    }, this.label);\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","props","mark","type","String","Object","default","setup","label","computed","render","h","class","style","_a"],"sources":["../../../../../../packages/components/slider/src/marker.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { computed, defineComponent, h } from 'vue'\n\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'ElMarker',\n  props: {\n    mark: {\n      type: [String, Object] as PropType<string | Record<string, unknown>>,\n      default: () => undefined,\n    },\n  },\n  setup(props) {\n    const label = computed(() => {\n      return typeof props.mark === 'string' ? props.mark : props.mark.label\n    })\n\n    return {\n      label,\n    }\n  },\n  render() {\n    return h(\n      'div',\n      {\n        class: 'el-slider__marks-text',\n        style: this.mark?.style,\n      },\n      this.label\n    )\n  },\n})\n</script>\n"],"mappings":";AAKA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAO;IACLC,IAAA,EAAM;MACJC,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAA;MACfC,OAAA,EAASA,CAAA,KAAM;IAAA;EAAA;EAGnBC,MAAMN,KAAA,EAAO;IACX,MAAMO,KAAA,GAAQC,QAAA,CAAS,MAAM;MAC3B,OAAO,OAAOR,KAAA,CAAMC,IAAA,KAAS,WAAWD,KAAA,CAAMC,IAAA,GAAOD,KAAA,CAAMC,IAAA,CAAKM,KAAA;IAAA;IAGlE,OAAO;MACLA;IAAA;EAAA;EAGJE,OAAA,EAAS;;IACP,OAAOC,CAAA,CACL,OACA;MACEC,KAAA,EAAO;MACPC,KAAA,EAAO,CAAAC,EAAA,QAAKZ,IAAA,KAAL,gBAAAY,EAAA,CAAWD;IAAA,GAEpB,KAAKL,KAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}