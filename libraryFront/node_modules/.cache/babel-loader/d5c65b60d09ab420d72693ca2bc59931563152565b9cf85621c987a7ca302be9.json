{"ast":null,"code":"import { defineComponent, reactive, toRefs, getCurrentInstance, onBeforeUnmount } from 'vue';\nimport { useOption } from './useOption.mjs';\nvar script = defineComponent({\n  name: \"ElOption\",\n  componentName: \"ElOption\",\n  props: {\n    value: {\n      required: true,\n      type: [String, Number, Boolean, Object]\n    },\n    label: [String, Number],\n    created: Boolean,\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const states = reactive({\n      index: -1,\n      groupDisabled: false,\n      visible: true,\n      hitState: false,\n      hover: false\n    });\n    const {\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      hoverItem\n    } = useOption(props, states);\n    const {\n      visible,\n      hover\n    } = toRefs(states);\n    const vm = getCurrentInstance().proxy;\n    const key = vm.value;\n    select.onOptionCreate(vm);\n    onBeforeUnmount(() => {\n      const {\n        selected\n      } = select;\n      const selectedOptions = select.props.multiple ? selected : [selected];\n      const doesExist = select.cachedOptions.has(key);\n      const doesSelected = selectedOptions.some(item => {\n        return item.value === vm.value;\n      });\n      if (doesExist && !doesSelected) {\n        select.cachedOptions.delete(key);\n      }\n      select.onOptionDestroy(key);\n    });\n    function selectOptionClick() {\n      if (props.disabled !== true && states.groupDisabled !== true) {\n        select.handleOptionSelect(vm, true);\n      }\n    }\n    return {\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      hoverItem,\n      visible,\n      hover,\n      selectOptionClick,\n      states\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","componentName","props","value","required","type","String","Number","Boolean","Object","label","created","disabled","default","setup","states","reactive","index","groupDisabled","visible","hitState","hover","currentLabel","itemSelected","isDisabled","select","hoverItem","useOption","toRefs","vm","getCurrentInstance","proxy","key","onOptionCreate","onBeforeUnmount","selected","selectedOptions","multiple","doesExist","cachedOptions","has","doesSelected","some","item","delete","onOptionDestroy","selectOptionClick","handleOptionSelect"],"sources":["../../../../../../packages/components/select/src/option.vue"],"sourcesContent":["<template>\n  <li\n    v-show=\"visible\"\n    class=\"el-select-dropdown__item\"\n    :class=\"{\n      selected: itemSelected,\n      'is-disabled': isDisabled,\n      hover: hover,\n    }\"\n    @mouseenter=\"hoverItem\"\n    @click.stop=\"selectOptionClick\"\n  >\n    <slot>\n      <span>{{ currentLabel }}</span>\n    </slot>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport {\n  toRefs,\n  defineComponent,\n  getCurrentInstance,\n  onBeforeUnmount,\n  reactive,\n} from 'vue'\nimport { useOption } from './useOption'\nimport type { SelectOptionProxy } from './token'\n\nexport default defineComponent({\n  name: 'ElOption',\n  componentName: 'ElOption',\n\n  props: {\n    value: {\n      required: true,\n      type: [String, Number, Boolean, Object],\n    },\n    label: [String, Number],\n    created: Boolean,\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  setup(props) {\n    const states = reactive({\n      index: -1,\n      groupDisabled: false,\n      visible: true,\n      hitState: false,\n      hover: false,\n    })\n\n    const { currentLabel, itemSelected, isDisabled, select, hoverItem } =\n      useOption(props, states)\n\n    const { visible, hover } = toRefs(states)\n\n    const vm = getCurrentInstance().proxy\n    const key = (vm as unknown as SelectOptionProxy).value\n    select.onOptionCreate(vm as unknown as SelectOptionProxy)\n\n    onBeforeUnmount(() => {\n      const { selected } = select\n      const selectedOptions = select.props.multiple ? selected : [selected]\n      const doesExist = select.cachedOptions.has(key)\n      const doesSelected = selectedOptions.some((item) => {\n        return item.value === (vm as unknown as SelectOptionProxy).value\n      })\n      // if option is not selected, remove it from cache\n      if (doesExist && !doesSelected) {\n        select.cachedOptions.delete(key)\n      }\n      select.onOptionDestroy(key)\n    })\n\n    function selectOptionClick() {\n      if (props.disabled !== true && states.groupDisabled !== true) {\n        select.handleOptionSelect(vm, true)\n      }\n    }\n\n    return {\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      hoverItem,\n      visible,\n      hover,\n      selectOptionClick,\n      states,\n    }\n  },\n})\n</script>\n"],"mappings":";;AA6BA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,aAAA,EAAe;EAEfC,KAAA,EAAO;IACLC,KAAA,EAAO;MACLC,QAAA,EAAU;MACVC,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAA,EAAQC,OAAA,EAASC,MAAA;IAAA;IAElCC,KAAA,EAAO,CAACJ,MAAA,EAAQC,MAAA;IAChBI,OAAA,EAASH,OAAA;IACTI,QAAA,EAAU;MACRP,IAAA,EAAMG,OAAA;MACNK,OAAA,EAAS;IAAA;EAAA;EAIbC,MAAMZ,KAAA,EAAO;IACX,MAAMa,MAAA,GAASC,QAAA,CAAS;MACtBC,KAAA,EAAO;MACPC,aAAA,EAAe;MACfC,OAAA,EAAS;MACTC,QAAA,EAAU;MACVC,KAAA,EAAO;IAAA;IAGT,MAAM;MAAEC,YAAA;MAAcC,YAAA;MAAcC,UAAA;MAAYC,MAAA;MAAQC;IAAA,IACtDC,SAAA,CAAUzB,KAAA,EAAOa,MAAA;IAEnB,MAAM;MAAEI,OAAA;MAASE;IAAA,IAAUO,MAAA,CAAOb,MAAA;IAElC,MAAMc,EAAA,GAAKC,kBAAA,GAAqBC,KAAA;IAChC,MAAMC,GAAA,GAAOH,EAAA,CAAoC1B,KAAA;IACjDsB,MAAA,CAAOQ,cAAA,CAAeJ,EAAA;IAEtBK,eAAA,CAAgB,MAAM;MACpB,MAAM;QAAEC;MAAA,IAAaV,MAAA;MACrB,MAAMW,eAAA,GAAkBX,MAAA,CAAOvB,KAAA,CAAMmC,QAAA,GAAWF,QAAA,GAAW,CAACA,QAAA;MAC5D,MAAMG,SAAA,GAAYb,MAAA,CAAOc,aAAA,CAAcC,GAAA,CAAIR,GAAA;MAC3C,MAAMS,YAAA,GAAeL,eAAA,CAAgBM,IAAA,CAAMC,IAAA,IAAS;QAClD,OAAOA,IAAA,CAAKxC,KAAA,KAAW0B,EAAA,CAAoC1B,KAAA;MAAA;MAG7D,IAAImC,SAAA,IAAa,CAACG,YAAA,EAAc;QAC9BhB,MAAA,CAAOc,aAAA,CAAcK,MAAA,CAAOZ,GAAA;MAAA;MAE9BP,MAAA,CAAOoB,eAAA,CAAgBb,GAAA;IAAA;IAGzB,SAAAc,kBAAA,EAA6B;MAC3B,IAAI5C,KAAA,CAAMU,QAAA,KAAa,QAAQG,MAAA,CAAOG,aAAA,KAAkB,MAAM;QAC5DO,MAAA,CAAOsB,kBAAA,CAAmBlB,EAAA,EAAI;MAAA;IAAA;IAIlC,OAAO;MACLP,YAAA;MACAC,YAAA;MACAC,UAAA;MACAC,MAAA;MACAC,SAAA;MACAP,OAAA;MACAE,KAAA;MACAyB,iBAAA;MACA/B;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}