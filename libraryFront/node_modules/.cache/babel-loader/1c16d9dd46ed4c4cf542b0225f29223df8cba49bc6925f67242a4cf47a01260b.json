{"ast":null,"code":"import { defineComponent, reactive, computed, toRefs } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { ElCheckboxGroup, ElCheckbox } from '../../checkbox/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport { CircleClose, Search } from '@element-plus/icons-vue';\nimport { useCheckProps, CHECKED_CHANGE_EVENT, useCheck } from './useCheck.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nvar script = defineComponent({\n  name: \"ElTransferPanel\",\n  components: {\n    ElCheckboxGroup,\n    ElCheckbox,\n    ElInput,\n    ElIcon,\n    OptionContent: ({\n      option\n    }) => option\n  },\n  props: useCheckProps,\n  emits: [CHECKED_CHANGE_EVENT],\n  setup(props, {\n    slots\n  }) {\n    const {\n      t\n    } = useLocale();\n    const panelState = reactive({\n      checked: [],\n      allChecked: false,\n      query: \"\",\n      inputHover: false,\n      checkChangeByUser: true\n    });\n    const {\n      labelProp,\n      keyProp,\n      disabledProp,\n      filteredData,\n      checkedSummary,\n      isIndeterminate,\n      handleAllCheckedChange\n    } = useCheck(props, panelState);\n    const hasNoMatch = computed(() => {\n      return panelState.query.length > 0 && filteredData.value.length === 0;\n    });\n    const inputIcon = computed(() => {\n      return panelState.query.length > 0 && panelState.inputHover ? CircleClose : Search;\n    });\n    const hasFooter = computed(() => !!slots.default()[0].children.length);\n    const clearQuery = () => {\n      if (inputIcon.value === CircleClose) {\n        panelState.query = \"\";\n      }\n    };\n    const {\n      checked,\n      allChecked,\n      query,\n      inputHover,\n      checkChangeByUser\n    } = toRefs(panelState);\n    return {\n      labelProp,\n      keyProp,\n      disabledProp,\n      filteredData,\n      checkedSummary,\n      isIndeterminate,\n      handleAllCheckedChange,\n      checked,\n      allChecked,\n      query,\n      inputHover,\n      checkChangeByUser,\n      hasNoMatch,\n      inputIcon,\n      hasFooter,\n      clearQuery,\n      t\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","components","ElCheckboxGroup","ElCheckbox","ElInput","ElIcon","OptionContent","option","props","useCheckProps","emits","CHECKED_CHANGE_EVENT","setup","slots","t","useLocale","panelState","reactive","checked","allChecked","query","inputHover","checkChangeByUser","labelProp","keyProp","disabledProp","filteredData","checkedSummary","isIndeterminate","handleAllCheckedChange","useCheck","hasNoMatch","computed","length","value","inputIcon","CircleClose","Search","hasFooter","default","children","clearQuery","toRefs"],"sources":["../../../../../../packages/components/transfer/src/transfer-panel.vue"],"sourcesContent":["<template>\n  <div class=\"el-transfer-panel\">\n    <p class=\"el-transfer-panel__header\">\n      <el-checkbox\n        v-model=\"allChecked\"\n        :indeterminate=\"isIndeterminate\"\n        @change=\"handleAllCheckedChange\"\n      >\n        {{ title }}\n        <span>{{ checkedSummary }}</span>\n      </el-checkbox>\n    </p>\n\n    <div\n      :class=\"['el-transfer-panel__body', hasFooter ? 'is-with-footer' : '']\"\n    >\n      <el-input\n        v-if=\"filterable\"\n        v-model=\"query\"\n        class=\"el-transfer-panel__filter\"\n        size=\"small\"\n        :placeholder=\"placeholder\"\n        @mouseenter=\"inputHover = true\"\n        @mouseleave=\"inputHover = false\"\n      >\n        <template #prefix>\n          <el-icon v-if=\"inputIcon\" class=\"el-input__icon\" @click=\"clearQuery\">\n            <component :is=\"inputIcon\" />\n          </el-icon>\n        </template>\n      </el-input>\n      <el-checkbox-group\n        v-show=\"!hasNoMatch && data.length > 0\"\n        v-model=\"checked\"\n        :class=\"{ 'is-filterable': filterable }\"\n        class=\"el-transfer-panel__list\"\n      >\n        <el-checkbox\n          v-for=\"item in filteredData\"\n          :key=\"item[keyProp]\"\n          class=\"el-transfer-panel__item\"\n          :label=\"item[keyProp]\"\n          :disabled=\"item[disabledProp]\"\n        >\n          <option-content :option=\"optionRender(item)\" />\n        </el-checkbox>\n      </el-checkbox-group>\n      <p\n        v-show=\"hasNoMatch || data.length === 0\"\n        class=\"el-transfer-panel__empty\"\n      >\n        {{ hasNoMatch ? t('el.transfer.noMatch') : t('el.transfer.noData') }}\n      </p>\n    </div>\n    <p v-if=\"hasFooter\" class=\"el-transfer-panel__footer\">\n      <slot></slot>\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, reactive, toRefs } from 'vue'\nimport { useLocale } from '@element-plus/hooks'\nimport { ElCheckbox, ElCheckboxGroup } from '@element-plus/components/checkbox'\nimport ElIcon from '@element-plus/components/icon'\nimport ElInput from '@element-plus/components/input'\nimport { CircleClose, Search } from '@element-plus/icons-vue'\nimport { useCheck, useCheckProps, CHECKED_CHANGE_EVENT } from './useCheck'\n\nexport default defineComponent({\n  name: 'ElTransferPanel',\n\n  components: {\n    ElCheckboxGroup,\n    ElCheckbox,\n    ElInput,\n    ElIcon,\n    OptionContent: ({ option }) => option,\n  },\n\n  props: useCheckProps,\n\n  emits: [CHECKED_CHANGE_EVENT],\n\n  setup(props, { slots }) {\n    const { t } = useLocale()\n\n    const panelState = reactive({\n      checked: [],\n      allChecked: false,\n      query: '',\n      inputHover: false,\n      checkChangeByUser: true,\n    })\n\n    const {\n      labelProp,\n      keyProp,\n      disabledProp,\n      filteredData,\n      checkedSummary,\n      isIndeterminate,\n      handleAllCheckedChange,\n    } = useCheck(props, panelState)\n\n    const hasNoMatch = computed(() => {\n      return panelState.query.length > 0 && filteredData.value.length === 0\n    })\n\n    const inputIcon = computed(() => {\n      return panelState.query.length > 0 && panelState.inputHover\n        ? CircleClose\n        : Search\n    })\n\n    const hasFooter = computed(() => !!slots.default()[0].children.length)\n\n    const clearQuery = () => {\n      if (inputIcon.value === CircleClose) {\n        panelState.query = ''\n      }\n    }\n\n    const { checked, allChecked, query, inputHover, checkChangeByUser } =\n      toRefs(panelState)\n\n    return {\n      labelProp,\n      keyProp,\n      disabledProp,\n      filteredData,\n      checkedSummary,\n      isIndeterminate,\n      handleAllCheckedChange,\n\n      checked,\n      allChecked,\n      query,\n      inputHover,\n      checkChangeByUser,\n\n      hasNoMatch,\n      inputIcon,\n      hasFooter,\n      clearQuery,\n\n      t,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;AAqEA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EAENC,UAAA,EAAY;IACVC,eAAA;IACAC,UAAA;IACAC,OAAA;IACAC,MAAA;IACAC,aAAA,EAAeA,CAAC;MAAEC;IAAA,MAAaA;EAAA;EAGjCC,KAAA,EAAOC,aAAA;EAEPC,KAAA,EAAO,CAACC,oBAAA;EAERC,MAAMJ,KAAA,EAAO;IAAEK;EAAA,GAAS;IACtB,MAAM;MAAEC;IAAA,IAAMC,SAAA;IAEd,MAAMC,UAAA,GAAaC,QAAA,CAAS;MAC1BC,OAAA,EAAS;MACTC,UAAA,EAAY;MACZC,KAAA,EAAO;MACPC,UAAA,EAAY;MACZC,iBAAA,EAAmB;IAAA;IAGrB,MAAM;MACJC,SAAA;MACAC,OAAA;MACAC,YAAA;MACAC,YAAA;MACAC,cAAA;MACAC,eAAA;MACAC;IAAA,IACEC,QAAA,CAAStB,KAAA,EAAOQ,UAAA;IAEpB,MAAMe,UAAA,GAAaC,QAAA,CAAS,MAAM;MAChC,OAAOhB,UAAA,CAAWI,KAAA,CAAMa,MAAA,GAAS,KAAKP,YAAA,CAAaQ,KAAA,CAAMD,MAAA,KAAW;IAAA;IAGtE,MAAME,SAAA,GAAYH,QAAA,CAAS,MAAM;MAC/B,OAAOhB,UAAA,CAAWI,KAAA,CAAMa,MAAA,GAAS,KAAKjB,UAAA,CAAWK,UAAA,GAC7Ce,WAAA,GACAC,MAAA;IAAA;IAGN,MAAMC,SAAA,GAAYN,QAAA,CAAS,MAAM,CAAC,CAACnB,KAAA,CAAM0B,OAAA,GAAU,GAAGC,QAAA,CAASP,MAAA;IAE/D,MAAMQ,UAAA,GAAaA,CAAA,KAAM;MACvB,IAAIN,SAAA,CAAUD,KAAA,KAAUE,WAAA,EAAa;QACnCpB,UAAA,CAAWI,KAAA,GAAQ;MAAA;IAAA;IAIvB,MAAM;MAAEF,OAAA;MAASC,UAAA;MAAYC,KAAA;MAAOC,UAAA;MAAYC;IAAA,IAC9CoB,MAAA,CAAO1B,UAAA;IAET,OAAO;MACLO,SAAA;MACAC,OAAA;MACAC,YAAA;MACAC,YAAA;MACAC,cAAA;MACAC,eAAA;MACAC,sBAAA;MAEAX,OAAA;MACAC,UAAA;MACAC,KAAA;MACAC,UAAA;MACAC,iBAAA;MAEAS,UAAA;MACAI,SAAA;MACAG,SAAA;MACAG,UAAA;MAEA3B;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}