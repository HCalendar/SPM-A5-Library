{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getCurrentInstance, computed } from 'vue';\nconst getAllColumns = columns => {\n  const result = [];\n  columns.forEach(column => {\n    if (column.children) {\n      result.push(column);\n      result.push.apply(result, getAllColumns(column.children));\n    } else {\n      result.push(column);\n    }\n  });\n  return result;\n};\nconst convertToRows = originColumns => {\n  let maxLevel = 1;\n  const traverse = (column, parent) => {\n    if (parent) {\n      column.level = parent.level + 1;\n      if (maxLevel < column.level) {\n        maxLevel = column.level;\n      }\n    }\n    if (column.children) {\n      let colSpan = 0;\n      column.children.forEach(subColumn => {\n        traverse(subColumn, column);\n        colSpan += subColumn.colSpan;\n      });\n      column.colSpan = colSpan;\n    } else {\n      column.colSpan = 1;\n    }\n  };\n  originColumns.forEach(column => {\n    column.level = 1;\n    traverse(column, void 0);\n  });\n  const rows = [];\n  for (let i = 0; i < maxLevel; i++) {\n    rows.push([]);\n  }\n  const allColumns = getAllColumns(originColumns);\n  allColumns.forEach(column => {\n    if (!column.children) {\n      column.rowSpan = maxLevel - column.level + 1;\n    } else {\n      column.rowSpan = 1;\n    }\n    rows[column.level - 1].push(column);\n  });\n  return rows;\n};\nfunction useUtils(props) {\n  const instance = getCurrentInstance();\n  const parent = instance.parent;\n  const columnRows = computed(() => {\n    return convertToRows(props.store.states.originColumns.value);\n  });\n  const isGroup = computed(() => {\n    const result = columnRows.value.length > 1;\n    if (result) parent.state.isGroup.value = true;\n    return result;\n  });\n  const toggleAllSelection = event => {\n    event.stopPropagation();\n    parent.store.commit(\"toggleAllSelection\");\n  };\n  return {\n    isGroup,\n    toggleAllSelection,\n    columnRows\n  };\n}\nexport { useUtils as default };","map":{"version":3,"names":["getAllColumns","columns","result","forEach","column","children","push","apply","convertToRows","originColumns","maxLevel","traverse","parent","level","colSpan","subColumn","rows","i","allColumns","rowSpan","useUtils","props","instance","getCurrentInstance","columnRows","computed","store","states","value","isGroup","length","state","toggleAllSelection","event","stopPropagation","commit"],"sources":["../../../../../../../packages/components/table/src/table-header/utils-helper.ts"],"sourcesContent":["import { getCurrentInstance, computed } from 'vue'\n\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type { Table } from '../table/defaults'\nimport type { TableHeaderProps } from '.'\n\nconst getAllColumns = <T>(\n  columns: TableColumnCtx<T>[]\n): TableColumnCtx<T>[] => {\n  const result = []\n  columns.forEach((column) => {\n    if (column.children) {\n      result.push(column)\n      // eslint-disable-next-line prefer-spread\n      result.push.apply(result, getAllColumns(column.children))\n    } else {\n      result.push(column)\n    }\n  })\n  return result\n}\n\nconst convertToRows = <T>(\n  originColumns: TableColumnCtx<T>[]\n): TableColumnCtx<T>[] => {\n  let maxLevel = 1\n  const traverse = (column: TableColumnCtx<T>, parent: TableColumnCtx<T>) => {\n    if (parent) {\n      column.level = parent.level + 1\n      if (maxLevel < column.level) {\n        maxLevel = column.level\n      }\n    }\n    if (column.children) {\n      let colSpan = 0\n      column.children.forEach((subColumn) => {\n        traverse(subColumn, column)\n        colSpan += subColumn.colSpan\n      })\n      column.colSpan = colSpan\n    } else {\n      column.colSpan = 1\n    }\n  }\n\n  originColumns.forEach((column) => {\n    column.level = 1\n    traverse(column, undefined)\n  })\n\n  const rows = []\n  for (let i = 0; i < maxLevel; i++) {\n    rows.push([])\n  }\n\n  const allColumns = getAllColumns(originColumns)\n\n  allColumns.forEach((column) => {\n    if (!column.children) {\n      column.rowSpan = maxLevel - column.level + 1\n    } else {\n      column.rowSpan = 1\n    }\n    rows[column.level - 1].push(column)\n  })\n\n  return rows\n}\n\nfunction useUtils<T>(props: TableHeaderProps<T>) {\n  const instance = getCurrentInstance()\n  const parent = instance.parent as Table<T>\n  const columnRows = computed(() => {\n    return convertToRows(props.store.states.originColumns.value)\n  })\n  const isGroup = computed(() => {\n    const result = columnRows.value.length > 1\n    if (result) parent.state.isGroup.value = true\n    return result\n  })\n  const toggleAllSelection = (event: Event) => {\n    event.stopPropagation()\n    parent.store.commit('toggleAllSelection')\n  }\n  return {\n    isGroup,\n    toggleAllSelection,\n    columnRows,\n  }\n}\n\nexport default useUtils\n"],"mappings":";;AAMA,MAAMA,aAAA,GACJC,OAAA,IACwB;EACxB,MAAMC,MAAA,GAAS;EACfD,OAAA,CAAQE,OAAA,CAASC,MAAA,IAAW;IAC1B,IAAIA,MAAA,CAAOC,QAAA,EAAU;MACnBH,MAAA,CAAOI,IAAA,CAAKF,MAAA;MAEZF,MAAA,CAAOI,IAAA,CAAKC,KAAA,CAAML,MAAA,EAAQF,aAAA,CAAcI,MAAA,CAAOC,QAAA;IAAA,OAC1C;MACLH,MAAA,CAAOI,IAAA,CAAKF,MAAA;IAAA;EAAA;EAGhB,OAAOF,MAAA;AAAA;AAGT,MAAMM,aAAA,GACJC,aAAA,IACwB;EACxB,IAAIC,QAAA,GAAW;EACf,MAAMC,QAAA,GAAWA,CAACP,MAAA,EAA2BQ,MAAA,KAA8B;IACzE,IAAIA,MAAA,EAAQ;MACVR,MAAA,CAAOS,KAAA,GAAQD,MAAA,CAAOC,KAAA,GAAQ;MAC9B,IAAIH,QAAA,GAAWN,MAAA,CAAOS,KAAA,EAAO;QAC3BH,QAAA,GAAWN,MAAA,CAAOS,KAAA;MAAA;IAAA;IAGtB,IAAIT,MAAA,CAAOC,QAAA,EAAU;MACnB,IAAIS,OAAA,GAAU;MACdV,MAAA,CAAOC,QAAA,CAASF,OAAA,CAASY,SAAA,IAAc;QACrCJ,QAAA,CAASI,SAAA,EAAWX,MAAA;QACpBU,OAAA,IAAWC,SAAA,CAAUD,OAAA;MAAA;MAEvBV,MAAA,CAAOU,OAAA,GAAUA,OAAA;IAAA,OACZ;MACLV,MAAA,CAAOU,OAAA,GAAU;IAAA;EAAA;EAIrBL,aAAA,CAAcN,OAAA,CAASC,MAAA,IAAW;IAChCA,MAAA,CAAOS,KAAA,GAAQ;IACfF,QAAA,CAASP,MAAA,EAAQ;EAAA;EAGnB,MAAMY,IAAA,GAAO;EACb,SAASC,CAAA,GAAI,GAAGA,CAAA,GAAIP,QAAA,EAAUO,CAAA,IAAK;IACjCD,IAAA,CAAKV,IAAA,CAAK;EAAA;EAGZ,MAAMY,UAAA,GAAalB,aAAA,CAAcS,aAAA;EAEjCS,UAAA,CAAWf,OAAA,CAASC,MAAA,IAAW;IAC7B,IAAI,CAACA,MAAA,CAAOC,QAAA,EAAU;MACpBD,MAAA,CAAOe,OAAA,GAAUT,QAAA,GAAWN,MAAA,CAAOS,KAAA,GAAQ;IAAA,OACtC;MACLT,MAAA,CAAOe,OAAA,GAAU;IAAA;IAEnBH,IAAA,CAAKZ,MAAA,CAAOS,KAAA,GAAQ,GAAGP,IAAA,CAAKF,MAAA;EAAA;EAG9B,OAAOY,IAAA;AAAA;AAGT,SAAAI,SAAqBC,KAAA,EAA4B;EAC/C,MAAMC,QAAA,GAAWC,kBAAA;EACjB,MAAMX,MAAA,GAASU,QAAA,CAASV,MAAA;EACxB,MAAMY,UAAA,GAAaC,QAAA,CAAS,MAAM;IAChC,OAAOjB,aAAA,CAAca,KAAA,CAAMK,KAAA,CAAMC,MAAA,CAAOlB,aAAA,CAAcmB,KAAA;EAAA;EAExD,MAAMC,OAAA,GAAUJ,QAAA,CAAS,MAAM;IAC7B,MAAMvB,MAAA,GAASsB,UAAA,CAAWI,KAAA,CAAME,MAAA,GAAS;IACzC,IAAI5B,MAAA,EAAQU,MAAA,CAAOmB,KAAA,CAAMF,OAAA,CAAQD,KAAA,GAAQ;IACzC,OAAO1B,MAAA;EAAA;EAET,MAAM8B,kBAAA,GAAsBC,KAAA,IAAiB;IAC3CA,KAAA,CAAMC,eAAA;IACNtB,MAAA,CAAOc,KAAA,CAAMS,MAAA,CAAO;EAAA;EAEtB,OAAO;IACLN,OAAA;IACAG,kBAAA;IACAR;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}