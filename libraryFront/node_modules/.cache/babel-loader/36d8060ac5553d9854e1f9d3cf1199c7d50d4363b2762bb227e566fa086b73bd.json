{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { defineComponent, inject, computed, provide, getCurrentInstance, onBeforeUnmount, ref, h } from 'vue';\nimport { NOOP } from '@vue/shared';\nimport '../../../tokens/index.mjs';\nimport upload from './ajax.mjs';\nimport './upload-list.mjs';\nimport './upload.mjs';\nimport useHandlers from './useHandlers.mjs';\nimport script$1 from './upload.vue_vue_type_script_lang.mjs';\nimport script$2 from './upload-list.vue_vue_type_script_lang.mjs';\nimport { elFormKey } from '../../../tokens/form.mjs';\nvar script = defineComponent({\n  name: \"ElUpload\",\n  components: {\n    Upload: script$1,\n    UploadList: script$2\n  },\n  props: {\n    action: {\n      type: String,\n      required: true\n    },\n    headers: {\n      type: Object,\n      default: () => ({})\n    },\n    method: {\n      type: String,\n      default: \"post\"\n    },\n    data: {\n      type: Object,\n      default: () => ({})\n    },\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    name: {\n      type: String,\n      default: \"file\"\n    },\n    drag: {\n      type: Boolean,\n      default: false\n    },\n    withCredentials: Boolean,\n    showFileList: {\n      type: Boolean,\n      default: true\n    },\n    accept: {\n      type: String,\n      default: \"\"\n    },\n    type: {\n      type: String,\n      default: \"select\"\n    },\n    beforeUpload: {\n      type: Function,\n      default: NOOP\n    },\n    beforeRemove: {\n      type: Function,\n      default: NOOP\n    },\n    onRemove: {\n      type: Function,\n      default: NOOP\n    },\n    onChange: {\n      type: Function,\n      default: NOOP\n    },\n    onPreview: {\n      type: Function,\n      default: NOOP\n    },\n    onSuccess: {\n      type: Function,\n      default: NOOP\n    },\n    onProgress: {\n      type: Function,\n      default: NOOP\n    },\n    onError: {\n      type: Function,\n      default: NOOP\n    },\n    fileList: {\n      type: Array,\n      default: () => {\n        return [];\n      }\n    },\n    autoUpload: {\n      type: Boolean,\n      default: true\n    },\n    listType: {\n      type: String,\n      default: \"text\"\n    },\n    httpRequest: {\n      type: Function,\n      default: upload\n    },\n    disabled: Boolean,\n    limit: {\n      type: Number,\n      default: null\n    },\n    onExceed: {\n      type: Function,\n      default: () => NOOP\n    }\n  },\n  setup(props) {\n    const elForm = inject(elFormKey, {});\n    const uploadDisabled = computed(() => {\n      return props.disabled || elForm.disabled;\n    });\n    const {\n      abort,\n      clearFiles,\n      handleError,\n      handleProgress,\n      handleStart,\n      handleSuccess,\n      handleRemove,\n      submit,\n      uploadRef,\n      uploadFiles\n    } = useHandlers(props);\n    provide(\"uploader\", getCurrentInstance());\n    onBeforeUnmount(() => {\n      uploadFiles.value.forEach(file => {\n        if (file.url && file.url.indexOf(\"blob:\") === 0) {\n          URL.revokeObjectURL(file.url);\n        }\n      });\n    });\n    return {\n      abort,\n      dragOver: ref(false),\n      draging: ref(false),\n      handleError,\n      handleProgress,\n      handleRemove,\n      handleStart,\n      handleSuccess,\n      uploadDisabled,\n      uploadFiles,\n      uploadRef,\n      submit,\n      clearFiles\n    };\n  },\n  render() {\n    var _a, _b;\n    let uploadList;\n    if (this.showFileList) {\n      uploadList = h(script$2, {\n        disabled: this.uploadDisabled,\n        listType: this.listType,\n        files: this.uploadFiles,\n        onRemove: this.handleRemove,\n        handlePreview: this.onPreview\n      }, this.$slots.file ? {\n        default: props => {\n          return this.$slots.file({\n            file: props.file\n          });\n        }\n      } : null);\n    } else {\n      uploadList = null;\n    }\n    const uploadData = {\n      type: this.type,\n      drag: this.drag,\n      action: this.action,\n      multiple: this.multiple,\n      \"before-upload\": this.beforeUpload,\n      \"with-credentials\": this.withCredentials,\n      headers: this.headers,\n      method: this.method,\n      name: this.name,\n      data: this.data,\n      accept: this.accept,\n      fileList: this.uploadFiles,\n      autoUpload: this.autoUpload,\n      listType: this.listType,\n      disabled: this.uploadDisabled,\n      limit: this.limit,\n      \"on-exceed\": this.onExceed,\n      \"on-start\": this.handleStart,\n      \"on-progress\": this.handleProgress,\n      \"on-success\": this.handleSuccess,\n      \"on-error\": this.handleError,\n      \"on-preview\": this.onPreview,\n      \"on-remove\": this.handleRemove,\n      \"http-request\": this.httpRequest,\n      ref: \"uploadRef\"\n    };\n    const trigger = this.$slots.trigger || this.$slots.default;\n    const uploadComponent = h(script$1, uploadData, {\n      default: () => trigger == null ? void 0 : trigger()\n    });\n    return h(\"div\", [this.listType === \"picture-card\" ? uploadList : null, this.$slots.trigger ? [uploadComponent, this.$slots.default()] : uploadComponent, (_b = (_a = this.$slots).tip) == null ? void 0 : _b.call(_a), this.listType !== \"picture-card\" ? uploadList : null]);\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","components","Upload","script$1","UploadList","script$2","props","action","type","String","required","headers","Object","default","method","data","multiple","Boolean","drag","withCredentials","showFileList","accept","beforeUpload","Function","NOOP","beforeRemove","onRemove","onChange","onPreview","onSuccess","onProgress","onError","fileList","Array","autoUpload","listType","httpRequest","upload","disabled","limit","Number","onExceed","setup","elForm","inject","elFormKey","uploadDisabled","computed","abort","clearFiles","handleError","handleProgress","handleStart","handleSuccess","handleRemove","submit","uploadRef","uploadFiles","useHandlers","provide","getCurrentInstance","onBeforeUnmount","value","forEach","file","url","indexOf","URL","revokeObjectURL","dragOver","ref","draging","render","uploadList","h","files","handlePreview","$slots","uploadData","trigger","uploadComponent","_b","_a","tip","call"],"sources":["../../../../../../packages/components/upload/src/index.vue"],"sourcesContent":["<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  h,\n  getCurrentInstance,\n  inject,\n  ref,\n  provide,\n  onBeforeUnmount,\n} from 'vue'\nimport { NOOP } from '@vue/shared'\nimport { elFormKey } from '@element-plus/tokens'\n\nimport ajax from './ajax'\nimport UploadList from './upload-list.vue'\nimport Upload from './upload.vue'\nimport useHandlers from './useHandlers'\n\nimport type { PropType } from 'vue'\nimport type { ElFormContext } from '@element-plus/tokens'\nimport type { Nullable } from '@element-plus/utils/types'\nimport type {\n  ListType,\n  UploadFile,\n  FileHandler,\n  FileResultHandler,\n} from './upload.type'\n\ntype PFileHandler<T> = PropType<FileHandler<T>>\ntype PFileResultHandler<T = any> = PropType<FileResultHandler<T>>\n\nexport default defineComponent({\n  name: 'ElUpload',\n  components: {\n    Upload,\n    UploadList,\n  },\n  props: {\n    action: {\n      type: String,\n      required: true,\n    },\n    headers: {\n      type: Object as PropType<Headers>,\n      default: () => ({}),\n    },\n    method: {\n      type: String,\n      default: 'post',\n    },\n    data: {\n      type: Object,\n      default: () => ({}),\n    },\n    multiple: {\n      type: Boolean,\n      default: false,\n    },\n    name: {\n      type: String,\n      default: 'file',\n    },\n    drag: {\n      type: Boolean,\n      default: false,\n    },\n    withCredentials: Boolean,\n    showFileList: {\n      type: Boolean,\n      default: true,\n    },\n    accept: {\n      type: String,\n      default: '',\n    },\n    type: {\n      type: String,\n      default: 'select',\n    },\n    beforeUpload: {\n      type: Function as PFileHandler<void>,\n      default: NOOP,\n    },\n    beforeRemove: {\n      type: Function as PFileHandler<boolean>,\n      default: NOOP,\n    },\n    onRemove: {\n      type: Function as PFileHandler<void>,\n      default: NOOP,\n    },\n    onChange: {\n      type: Function as PFileHandler<void>,\n      default: NOOP,\n    },\n    onPreview: {\n      type: Function as PropType<() => void>,\n      default: NOOP,\n    },\n    onSuccess: {\n      type: Function as PFileResultHandler,\n      default: NOOP,\n    },\n    onProgress: {\n      type: Function as PFileResultHandler<ProgressEvent>,\n      default: NOOP,\n    },\n    onError: {\n      type: Function as PFileResultHandler<Error>,\n      default: NOOP,\n    },\n    fileList: {\n      type: Array as PropType<UploadFile[]>,\n      default: () => {\n        return [] as UploadFile[]\n      },\n    },\n    autoUpload: {\n      type: Boolean,\n      default: true,\n    },\n    listType: {\n      type: String as PropType<ListType>,\n      default: 'text' as ListType, // text,picture,picture-card\n    },\n    httpRequest: {\n      type: Function,\n      default: ajax,\n    },\n    disabled: Boolean,\n    limit: {\n      type: Number as PropType<Nullable<number>>,\n      default: null,\n    },\n    onExceed: {\n      type: Function,\n      default: () => NOOP,\n    },\n  },\n  setup(props) {\n    const elForm = inject(elFormKey, {} as ElFormContext)\n\n    const uploadDisabled = computed(() => {\n      return props.disabled || elForm.disabled\n    })\n\n    const {\n      abort,\n      clearFiles,\n      handleError,\n      handleProgress,\n      handleStart,\n      handleSuccess,\n      handleRemove,\n      submit,\n      uploadRef,\n      uploadFiles,\n    } = useHandlers(props)\n\n    provide('uploader', getCurrentInstance())\n\n    onBeforeUnmount(() => {\n      uploadFiles.value.forEach((file) => {\n        if (file.url && file.url.indexOf('blob:') === 0) {\n          URL.revokeObjectURL(file.url)\n        }\n      })\n    })\n\n    return {\n      abort,\n      dragOver: ref(false),\n      draging: ref(false),\n      handleError,\n      handleProgress,\n      handleRemove,\n      handleStart,\n      handleSuccess,\n      uploadDisabled,\n      uploadFiles,\n      uploadRef,\n      submit,\n      clearFiles,\n    }\n  },\n  render() {\n    let uploadList\n    if (this.showFileList) {\n      uploadList = h(\n        UploadList,\n        {\n          disabled: this.uploadDisabled,\n          listType: this.listType,\n          files: this.uploadFiles,\n          onRemove: this.handleRemove,\n          handlePreview: this.onPreview,\n        },\n        this.$slots.file\n          ? {\n              default: (props: { file: UploadFile }) => {\n                return this.$slots.file({\n                  file: props.file,\n                })\n              },\n            }\n          : null\n      )\n    } else {\n      uploadList = null\n    }\n\n    const uploadData = {\n      type: this.type,\n      drag: this.drag,\n      action: this.action,\n      multiple: this.multiple,\n      'before-upload': this.beforeUpload,\n      'with-credentials': this.withCredentials,\n      headers: this.headers,\n      method: this.method,\n      name: this.name,\n      data: this.data,\n      accept: this.accept,\n      fileList: this.uploadFiles,\n      autoUpload: this.autoUpload,\n      listType: this.listType,\n      disabled: this.uploadDisabled,\n      limit: this.limit,\n      'on-exceed': this.onExceed,\n      'on-start': this.handleStart,\n      'on-progress': this.handleProgress,\n      'on-success': this.handleSuccess,\n      'on-error': this.handleError,\n      'on-preview': this.onPreview,\n      'on-remove': this.handleRemove,\n      'http-request': this.httpRequest,\n      ref: 'uploadRef',\n    }\n    const trigger = this.$slots.trigger || this.$slots.default\n    const uploadComponent = h(Upload, uploadData, {\n      default: () => trigger?.(),\n    })\n    return h('div', [\n      this.listType === 'picture-card' ? uploadList : null,\n      this.$slots.trigger\n        ? [uploadComponent, this.$slots.default()]\n        : uploadComponent,\n      this.$slots.tip?.(),\n      this.listType !== 'picture-card' ? uploadList : null,\n    ])\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}