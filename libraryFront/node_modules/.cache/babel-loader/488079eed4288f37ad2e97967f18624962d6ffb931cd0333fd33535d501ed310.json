{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"ValidCode disabled-select\",\n    style: _normalizeStyle(`width:${$props.width}; height:${$props.height}`),\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.refreshCode && $options.refreshCode(...args))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.codeList, (item, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index,\n      style: _normalizeStyle($options.getStyle(item))\n    }, _toDisplayString(item.code), 5 /* TEXT, STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))], 4 /* STYLE */);\n}","map":{"version":3,"names":["_createElementBlock","class","style","_normalizeStyle","$props","width","height","onClick","_cache","args","$options","refreshCode","_Fragment","_renderList","$data","codeList","item","index","key","getStyle","code"],"sources":["G:\\SPM-A5-Library\\libraryFront\\src\\components\\Validate.vue"],"sourcesContent":["<template>\r\n  <div\r\n      class=\"ValidCode disabled-select\"\r\n      :style=\"`width:${width}; height:${height}`\"\r\n      @click=\"refreshCode\"\r\n  >\r\n    <span\r\n        v-for=\"(item, index) in codeList\"\r\n        :key=\"index\"\r\n        :style=\"getStyle(item)\"\r\n    >{{ item.code }}</span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ValidCode',\r\n  model: {\r\n    prop: 'value',\r\n    event: 'input'\r\n  },\r\n  props: {\r\n    width: {\r\n      type: String,\r\n      default: '100px'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '40px'\r\n    },\r\n    length: {\r\n      type: Number,\r\n      default: 4\r\n    },\r\n    refresh: {\r\n      type: Number\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      codeList: []\r\n    }\r\n  },\r\n  watch: {\r\n    refresh () {\r\n      this.createdCode()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.createdCode()\r\n  },\r\n  methods: {\r\n    refreshCode () {\r\n      this.createdCode()\r\n    },\r\n    createdCode () {\r\n      const len = this.length\r\n      const codeList = []\r\n      const chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz0123456789'\r\n      const charsLen = chars.length\r\n      // 生成\r\n      for (let i = 0; i < len; i++) {\r\n        const rgb = [Math.round(Math.random() * 220), Math.round(Math.random() * 240), Math.round(Math.random() * 200)]\r\n        codeList.push({\r\n          code: chars.charAt(Math.floor(Math.random() * charsLen)),\r\n          color: `rgb(${rgb})`,\r\n          fontSize: `${10 + (+[Math.floor(Math.random() * 10)] + 6)}px`,\r\n          padding: `${[Math.floor(Math.random() * 10)]}px`,\r\n          transform: `rotate(${Math.floor(Math.random() * 90) - Math.floor(Math.random() * 90)}deg)`\r\n        })\r\n      }\r\n      // 指向\r\n      this.codeList = codeList\r\n      // 将当前数据派发出去\r\n      // console.log(codeList.map(item => item.code).join(''))\r\n      this.$emit('input', codeList.map(item => item.code).join(''))\r\n    },\r\n    getStyle (data) {\r\n      return `color: ${data.color}; font-size: ${data.fontSize}; padding: ${data.padding}; transform: ${data.transform}`\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.ValidCode{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n}\r\n.ValidCode span{\r\n  display: inline-block;\r\n}\r\n</style>\r\n"],"mappings":";;uBACEA,mBAAA,CAUM;IATFC,KAAK,EAAC,2BAA2B;IAChCC,KAAK,EAHZC,eAAA,UAGuBC,MAAA,CAAAC,KAAK,YAAYD,MAAA,CAAAE,MAAM;IACvCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;yBAErBT,mBAAA,CAIuBY,SAAA,QAV3BC,WAAA,CAOgCC,KAAA,CAAAC,QAAQ,EAPxC,CAOgBC,IAAI,EAAEC,KAAK;yBADvBjB,mBAAA,CAIuB;MAFlBkB,GAAG,EAAED,KAAK;MACVf,KAAK,EATdC,eAAA,CASgBO,QAAA,CAAAS,QAAQ,CAACH,IAAI;wBACrBA,IAAI,CAACI,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}