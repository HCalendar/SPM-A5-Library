{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, normalizeStyle, createBlock, Transition, withCtx, withDirectives, createVNode, vShow, createCommentVNode, renderSlot, Fragment, renderList, toDisplayString } from 'vue';\nconst _hoisted_1 = [\"onMouseenter\", \"onClick\"];\nconst _hoisted_2 = {\n  class: \"el-carousel__button\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_arrow_left = resolveComponent(\"arrow-left\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_arrow_right = resolveComponent(\"arrow-right\");\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"root\",\n    class: normalizeClass(_ctx.carouselClasses),\n    onMouseenter: _cache[6] || (_cache[6] = withModifiers((...args) => _ctx.handleMouseEnter && _ctx.handleMouseEnter(...args), [\"stop\"])),\n    onMouseleave: _cache[7] || (_cache[7] = withModifiers((...args) => _ctx.handleMouseLeave && _ctx.handleMouseLeave(...args), [\"stop\"]))\n  }, [createElementVNode(\"div\", {\n    class: \"el-carousel__container\",\n    style: normalizeStyle({\n      height: _ctx.height\n    })\n  }, [_ctx.arrowDisplay ? (openBlock(), createBlock(Transition, {\n    key: 0,\n    name: \"carousel-arrow-left\"\n  }, {\n    default: withCtx(() => [withDirectives(createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"el-carousel__arrow el-carousel__arrow--left\",\n      onMouseenter: _cache[0] || (_cache[0] = $event => _ctx.handleButtonEnter(\"left\")),\n      onMouseleave: _cache[1] || (_cache[1] = (...args) => _ctx.handleButtonLeave && _ctx.handleButtonLeave(...args)),\n      onClick: _cache[2] || (_cache[2] = withModifiers($event => _ctx.throttledArrowClick(_ctx.data.activeIndex - 1), [\"stop\"]))\n    }, [createVNode(_component_el_icon, null, {\n      default: withCtx(() => [createVNode(_component_arrow_left)]),\n      _: 1\n    })], 544), [[vShow, (_ctx.arrow === \"always\" || _ctx.data.hover) && (_ctx.props.loop || _ctx.data.activeIndex > 0)]])]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), _ctx.arrowDisplay ? (openBlock(), createBlock(Transition, {\n    key: 1,\n    name: \"carousel-arrow-right\"\n  }, {\n    default: withCtx(() => [withDirectives(createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"el-carousel__arrow el-carousel__arrow--right\",\n      onMouseenter: _cache[3] || (_cache[3] = $event => _ctx.handleButtonEnter(\"right\")),\n      onMouseleave: _cache[4] || (_cache[4] = (...args) => _ctx.handleButtonLeave && _ctx.handleButtonLeave(...args)),\n      onClick: _cache[5] || (_cache[5] = withModifiers($event => _ctx.throttledArrowClick(_ctx.data.activeIndex + 1), [\"stop\"]))\n    }, [createVNode(_component_el_icon, null, {\n      default: withCtx(() => [createVNode(_component_arrow_right)]),\n      _: 1\n    })], 544), [[vShow, (_ctx.arrow === \"always\" || _ctx.data.hover) && (_ctx.props.loop || _ctx.data.activeIndex < _ctx.items.length - 1)]])]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")], 4), _ctx.indicatorPosition !== \"none\" ? (openBlock(), createElementBlock(\"ul\", {\n    key: 0,\n    class: normalizeClass(_ctx.indicatorsClasses)\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.items, (item, index) => {\n    return openBlock(), createElementBlock(\"li\", {\n      key: index,\n      class: normalizeClass([\"el-carousel__indicator\", \"el-carousel__indicator--\" + _ctx.direction, {\n        \"is-active\": index === _ctx.data.activeIndex\n      }]),\n      onMouseenter: $event => _ctx.throttledIndicatorHover(index),\n      onClick: withModifiers($event => _ctx.handleIndicatorClick(index), [\"stop\"])\n    }, [createElementVNode(\"button\", _hoisted_2, [_ctx.hasLabel ? (openBlock(), createElementBlock(\"span\", _hoisted_3, toDisplayString(item.label), 1)) : createCommentVNode(\"v-if\", true)])], 42, _hoisted_1);\n  }), 128))], 2)) : createCommentVNode(\"v-if\", true)], 34);\n}\nexport { render };","map":{"version":3,"names":["class","createElementBlock","ref","normalizeClass","_ctx","carouselClasses","onMouseenter","_cache","withModifiers","args","handleMouseEnter","onMouseleave","handleMouseLeave","createElementVNode","style","normalizeStyle","height","arrowDisplay","openBlock","createBlock","Transition","name","type","$event","handleButtonEnter","handleButtonLeave","onClick","throttledArrowClick","data","activeIndex","createVNode","_component_el_icon","_component_arrow_left","_component_arrow_right","renderSlot","$slots","indicatorPosition","indicatorsClasses","Fragment","renderList","items","item","index","key","throttledIndicatorHover","handleIndicatorClick","_hoisted_2","hasLabel","_hoisted_3","toDisplayString","label","createCommentVNode"],"sources":["../../../../../../packages/components/carousel/src/main.vue?vue&type=template&id=1303d144&lang.js"],"sourcesContent":["<template>\n  <div\n    ref=\"root\"\n    :class=\"carouselClasses\"\n    @mouseenter.stop=\"handleMouseEnter\"\n    @mouseleave.stop=\"handleMouseLeave\"\n  >\n    <div class=\"el-carousel__container\" :style=\"{ height: height }\">\n      <transition v-if=\"arrowDisplay\" name=\"carousel-arrow-left\">\n        <button\n          v-show=\"\n            (arrow === 'always' || data.hover) &&\n            (props.loop || data.activeIndex > 0)\n          \"\n          type=\"button\"\n          class=\"el-carousel__arrow el-carousel__arrow--left\"\n          @mouseenter=\"handleButtonEnter('left')\"\n          @mouseleave=\"handleButtonLeave\"\n          @click.stop=\"throttledArrowClick(data.activeIndex - 1)\"\n        >\n          <el-icon>\n            <arrow-left />\n          </el-icon>\n        </button>\n      </transition>\n      <transition v-if=\"arrowDisplay\" name=\"carousel-arrow-right\">\n        <button\n          v-show=\"\n            (arrow === 'always' || data.hover) &&\n            (props.loop || data.activeIndex < items.length - 1)\n          \"\n          type=\"button\"\n          class=\"el-carousel__arrow el-carousel__arrow--right\"\n          @mouseenter=\"handleButtonEnter('right')\"\n          @mouseleave=\"handleButtonLeave\"\n          @click.stop=\"throttledArrowClick(data.activeIndex + 1)\"\n        >\n          <el-icon>\n            <arrow-right />\n          </el-icon>\n        </button>\n      </transition>\n      <slot></slot>\n    </div>\n    <ul v-if=\"indicatorPosition !== 'none'\" :class=\"indicatorsClasses\">\n      <li\n        v-for=\"(item, index) in items\"\n        :key=\"index\"\n        :class=\"[\n          'el-carousel__indicator',\n          'el-carousel__indicator--' + direction,\n          { 'is-active': index === data.activeIndex },\n        ]\"\n        @mouseenter=\"throttledIndicatorHover(index)\"\n        @click.stop=\"handleIndicatorClick(index)\"\n      >\n        <button class=\"el-carousel__button\">\n          <span v-if=\"hasLabel\">{{ item.label }}</span>\n        </button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  reactive,\n  computed,\n  ref,\n  provide,\n  onMounted,\n  onBeforeUnmount,\n  watch,\n  nextTick,\n} from 'vue'\nimport throttle from 'lodash/throttle'\nimport {\n  addResizeListener,\n  removeResizeListener,\n} from '@element-plus/utils/resize-event'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowLeft, ArrowRight } from '@element-plus/icons-vue'\n\nimport { debugWarn } from '@element-plus/utils/error'\nimport type {\n  ICarouselProps,\n  CarouselItem,\n  InjectCarouselScope,\n} from './carousel'\n\nexport default defineComponent({\n  name: 'ElCarousel',\n  components: {\n    ElIcon,\n    ArrowLeft,\n    ArrowRight,\n  },\n  props: {\n    initialIndex: {\n      type: Number,\n      default: 0,\n    },\n    height: { type: String, default: '' },\n    trigger: {\n      type: String,\n      default: 'hover',\n    },\n    autoplay: {\n      type: Boolean,\n      default: true,\n    },\n    interval: {\n      type: Number,\n      default: 3000,\n    },\n    indicatorPosition: { type: String, default: '' },\n    indicator: {\n      type: Boolean,\n      default: true,\n    },\n    arrow: {\n      type: String,\n      default: 'hover',\n    },\n    type: { type: String, default: '' },\n    loop: {\n      type: Boolean,\n      default: true,\n    },\n    direction: {\n      type: String,\n      default: 'horizontal',\n      validator(val: string) {\n        return ['horizontal', 'vertical'].includes(val)\n      },\n    },\n    pauseOnHover: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  emits: ['change'],\n  setup(props: ICarouselProps, { emit }) {\n    // data\n    const data = reactive<{\n      activeIndex: number\n      containerWidth: number\n      timer: null | ReturnType<typeof setInterval>\n      hover: boolean\n    }>({\n      activeIndex: -1,\n      containerWidth: 0,\n      timer: null,\n      hover: false,\n    })\n\n    // refs\n    const root = ref(null)\n    const items = ref<CarouselItem[]>([])\n\n    // computed\n    const arrowDisplay = computed(\n      () => props.arrow !== 'never' && props.direction !== 'vertical'\n    )\n\n    const hasLabel = computed(() => {\n      return items.value.some((item) => item.label.toString().length > 0)\n    })\n\n    const carouselClasses = computed(() => {\n      const classes = ['el-carousel', `el-carousel--${props.direction}`]\n      if (props.type === 'card') {\n        classes.push('el-carousel--card')\n      }\n      return classes\n    })\n\n    const indicatorsClasses = computed(() => {\n      const classes = [\n        'el-carousel__indicators',\n        `el-carousel__indicators--${props.direction}`,\n      ]\n      if (hasLabel.value) {\n        classes.push('el-carousel__indicators--labels')\n      }\n      if (props.indicatorPosition === 'outside' || props.type === 'card') {\n        classes.push('el-carousel__indicators--outside')\n      }\n      return classes\n    })\n\n    // methods\n    const throttledArrowClick = throttle(\n      (index) => {\n        setActiveItem(index)\n      },\n      300,\n      { trailing: true }\n    )\n\n    const throttledIndicatorHover = throttle((index) => {\n      handleIndicatorHover(index)\n    }, 300)\n\n    function pauseTimer() {\n      if (data.timer) {\n        clearInterval(data.timer)\n        data.timer = null\n      }\n    }\n\n    function startTimer() {\n      if (props.interval <= 0 || !props.autoplay || data.timer) return\n      data.timer = setInterval(() => playSlides(), props.interval)\n    }\n\n    const playSlides = () => {\n      if (data.activeIndex < items.value.length - 1) {\n        data.activeIndex = data.activeIndex + 1\n      } else if (props.loop) {\n        data.activeIndex = 0\n      }\n    }\n\n    function setActiveItem(index) {\n      if (typeof index === 'string') {\n        const filteredItems = items.value.filter((item) => item.name === index)\n        if (filteredItems.length > 0) {\n          index = items.value.indexOf(filteredItems[0])\n        }\n      }\n      index = Number(index)\n      if (isNaN(index) || index !== Math.floor(index)) {\n        debugWarn('Carousel', 'index must be an integer.')\n        return\n      }\n      const length = items.value.length\n      const oldIndex = data.activeIndex\n      if (index < 0) {\n        data.activeIndex = props.loop ? length - 1 : 0\n      } else if (index >= length) {\n        data.activeIndex = props.loop ? 0 : length - 1\n      } else {\n        data.activeIndex = index\n      }\n      if (oldIndex === data.activeIndex) {\n        resetItemPosition(oldIndex)\n      }\n    }\n\n    function resetItemPosition(oldIndex) {\n      items.value.forEach((item, index) => {\n        item.translateItem(index, data.activeIndex, oldIndex)\n      })\n    }\n\n    function addItem(item) {\n      items.value.push(item)\n    }\n\n    function removeItem(uid) {\n      const index = items.value.findIndex((item) => item.uid === uid)\n      if (index !== -1) {\n        items.value.splice(index, 1)\n        if (data.activeIndex === index) next()\n      }\n    }\n\n    function itemInStage(item, index) {\n      const length = items.value.length\n      if (\n        (index === length - 1 && item.inStage && items.value[0].active) ||\n        (item.inStage &&\n          items.value[index + 1] &&\n          items.value[index + 1].active)\n      ) {\n        return 'left'\n      } else if (\n        (index === 0 && item.inStage && items.value[length - 1].active) ||\n        (item.inStage &&\n          items.value[index - 1] &&\n          items.value[index - 1].active)\n      ) {\n        return 'right'\n      }\n      return false\n    }\n\n    function handleMouseEnter() {\n      data.hover = true\n      if (props.pauseOnHover) {\n        pauseTimer()\n      }\n    }\n\n    function handleMouseLeave() {\n      data.hover = false\n      startTimer()\n    }\n\n    function handleButtonEnter(arrow) {\n      if (props.direction === 'vertical') return\n      items.value.forEach((item, index) => {\n        if (arrow === itemInStage(item, index)) {\n          item.hover = true\n        }\n      })\n    }\n\n    function handleButtonLeave() {\n      if (props.direction === 'vertical') return\n      items.value.forEach((item) => {\n        item.hover = false\n      })\n    }\n\n    function handleIndicatorClick(index) {\n      data.activeIndex = index\n    }\n\n    function handleIndicatorHover(index) {\n      if (props.trigger === 'hover' && index !== data.activeIndex) {\n        data.activeIndex = index\n      }\n    }\n\n    function prev() {\n      setActiveItem(data.activeIndex - 1)\n    }\n\n    function next() {\n      setActiveItem(data.activeIndex + 1)\n    }\n\n    // watch\n    watch(\n      () => data.activeIndex,\n      (current, prev) => {\n        resetItemPosition(prev)\n        if (prev > -1) {\n          emit('change', current, prev)\n        }\n      }\n    )\n    watch(\n      () => props.autoplay,\n      (current) => {\n        current ? startTimer() : pauseTimer()\n      }\n    )\n    watch(\n      () => props.loop,\n      () => {\n        setActiveItem(data.activeIndex)\n      }\n    )\n\n    // lifecycle\n    onMounted(() => {\n      nextTick(() => {\n        addResizeListener(root.value, resetItemPosition)\n        if (\n          props.initialIndex < items.value.length &&\n          props.initialIndex >= 0\n        ) {\n          data.activeIndex = props.initialIndex\n        }\n        startTimer()\n      })\n    })\n\n    onBeforeUnmount(() => {\n      if (root.value) removeResizeListener(root.value, resetItemPosition)\n      pauseTimer()\n    })\n\n    // provide\n    provide<InjectCarouselScope>('injectCarouselScope', {\n      root,\n      direction: props.direction,\n      type: props.type,\n      items,\n      loop: props.loop,\n      addItem,\n      removeItem,\n      setActiveItem,\n    })\n\n    return {\n      data,\n      props,\n      items,\n\n      arrowDisplay,\n      carouselClasses,\n      indicatorsClasses,\n      hasLabel,\n\n      handleMouseEnter,\n      handleMouseLeave,\n      handleIndicatorClick,\n      throttledArrowClick,\n      throttledIndicatorHover,\n      handleButtonEnter,\n      handleButtonLeave,\n\n      prev,\n      next,\n      setActiveItem,\n\n      root,\n    }\n  },\n})\n</script>\n"],"mappings":";;;EAwDgBA,KAAA,EAAM;AAAA;;;;;;;;sBAvDpBC,kBAAA;IACEC,GAAA,EAAI;IACHF,KAAA,EAAAG,cAAA,CAAOC,IAAA,CAAAC,eAAA;IACPC,YAAA,EAAAC,MAAA,QAAAA,MAAA,MAAAC,aAAA,KAAAC,IAAA,KAAiBL,IAAA,CAAAM,gBAAA,IAAAN,IAAA,CAAAM,gBAAA,IAAAD,IAAA;IACjBE,YAAA,EAAAJ,MAAA,QAAAA,MAAA,MAAAC,aAAA,KAAAC,IAAA,KAAiBL,IAAA,CAAAQ,gBAAA,IAAAR,IAAA,CAAAQ,gBAAA,IAAAH,IAAA;MAElBI,kBAAA;IAAKb,KAAA,EAAM;IAA0Bc,KAAA,EAAAC,cAAA;MAAAC,MAAA,EAAiBZ,IAAA,CAAAY;IAAA;MAClCZ,IAAA,CAAAa,YAAA,IAAAC,SAAA,IAAlBC,WAAA,CAAAC,UAAA;;IAAgCC,IAAA,EAAK;EAAA;qBACnC,O,eAAAR,kBAAA;MAKES,IAAA,EAAK;MACLtB,KAAA,EAAM;MACLM,YAAA,EAAAC,MAAA,QAAAA,MAAA,MAAAgB,MAAA,IAAYnB,IAAA,CAAAoB,iBAAA;MACZb,YAAA,EAAAJ,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAYL,IAAA,CAAAqB,iBAAA,IAAArB,IAAA,CAAAqB,iBAAA,IAAAhB,IAAA;MACZiB,OAAA,EAAAnB,MAAA,QAAAA,MAAA,MAAAC,aAAA,CAAAe,MAAA,IAAYnB,IAAA,CAAAuB,mBAAA,CAAoBvB,IAAA,CAAAwB,IAAA,CAAKC,WAAA;QAEtCC,WAAA,CAAAC,kBAAA;uBACE,OAAAD,WAAA,CAAAE,qBAAA,E;;;;0CAIY5B,IAAA,CAAAa,YAAA,IAAAC,SAAA,IAAlBC,WAAA,CAAAC,UAAA;;IAAgCC,IAAA,EAAK;EAAA;qBACnC,O,eAAAR,kBAAA;MAKES,IAAA,EAAK;MACLtB,KAAA,EAAM;MACLM,YAAA,EAAAC,MAAA,QAAAA,MAAA,MAAAgB,MAAA,IAAYnB,IAAA,CAAAoB,iBAAA;MACZb,YAAA,EAAAJ,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAYL,IAAA,CAAAqB,iBAAA,IAAArB,IAAA,CAAAqB,iBAAA,IAAAhB,IAAA;MACZiB,OAAA,EAAAnB,MAAA,QAAAA,MAAA,MAAAC,aAAA,CAAAe,MAAA,IAAYnB,IAAA,CAAAuB,mBAAA,CAAoBvB,IAAA,CAAAwB,IAAA,CAAKC,WAAA;QAEtCC,WAAA,CAAAC,kBAAA;uBACE,OAAAD,WAAA,CAAAG,sBAAA,E;;;;0CAINC,UAAA,CAAA9B,IAAA,CAAA+B,MAAA,a,MAEQ/B,IAAA,CAAAgC,iBAAA,eAAAlB,SAAA,IAAVjB,kBAAA;;IAAyCD,KAAA,EAAAG,cAAA,CAAOC,IAAA,CAAAiC,iBAAA;wBAC9CpC,kBAAA,CAAAqC,QAAA,QAAAC,UAAA,CAC0BnC,IAAA,CAAAoC,KAAA,GAAhBC,IAAA,EAAMC,KAAA;wBADhBzC,kBAAA;MAEG0C,GAAA,EAAKD,KAAA;MACL1C,KAAA,EAAAG,cAAA,E;;;MAKAG,YAAA,EAAAiB,MAAA,IAAYnB,IAAA,CAAAwC,uBAAA,CAAwBF,KAAA;MACpChB,OAAA,EAAAlB,aAAA,CAAAe,MAAA,IAAYnB,IAAA,CAAAyC,oBAAA,CAAqBH,KAAA;QAElC7B,kBAAA,WAAAiC,UAAA,GACc1C,IAAA,CAAA2C,QAAA,IAAA7B,SAAA,IAAZjB,kBAAA,SAAA+C,UAAA,EAAAC,eAAA,CAAyBR,IAAA,CAAKS,KAAA,SAAAC,kBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}