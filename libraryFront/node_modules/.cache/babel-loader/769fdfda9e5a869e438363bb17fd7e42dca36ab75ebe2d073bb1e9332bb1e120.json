{"ast":null,"code":"import { buildProps, definePropType } from '../../../utils/props.mjs';\nimport '../../../utils/util.mjs';\nimport { isString } from '@vue/shared';\nconst menuItemProps = buildProps({\n  index: {\n    type: definePropType([String, null]),\n    default: null\n  },\n  route: {\n    type: definePropType([String, Object])\n  },\n  disabled: Boolean\n});\nconst menuItemEmits = {\n  click: item => isString(item.index) && Array.isArray(item.indexPath)\n};\nexport { menuItemEmits, menuItemProps };","map":{"version":3,"names":["menuItemProps","buildProps","index","type","definePropType","String","default","route","Object","disabled","Boolean","menuItemEmits","click","item","isString","Array","isArray","indexPath"],"sources":["../../../../../../packages/components/menu/src/menu-item.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils/props'\nimport { isString } from '@element-plus/utils/util'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { RouteLocationRaw } from 'vue-router'\nimport type { MenuItemRegistered } from './types'\n\nexport const menuItemProps = buildProps({\n  index: {\n    type: definePropType<string | null>([String, null]),\n    default: null,\n  },\n  route: {\n    type: definePropType<RouteLocationRaw>([String, Object]),\n  },\n  disabled: Boolean,\n} as const)\nexport type MenuItemProps = ExtractPropTypes<typeof menuItemProps>\n\nexport const menuItemEmits = {\n  click: (item: MenuItemRegistered) =>\n    isString(item.index) && Array.isArray(item.indexPath),\n}\nexport type MenuItemEmits = typeof menuItemEmits\n"],"mappings":";;;MAOaA,aAAA,GAAgBC,UAAA,CAAW;EACtCC,KAAA,EAAO;IACLC,IAAA,EAAMC,cAAA,CAA8B,CAACC,MAAA,EAAQ;IAC7CC,OAAA,EAAS;EAAA;EAEXC,KAAA,EAAO;IACLJ,IAAA,EAAMC,cAAA,CAAiC,CAACC,MAAA,EAAQG,MAAA;EAAA;EAElDC,QAAA,EAAUC;AAAA;MAICC,aAAA,GAAgB;EAC3BC,KAAA,EAAQC,IAAA,IACNC,QAAA,CAASD,IAAA,CAAKX,KAAA,KAAUa,KAAA,CAAMC,OAAA,CAAQH,IAAA,CAAKI,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}