{"ast":null,"code":"import isServer from '../../../utils/isServer.mjs';\nimport { off, on } from '../../../utils/dom.mjs';\nlet isDragging = false;\nfunction draggable(element, options) {\n  if (isServer) return;\n  const moveFn = function (event) {\n    var _a;\n    (_a = options.drag) == null ? void 0 : _a.call(options, event);\n  };\n  const upFn = function (event) {\n    var _a;\n    off(document, \"mousemove\", moveFn);\n    off(document, \"mouseup\", upFn);\n    off(document, \"touchmove\", moveFn);\n    off(document, \"touchend\", upFn);\n    document.onselectstart = null;\n    document.ondragstart = null;\n    isDragging = false;\n    (_a = options.end) == null ? void 0 : _a.call(options, event);\n  };\n  const downFn = function (event) {\n    var _a;\n    if (isDragging) return;\n    event.preventDefault();\n    document.onselectstart = () => false;\n    document.ondragstart = () => false;\n    on(document, \"mousemove\", moveFn);\n    on(document, \"mouseup\", upFn);\n    on(document, \"touchmove\", moveFn);\n    on(document, \"touchend\", upFn);\n    isDragging = true;\n    (_a = options.start) == null ? void 0 : _a.call(options, event);\n  };\n  on(element, \"mousedown\", downFn);\n  on(element, \"touchstart\", downFn);\n}\nexport { draggable as default };","map":{"version":3,"names":["isDragging","element","options","isServer","moveFn","event","_a","drag","call","upFn","off","document","onselectstart","ondragstart","end","downFn","preventDefault","on","start"],"sources":["../../../../../../packages/components/color-picker/src/draggable.ts"],"sourcesContent":["import isServer from '@element-plus/utils/isServer'\nimport { on, off } from '@element-plus/utils/dom'\n\nlet isDragging = false\n\nexport declare interface IOptions {\n  drag?: (event: Event) => void\n  start?: (event: Event) => void\n  end?: (event: Event) => void\n}\n\nexport default function (element: HTMLElement, options: IOptions) {\n  if (isServer) return\n\n  const moveFn = function (event: Event) {\n    options.drag?.(event)\n  }\n\n  const upFn = function (event: Event) {\n    off(document, 'mousemove', moveFn)\n    off(document, 'mouseup', upFn)\n    off(document, 'touchmove', moveFn)\n    off(document, 'touchend', upFn)\n    document.onselectstart = null\n    document.ondragstart = null\n\n    isDragging = false\n\n    options.end?.(event)\n  }\n\n  const downFn = function (event: Event) {\n    if (isDragging) return\n    event.preventDefault()\n    document.onselectstart = () => false\n    document.ondragstart = () => false\n    on(document, 'mousemove', moveFn)\n    on(document, 'mouseup', upFn)\n    on(document, 'touchmove', moveFn)\n    on(document, 'touchend', upFn)\n\n    isDragging = true\n\n    options.start?.(event)\n  }\n\n  on(element, 'mousedown', downFn)\n  on(element, 'touchstart', downFn)\n}\n"],"mappings":";;AAGA,IAAIA,UAAA,GAAa;mBAQQC,OAAA,EAAsBC,OAAA,EAAmB;EAChE,IAAIC,QAAA,EAAU;EAEd,MAAMC,MAAA,GAAS,SAAAA,CAAUC,KAAA,EAAc;IAdzC,IAAAC,EAAA;IAeI,CAAAA,EAAA,GAAAJ,OAAA,CAAQK,IAAA,KAAR,gBAAAD,EAAA,CAAAE,IAAA,CAAAN,OAAA,EAAeG,KAAA;EAAA;EAGjB,MAAMI,IAAA,GAAO,SAAAA,CAAUJ,KAAA,EAAc;IAlBvC,IAAAC,EAAA;IAmBII,GAAA,CAAIC,QAAA,EAAU,aAAaP,MAAA;IAC3BM,GAAA,CAAIC,QAAA,EAAU,WAAWF,IAAA;IACzBC,GAAA,CAAIC,QAAA,EAAU,aAAaP,MAAA;IAC3BM,GAAA,CAAIC,QAAA,EAAU,YAAYF,IAAA;IAC1BE,QAAA,CAASC,aAAA,GAAgB;IACzBD,QAAA,CAASE,WAAA,GAAc;IAEvBb,UAAA,GAAa;IAEb,CAAAM,EAAA,GAAAJ,OAAA,CAAQY,GAAA,KAAR,gBAAAR,EAAA,CAAAE,IAAA,CAAAN,OAAA,EAAcG,KAAA;EAAA;EAGhB,MAAMU,MAAA,GAAS,SAAAA,CAAUV,KAAA,EAAc;IA/BzC,IAAAC,EAAA;IAgCI,IAAIN,UAAA,EAAY;IAChBK,KAAA,CAAMW,cAAA;IACNL,QAAA,CAASC,aAAA,GAAgB,MAAM;IAC/BD,QAAA,CAASE,WAAA,GAAc,MAAM;IAC7BI,EAAA,CAAGN,QAAA,EAAU,aAAaP,MAAA;IAC1Ba,EAAA,CAAGN,QAAA,EAAU,WAAWF,IAAA;IACxBQ,EAAA,CAAGN,QAAA,EAAU,aAAaP,MAAA;IAC1Ba,EAAA,CAAGN,QAAA,EAAU,YAAYF,IAAA;IAEzBT,UAAA,GAAa;IAEb,CAAAM,EAAA,GAAAJ,OAAA,CAAQgB,KAAA,KAAR,gBAAAZ,EAAA,CAAAE,IAAA,CAAAN,OAAA,EAAgBG,KAAA;EAAA;EAGlBY,EAAA,CAAGhB,OAAA,EAAS,aAAac,MAAA;EACzBE,EAAA,CAAGhB,OAAA,EAAS,cAAcc,MAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}