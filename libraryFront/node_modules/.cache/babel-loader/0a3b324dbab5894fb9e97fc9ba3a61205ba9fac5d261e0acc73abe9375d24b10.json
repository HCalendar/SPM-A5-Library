{"ast":null,"code":"import { defineComponent, computed, ref, watch, nextTick, onMounted } from 'vue';\nimport { isPromise } from '@vue/shared';\nimport { isBool } from '../../../utils/util.mjs';\nimport { throwError, debugWarn } from '../../../utils/error.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Loading } from '@element-plus/icons-vue';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT } from '../../../utils/constants.mjs';\nimport '../../../hooks/index.mjs';\nimport { switchProps, switchEmits } from './switch.mjs';\nimport { useFormItem } from '../../../hooks/use-form-item/index.mjs';\nimport { useDisabled } from '../../../hooks/use-common-props/index.mjs';\nconst COMPONENT_NAME = \"ElSwitch\";\nvar script = defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElIcon,\n    Loading\n  },\n  props: switchProps,\n  emits: switchEmits,\n  setup(props, {\n    emit\n  }) {\n    const {\n      formItem\n    } = useFormItem();\n    const switchDisabled = useDisabled(computed(() => props.loading));\n    const isModelValue = ref(props.modelValue !== false);\n    const input = ref();\n    const core = ref();\n    watch(() => props.modelValue, () => {\n      isModelValue.value = true;\n    });\n    watch(() => props.value, () => {\n      isModelValue.value = false;\n    });\n    const actualValue = computed(() => {\n      return isModelValue.value ? props.modelValue : props.value;\n    });\n    const checked = computed(() => actualValue.value === props.activeValue);\n    if (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n      emit(UPDATE_MODEL_EVENT, props.inactiveValue);\n      emit(CHANGE_EVENT, props.inactiveValue);\n      emit(INPUT_EVENT, props.inactiveValue);\n    }\n    watch(checked, () => {\n      var _a;\n      input.value.checked = checked.value;\n      if (props.activeColor || props.inactiveColor) {\n        setBackgroundColor();\n      }\n      if (props.validateEvent) {\n        (_a = formItem == null ? void 0 : formItem.validate) == null ? void 0 : _a.call(formItem, \"change\");\n      }\n    });\n    const handleChange = () => {\n      const val = checked.value ? props.inactiveValue : props.activeValue;\n      emit(UPDATE_MODEL_EVENT, val);\n      emit(CHANGE_EVENT, val);\n      emit(INPUT_EVENT, val);\n      nextTick(() => {\n        input.value.checked = checked.value;\n      });\n    };\n    const switchValue = () => {\n      if (switchDisabled.value) return;\n      const {\n        beforeChange\n      } = props;\n      if (!beforeChange) {\n        handleChange();\n        return;\n      }\n      const shouldChange = beforeChange();\n      const isExpectType = [isPromise(shouldChange), isBool(shouldChange)].some(i => i);\n      if (!isExpectType) {\n        throwError(COMPONENT_NAME, \"beforeChange must return type `Promise<boolean>` or `boolean`\");\n      }\n      if (isPromise(shouldChange)) {\n        shouldChange.then(result => {\n          if (result) {\n            handleChange();\n          }\n        }).catch(e => {\n          debugWarn(COMPONENT_NAME, `some error occurred: ${e}`);\n        });\n      } else if (shouldChange) {\n        handleChange();\n      }\n    };\n    const setBackgroundColor = () => {\n      const newColor = checked.value ? props.activeColor : props.inactiveColor;\n      const coreEl = core.value;\n      if (props.borderColor) coreEl.style.borderColor = props.borderColor;else if (!props.borderColor) coreEl.style.borderColor = newColor;\n      coreEl.style.backgroundColor = newColor;\n      coreEl.children[0].style.color = newColor;\n    };\n    const focus = () => {\n      var _a, _b;\n      (_b = (_a = input.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    };\n    onMounted(() => {\n      if (props.activeColor || props.inactiveColor || props.borderColor) {\n        setBackgroundColor();\n      }\n      input.value.checked = checked.value;\n    });\n    return {\n      input,\n      core,\n      switchDisabled,\n      checked,\n      handleChange,\n      switchValue,\n      focus\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["COMPONENT_NAME","script","defineComponent","name","components","ElIcon","Loading","props","switchProps","emits","switchEmits","setup","emit","formItem","useFormItem","switchDisabled","useDisabled","computed","loading","isModelValue","ref","modelValue","input","core","watch","value","actualValue","checked","activeValue","inactiveValue","includes","UPDATE_MODEL_EVENT","CHANGE_EVENT","INPUT_EVENT","activeColor","inactiveColor","setBackgroundColor","validateEvent","_a","validate","call","handleChange","val","nextTick","switchValue","beforeChange","shouldChange","isExpectType","isPromise","isBool","some","i","throwError","then","result","catch","e","debugWarn","newColor","coreEl","borderColor","style","backgroundColor","children","color","focus","_b","onMounted"],"sources":["../../../../../../packages/components/switch/src/switch.vue"],"sourcesContent":["<template>\n  <div\n    class=\"el-switch\"\n    :class=\"{ 'is-disabled': switchDisabled, 'is-checked': checked }\"\n    role=\"switch\"\n    :aria-checked=\"checked\"\n    :aria-disabled=\"switchDisabled\"\n    @click.prevent=\"switchValue\"\n  >\n    <input\n      :id=\"id\"\n      ref=\"input\"\n      class=\"el-switch__input\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :true-value=\"activeValue\"\n      :false-value=\"inactiveValue\"\n      :disabled=\"switchDisabled\"\n      @change=\"handleChange\"\n      @keydown.enter=\"switchValue\"\n    />\n    <span\n      v-if=\"!inlinePrompt && (inactiveIcon || inactiveText)\"\n      :class=\"[\n        'el-switch__label',\n        'el-switch__label--left',\n        !checked ? 'is-active' : '',\n      ]\"\n    >\n      <el-icon v-if=\"inactiveIcon\"><component :is=\"inactiveIcon\" /></el-icon>\n      <span v-if=\"!inactiveIcon && inactiveText\" :aria-hidden=\"checked\">{{\n        inactiveText\n      }}</span>\n    </span>\n    <span\n      ref=\"core\"\n      class=\"el-switch__core\"\n      :style=\"{ width: (width || 40) + 'px' }\"\n    >\n      <div v-if=\"inlinePrompt\" class=\"el-switch__inner\">\n        <template v-if=\"activeIcon || inactiveIcon\">\n          <el-icon\n            v-if=\"activeIcon\"\n            class=\"is-icon\"\n            :class=\"checked ? 'is-show' : 'is-hide'\"\n          >\n            <component :is=\"activeIcon\" />\n          </el-icon>\n          <el-icon\n            v-if=\"inactiveIcon\"\n            class=\"is-icon\"\n            :class=\"!checked ? 'is-show' : 'is-hide'\"\n          >\n            <component :is=\"inactiveIcon\" />\n          </el-icon>\n        </template>\n        <template v-else-if=\"activeText || inactiveIcon\">\n          <span\n            v-if=\"activeText\"\n            class=\"is-text\"\n            :class=\"checked ? 'is-show' : 'is-hide'\"\n            :aria-hidden=\"!checked\"\n          >\n            {{ activeText.substr(0, 1) }}\n          </span>\n          <span\n            v-if=\"inactiveText\"\n            class=\"is-text\"\n            :class=\"!checked ? 'is-show' : 'is-hide'\"\n            :aria-hidden=\"checked\"\n          >\n            {{ inactiveText.substr(0, 1) }}\n          </span>\n        </template>\n      </div>\n      <div class=\"el-switch__action\">\n        <el-icon v-if=\"loading\" class=\"is-loading\"><loading /></el-icon>\n      </div>\n    </span>\n    <span\n      v-if=\"!inlinePrompt && (activeIcon || activeText)\"\n      :class=\"[\n        'el-switch__label',\n        'el-switch__label--right',\n        checked ? 'is-active' : '',\n      ]\"\n    >\n      <el-icon v-if=\"activeIcon\"><component :is=\"activeIcon\" /></el-icon>\n      <span v-if=\"!activeIcon && activeText\" :aria-hidden=\"!checked\">{{\n        activeText\n      }}</span>\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, ref, nextTick, watch } from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { isBool } from '@element-plus/utils/util'\nimport { throwError, debugWarn } from '@element-plus/utils/error'\nimport ElIcon from '@element-plus/components/icon'\nimport { Loading } from '@element-plus/icons-vue'\nimport {\n  UPDATE_MODEL_EVENT,\n  CHANGE_EVENT,\n  INPUT_EVENT,\n} from '@element-plus/utils/constants'\nimport { useDisabled, useFormItem } from '@element-plus/hooks'\nimport { switchProps, switchEmits } from './switch'\n\nconst COMPONENT_NAME = 'ElSwitch'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  components: { ElIcon, Loading },\n\n  props: switchProps,\n  emits: switchEmits,\n\n  setup(props, { emit }) {\n    const { formItem } = useFormItem()\n    const switchDisabled = useDisabled(computed(() => props.loading))\n\n    const isModelValue = ref(props.modelValue !== false)\n    const input = ref<HTMLInputElement>()\n    const core = ref<HTMLSpanElement>()\n\n    watch(\n      () => props.modelValue,\n      () => {\n        isModelValue.value = true\n      }\n    )\n\n    watch(\n      () => props.value,\n      () => {\n        isModelValue.value = false\n      }\n    )\n\n    const actualValue = computed(() => {\n      return isModelValue.value ? props.modelValue : props.value\n    })\n\n    const checked = computed(() => actualValue.value === props.activeValue)\n\n    if (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n      emit(UPDATE_MODEL_EVENT, props.inactiveValue)\n      emit(CHANGE_EVENT, props.inactiveValue)\n      emit(INPUT_EVENT, props.inactiveValue)\n    }\n\n    watch(checked, () => {\n      input.value!.checked = checked.value\n\n      if (props.activeColor || props.inactiveColor) {\n        setBackgroundColor()\n      }\n\n      if (props.validateEvent) {\n        formItem?.validate?.('change')\n      }\n    })\n\n    const handleChange = (): void => {\n      const val = checked.value ? props.inactiveValue : props.activeValue\n      emit(UPDATE_MODEL_EVENT, val)\n      emit(CHANGE_EVENT, val)\n      emit(INPUT_EVENT, val)\n      nextTick(() => {\n        input.value!.checked = checked.value\n      })\n    }\n\n    const switchValue = (): void => {\n      if (switchDisabled.value) return\n\n      const { beforeChange } = props\n      if (!beforeChange) {\n        handleChange()\n        return\n      }\n\n      const shouldChange = beforeChange()\n\n      const isExpectType = [isPromise(shouldChange), isBool(shouldChange)].some(\n        (i) => i\n      )\n      if (!isExpectType) {\n        throwError(\n          COMPONENT_NAME,\n          'beforeChange must return type `Promise<boolean>` or `boolean`'\n        )\n      }\n\n      if (isPromise(shouldChange)) {\n        shouldChange\n          .then((result) => {\n            if (result) {\n              handleChange()\n            }\n          })\n          .catch((e) => {\n            debugWarn(COMPONENT_NAME, `some error occurred: ${e}`)\n          })\n      } else if (shouldChange) {\n        handleChange()\n      }\n    }\n\n    const setBackgroundColor = (): void => {\n      const newColor = checked.value ? props.activeColor : props.inactiveColor\n      const coreEl = core.value\n      if (props.borderColor) coreEl!.style.borderColor = props.borderColor\n      else if (!props.borderColor) coreEl!.style.borderColor = newColor\n      coreEl!.style.backgroundColor = newColor\n      ;(coreEl!.children[0] as HTMLDivElement).style.color = newColor\n    }\n\n    const focus = (): void => {\n      input.value?.focus?.()\n    }\n\n    onMounted(() => {\n      if (props.activeColor || props.inactiveColor || props.borderColor) {\n        setBackgroundColor()\n      }\n\n      input.value!.checked = checked.value\n    })\n\n    return {\n      input,\n      core,\n      switchDisabled,\n      checked,\n      handleChange,\n      switchValue,\n      focus,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}