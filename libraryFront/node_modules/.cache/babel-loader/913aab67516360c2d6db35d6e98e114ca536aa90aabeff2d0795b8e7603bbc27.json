{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport request from \"../utils/request\";\nimport { ElMessage } from \"element-plus\";\nexport default {\n  name: \"LPassword\",\n  data() {\n    const validatePass2 = (rule, value, callback) => {\n      if (value == '') {\n        callback(new Error('Please enter original password'));\n      } else {\n        if (this.form.password2 !== this.form.truepassword) {\n          callback(new Error('Wrong Original Password'));\n        }\n        callback();\n      }\n    };\n    const validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please enter new password'));\n      } else {\n        // if (this.form2.password !== '') {\n        //   this.$refs.form.validateField('newPass')\n        // }\n        callback();\n      }\n    };\n    const validatePass3 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('Please enter agian'));\n      } else if (value !== this.form2.password) {\n        callback(new Error(\"The passwords entered twice are inconsistent\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      form: {\n        password2: '',\n        checkpassword: '',\n        truepassword: ''\n      },\n      form2: {\n        password: '',\n        id: 0\n      },\n      rules: {\n        password: [{\n          validator: validatePass,\n          trigger: 'blur',\n          required: true\n        }],\n        checkpassword: [{\n          validator: validatePass3,\n          trigger: 'blur',\n          required: true\n        }],\n        password2: [{\n          validator: validatePass2,\n          trigger: 'blur',\n          required: true\n        }]\n      }\n    };\n  },\n  created() {\n    let user = JSON.parse(sessionStorage.getItem(\"user\"));\n    this.form.truepassword = user.password;\n    this.form2.id = user.id;\n  },\n  methods: {\n    submitForm() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          request.put(\"http://localhost:8181/user\", this.form2).then(res => {\n            if (res.code == 0) {\n              ElMessage.success(\"Password modified successfully.Please login again.\");\n              sessionStorage.removeItem(\"user\"); //清空缓存的用户信息\n              this.$router.push(\"/login\"); //跳转登录界面\n            } else {\n              ElMessage.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["request","ElMessage","name","data","validatePass2","rule","value","callback","Error","form","password2","truepassword","validatePass","validatePass3","form2","password","checkpassword","id","rules","validator","trigger","required","created","user","JSON","parse","sessionStorage","getItem","methods","submitForm","$refs","validate","valid","put","then","res","code","success","removeItem","$router","push","error","msg","resetForm","formName","resetFields"],"sources":["G:\\SPM-A5-Library\\libraryFront\\src\\views\\Password.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card style=\"width: 40%; margin-left: 120px; margin-top: 40px\" >\r\n      <el-form\r\n          ref=\"form\"\r\n          :model=\"form\"\r\n          status-icon\r\n          :rules=\"rules\"\r\n          label-width=\"100px\"\r\n          class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item label=\"Original Password\" prop=\"password2\">\r\n          <el-input\r\n              v-model=\"form.password2\"\r\n              type=\"password\"\r\n              autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"New Password\" prop=\"password\">\r\n          <el-input\r\n              v-model=\"form2.password\"\r\n              type=\"password\"\r\n              autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Enter again\" prop=\"checkpassword\">\r\n          <el-input\r\n              v-model=\"form.checkpassword\"\r\n              type=\"password\"\r\n              autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" style=\"text-align: center\">Submit</el-button>\r\n          <el-button @click=\"resetForm('form')\" style=\"text-align: center\">Reset</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"../utils/request\";\r\nimport {ElMessage} from \"element-plus\";\r\n\r\nexport default {\r\n  name: \"LPassword\",\r\n  data() {\r\n    const validatePass2 = (rule, value, callback) => {\r\n      if (value == '') {\r\n        callback(new Error('Please enter original password'))\r\n      } else {\r\n        if (this.form.password2 !== this.form.truepassword) {\r\n          callback(new Error('Wrong Original Password'))\r\n        }\r\n        callback()\r\n      }\r\n    }\r\n    const validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('Please enter new password'))\r\n      } else {\r\n        // if (this.form2.password !== '') {\r\n        //   this.$refs.form.validateField('newPass')\r\n        // }\r\n        callback()\r\n      }\r\n    }\r\n    const validatePass3 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('Please enter agian'))\r\n      } else if (value !== this.form2.password) {\r\n        callback(new Error(\"The passwords entered twice are inconsistent\"))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      form: {\r\n        password2: '',\r\n        checkpassword: '',\r\n        truepassword:'',\r\n      },\r\n      form2:{\r\n        password:'',\r\n        id:0\r\n      },\r\n      rules: {\r\n        password: [{ validator: validatePass, trigger: 'blur' ,required: true}],\r\n        checkpassword: [{ validator: validatePass3, trigger: 'blur',required: true,}],\r\n        password2: [{ validator: validatePass2, trigger: 'blur',required: true,}],\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    let user = JSON.parse(sessionStorage.getItem(\"user\"))\r\n    this.form.truepassword = user.password\r\n    this.form2.id = user.id\r\n\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      this.$refs['form'].validate((valid) => {\r\n        if (valid) {\r\n\r\n          request.put(\"http://localhost:8181/user\", this.form2).then(res => {\r\n            if (res.code == 0) {\r\n              ElMessage.success(\"Password modified successfully.Please login again.\")\r\n              sessionStorage.removeItem(\"user\")//清空缓存的用户信息\r\n              this.$router.push(\"/login\")//跳转登录界面\r\n            } else {\r\n              ElMessage.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields()\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}