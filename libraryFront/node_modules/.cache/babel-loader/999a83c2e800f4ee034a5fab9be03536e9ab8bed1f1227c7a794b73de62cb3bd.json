{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { isArray } from '@vue/shared';\nconst flattenOptions = options => {\n  const flattened = [];\n  options.map(option => {\n    if (isArray(option.options)) {\n      flattened.push({\n        label: option.label,\n        isTitle: true,\n        type: \"Group\"\n      });\n      option.options.forEach(o => {\n        flattened.push(o);\n      });\n      flattened.push({\n        type: \"Group\"\n      });\n    } else {\n      flattened.push(option);\n    }\n  });\n  return flattened;\n};\nexport { flattenOptions };","map":{"version":3,"names":["flattenOptions","options","flattened","map","option","isArray","push","label","isTitle","type","forEach","o"],"sources":["../../../../../../packages/components/select-v2/src/util.ts"],"sourcesContent":["import { isArray } from '@vue/shared'\n\nimport type { Option, OptionGroup } from './select.types'\n\nexport const flattenOptions = (options: Array<Option | OptionGroup>) => {\n  const flattened = []\n  options.map((option) => {\n    if (isArray(option.options)) {\n      flattened.push({\n        label: option.label,\n        isTitle: true,\n        type: 'Group',\n      })\n\n      option.options.forEach((o: Option) => {\n        flattened.push(o)\n      })\n      flattened.push({\n        type: 'Group',\n      })\n    } else {\n      flattened.push(option)\n    }\n  })\n\n  return flattened\n}\n"],"mappings":";;MAIaA,cAAA,GAAkBC,OAAA,IAAyC;EACtE,MAAMC,SAAA,GAAY;EAClBD,OAAA,CAAQE,GAAA,CAAKC,MAAA,IAAW;IACtB,IAAIC,OAAA,CAAQD,MAAA,CAAOH,OAAA,GAAU;MAC3BC,SAAA,CAAUI,IAAA,CAAK;QACbC,KAAA,EAAOH,MAAA,CAAOG,KAAA;QACdC,OAAA,EAAS;QACTC,IAAA,EAAM;MAAA;MAGRL,MAAA,CAAOH,OAAA,CAAQS,OAAA,CAASC,CAAA,IAAc;QACpCT,SAAA,CAAUI,IAAA,CAAKK,CAAA;MAAA;MAEjBT,SAAA,CAAUI,IAAA,CAAK;QACbG,IAAA,EAAM;MAAA;IAAA,OAEH;MACLP,SAAA,CAAUI,IAAA,CAAKF,MAAA;IAAA;EAAA;EAInB,OAAOF,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}