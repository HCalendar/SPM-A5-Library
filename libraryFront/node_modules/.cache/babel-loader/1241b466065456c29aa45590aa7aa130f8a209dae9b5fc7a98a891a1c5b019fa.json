{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, h } from 'vue';\nimport { hColgroup, hGutter } from '../h-helper.mjs';\nimport useStyle from './style-helper.mjs';\nvar TableFooter = defineComponent({\n  name: \"ElTableFooter\",\n  props: {\n    fixed: {\n      type: String,\n      default: \"\"\n    },\n    store: {\n      required: true,\n      type: Object\n    },\n    summaryMethod: Function,\n    sumText: String,\n    border: Boolean,\n    defaultSort: {\n      type: Object,\n      default: () => {\n        return {\n          prop: \"\",\n          order: \"\"\n        };\n      }\n    }\n  },\n  setup(props) {\n    const {\n      hasGutter,\n      getRowClasses,\n      columns\n    } = useStyle(props);\n    return {\n      getRowClasses,\n      hasGutter,\n      columns\n    };\n  },\n  render() {\n    let sums = [];\n    if (this.summaryMethod) {\n      sums = this.summaryMethod({\n        columns: this.columns,\n        data: this.store.states.data.value\n      });\n    } else {\n      this.columns.forEach((column, index) => {\n        if (index === 0) {\n          sums[index] = this.sumText;\n          return;\n        }\n        const values = this.store.states.data.value.map(item => Number(item[column.property]));\n        const precisions = [];\n        let notNumber = true;\n        values.forEach(value => {\n          if (!isNaN(value)) {\n            notNumber = false;\n            const decimal = `${value}`.split(\".\")[1];\n            precisions.push(decimal ? decimal.length : 0);\n          }\n        });\n        const precision = Math.max.apply(null, precisions);\n        if (!notNumber) {\n          sums[index] = values.reduce((prev, curr) => {\n            const value = Number(curr);\n            if (!isNaN(value)) {\n              return parseFloat((prev + curr).toFixed(Math.min(precision, 20)));\n            } else {\n              return prev;\n            }\n          }, 0);\n        } else {\n          sums[index] = \"\";\n        }\n      });\n    }\n    return h(\"table\", {\n      class: \"el-table__footer\",\n      cellspacing: \"0\",\n      cellpadding: \"0\",\n      border: \"0\"\n    }, [hColgroup(this.columns, this.hasGutter), h(\"tbody\", {\n      class: [{\n        \"has-gutter\": this.hasGutter\n      }]\n    }, [h(\"tr\", {}, [...this.columns.map((column, cellIndex) => h(\"td\", {\n      key: cellIndex,\n      colspan: column.colSpan,\n      rowspan: column.rowSpan,\n      class: [...this.getRowClasses(column, cellIndex), \"el-table__cell\"]\n    }, [h(\"div\", {\n      class: [\"cell\", column.labelClassName]\n    }, [sums[cellIndex]])])), this.hasGutter && hGutter()])])]);\n  }\n});\nexport { TableFooter as default };","map":{"version":3,"names":["TableFooter","defineComponent","name","props","fixed","type","String","default","store","required","Object","summaryMethod","Function","sumText","border","Boolean","defaultSort","prop","order","setup","hasGutter","getRowClasses","columns","useStyle","render","sums","data","states","value","forEach","column","index","values","map","item","Number","property","precisions","notNumber","isNaN","decimal","split","push","length","precision","Math","max","apply","reduce","prev","curr","parseFloat","toFixed","min","h","class","cellspacing","cellpadding","hColgroup","cellIndex","key","colspan","colSpan","rowspan","rowSpan","labelClassName","hGutter"],"sources":["../../../../../../../packages/components/table/src/table-footer/index.ts"],"sourcesContent":["import { defineComponent, h } from 'vue'\nimport { hGutter, hColgroup } from '../h-helper'\nimport useStyle from './style-helper'\nimport type { Store } from '../store'\n\nimport type { PropType } from 'vue'\nimport type { DefaultRow, Sort, SummaryMethod } from '../table/defaults'\nexport interface TableFooter<T> {\n  fixed: string\n  store: Store<T>\n  summaryMethod: SummaryMethod<T>\n  sumText: string\n  border: boolean\n  defaultSort: Sort\n}\n\nexport default defineComponent({\n  name: 'ElTableFooter',\n\n  props: {\n    fixed: {\n      type: String,\n      default: '',\n    },\n    store: {\n      required: true,\n      type: Object as PropType<TableFooter<DefaultRow>['store']>,\n    },\n    summaryMethod: Function as PropType<\n      TableFooter<DefaultRow>['summaryMethod']\n    >,\n    sumText: String,\n    border: Boolean,\n    defaultSort: {\n      type: Object as PropType<TableFooter<DefaultRow>['defaultSort']>,\n      default: () => {\n        return {\n          prop: '',\n          order: '',\n        }\n      },\n    },\n  },\n  setup(props) {\n    const { hasGutter, getRowClasses, columns } = useStyle(\n      props as TableFooter<DefaultRow>\n    )\n    return {\n      getRowClasses,\n      hasGutter,\n      columns,\n    }\n  },\n  render() {\n    let sums = []\n    if (this.summaryMethod) {\n      sums = this.summaryMethod({\n        columns: this.columns,\n        data: this.store.states.data.value,\n      })\n    } else {\n      this.columns.forEach((column, index) => {\n        if (index === 0) {\n          sums[index] = this.sumText\n          return\n        }\n        const values = this.store.states.data.value.map((item) =>\n          Number(item[column.property])\n        )\n        const precisions = []\n        let notNumber = true\n        values.forEach((value) => {\n          if (!isNaN(value)) {\n            notNumber = false\n            const decimal = `${value}`.split('.')[1]\n            precisions.push(decimal ? decimal.length : 0)\n          }\n        })\n        const precision = Math.max.apply(null, precisions)\n        if (!notNumber) {\n          sums[index] = values.reduce((prev, curr) => {\n            const value = Number(curr)\n            if (!isNaN(value)) {\n              return parseFloat((prev + curr).toFixed(Math.min(precision, 20)))\n            } else {\n              return prev\n            }\n          }, 0)\n        } else {\n          sums[index] = ''\n        }\n      })\n    }\n    return h(\n      'table',\n      {\n        class: 'el-table__footer',\n        cellspacing: '0',\n        cellpadding: '0',\n        border: '0',\n      },\n      [\n        hColgroup(this.columns, this.hasGutter),\n        h(\n          'tbody',\n          {\n            class: [{ 'has-gutter': this.hasGutter }],\n          },\n          [\n            h('tr', {}, [\n              ...this.columns.map((column, cellIndex) =>\n                h(\n                  'td',\n                  {\n                    key: cellIndex,\n                    colspan: column.colSpan,\n                    rowspan: column.rowSpan,\n                    class: [\n                      ...this.getRowClasses(column, cellIndex),\n                      'el-table__cell',\n                    ],\n                  },\n                  [\n                    h(\n                      'div',\n                      {\n                        class: ['cell', column.labelClassName],\n                      },\n                      [sums[cellIndex]]\n                    ),\n                  ]\n                )\n              ),\n              this.hasGutter && hGutter(),\n            ]),\n          ]\n        ),\n      ]\n    )\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}