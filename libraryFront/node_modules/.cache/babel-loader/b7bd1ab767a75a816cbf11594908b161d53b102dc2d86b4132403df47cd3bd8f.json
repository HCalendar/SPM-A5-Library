{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, createElementVNode, normalizeStyle, renderSlot, createVNode, toDisplayString, createCommentVNode } from 'vue';\nconst _hoisted_1 = {\n  class: \"el-empty\"\n};\nconst _hoisted_2 = [\"src\"];\nconst _hoisted_3 = {\n  class: \"el-empty__description\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"el-empty__bottom\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_img_empty = resolveComponent(\"img-empty\");\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [createElementVNode(\"div\", {\n    class: \"el-empty__image\",\n    style: normalizeStyle(_ctx.imageStyle)\n  }, [_ctx.image ? (openBlock(), createElementBlock(\"img\", {\n    key: 0,\n    src: _ctx.image,\n    ondragstart: \"return false\"\n  }, null, 8, _hoisted_2)) : renderSlot(_ctx.$slots, \"image\", {\n    key: 1\n  }, () => [createVNode(_component_img_empty)])], 4), createElementVNode(\"div\", _hoisted_3, [_ctx.$slots.description ? renderSlot(_ctx.$slots, \"description\", {\n    key: 0\n  }) : (openBlock(), createElementBlock(\"p\", _hoisted_4, toDisplayString(_ctx.emptyDescription), 1))]), _ctx.$slots.default ? (openBlock(), createElementBlock(\"div\", _hoisted_5, [renderSlot(_ctx.$slots, \"default\")])) : createCommentVNode(\"v-if\", true)]);\n}\nexport { render };","map":{"version":3,"names":["class","createElementBlock","_hoisted_1","createElementVNode","style","normalizeStyle","_ctx","imageStyle","image","openBlock","src","ondragstart","_hoisted_2","renderSlot","$slots","key","createVNode","_component_img_empty","_hoisted_3","description","_hoisted_4","toDisplayString","emptyDescription","default","_hoisted_5"],"sources":["../../../../../../packages/components/empty/src/empty.vue?vue&type=template&id=10d211eb&lang.js"],"sourcesContent":["<template>\n  <div class=\"el-empty\">\n    <div class=\"el-empty__image\" :style=\"imageStyle\">\n      <img v-if=\"image\" :src=\"image\" ondragstart=\"return false\" />\n      <slot v-else name=\"image\">\n        <img-empty />\n      </slot>\n    </div>\n    <div class=\"el-empty__description\">\n      <slot v-if=\"$slots.description\" name=\"description\"></slot>\n      <p v-else>{{ emptyDescription }}</p>\n    </div>\n    <div v-if=\"$slots.default\" class=\"el-empty__bottom\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport { useLocale } from '@element-plus/hooks'\nimport ImgEmpty from './img-empty.vue'\nimport { emptyProps } from './empty'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElEmpty',\n  components: {\n    ImgEmpty,\n  },\n\n  props: emptyProps,\n\n  setup(props) {\n    const { t } = useLocale()\n    const emptyDescription = computed(\n      () => props.description || t('el.table.emptyText')\n    )\n    const imageStyle = computed<CSSProperties>(() => ({\n      width: props.imageSize ? `${props.imageSize}px` : '',\n    }))\n\n    return {\n      emptyDescription,\n      imageStyle,\n    }\n  },\n})\n</script>\n"],"mappings":";;EACOA,KAAA,EAAM;AAAA;;;EAOJA,KAAA,EAAM;AAAA;;;;;;EAIgBA,KAAA,EAAM;AAAA;;;sBAXnCC,kBAAA,QAAAC,UAAA,GACEC,kBAAA;IAAKH,KAAA,EAAM;IAAmBI,KAAA,EAAAC,cAAA,CAAOC,IAAA,CAAAC,UAAA;MACxBD,IAAA,CAAAE,KAAA,IAAAC,SAAA,IAAXR,kBAAA;;IAAmBS,GAAA,EAAKJ,IAAA,CAAAE,KAAA;IAAOG,WAAA,EAAY;EAAA,YAAAC,UAAA,KAC3CC,UAAA,CAAAP,IAAA,CAAAQ,MAAA;IAAAC,GAAA;EAAA,UACEC,WAAA,CAAAC,oBAAA,E,QAGJd,kBAAA,QAAAe,UAAA,GACcZ,IAAA,CAAAQ,MAAA,CAAOK,WAAA,GAAnBN,UAAA,CAAAP,IAAA,CAAAQ,MAAA;IAAAC,GAAA;EAAA,MAAAN,SAAA,IACAR,kBAAA,MAAAmB,UAAA,EAAAC,eAAA,CAAaf,IAAA,CAAAgB,gBAAA,O,GAEJhB,IAAA,CAAAQ,MAAA,CAAOS,OAAA,IAAAd,SAAA,IAAlBR,kBAAA,QAAAuB,UAAA,GACEX,UAAA,CAAAP,IAAA,CAAAQ,MAAA,a","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}