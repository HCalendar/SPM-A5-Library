{"ast":null,"code":"import { defineComponent, inject, ref, computed, onBeforeUnmount, toRef } from 'vue';\nimport { useEventListener } from '@vueuse/core';\nimport '../../../tokens/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { BAR_MAP, renderThumbStyle } from './util.mjs';\nimport { barProps } from './bar.mjs';\nimport { scrollbarContextKey } from '../../../tokens/scrollbar.mjs';\nconst COMPONENT_NAME = \"Bar\";\nvar script = defineComponent({\n  name: COMPONENT_NAME,\n  props: barProps,\n  setup(props) {\n    const scrollbar = inject(scrollbarContextKey);\n    if (!scrollbar) throwError(COMPONENT_NAME, \"can not inject scrollbar context\");\n    const instance = ref();\n    const thumb = ref();\n    const barStore = ref({});\n    const visible = ref(false);\n    let cursorDown = false;\n    let cursorLeave = false;\n    let onselectstartStore = null;\n    const bar = computed(() => BAR_MAP[props.vertical ? \"vertical\" : \"horizontal\"]);\n    const thumbStyle = computed(() => renderThumbStyle({\n      size: props.size,\n      move: props.move,\n      bar: bar.value\n    }));\n    const offsetRatio = computed(() => instance.value[bar.value.offset] ** 2 / scrollbar.wrapElement[bar.value.scrollSize] / props.ratio / thumb.value[bar.value.offset]);\n    const clickThumbHandler = e => {\n      var _a;\n      e.stopPropagation();\n      if (e.ctrlKey || [1, 2].includes(e.button)) return;\n      (_a = window.getSelection()) == null ? void 0 : _a.removeAllRanges();\n      startDrag(e);\n      const el = e.currentTarget;\n      if (!el) return;\n      barStore.value[bar.value.axis] = el[bar.value.offset] - (e[bar.value.client] - el.getBoundingClientRect()[bar.value.direction]);\n    };\n    const clickTrackHandler = e => {\n      if (!thumb.value || !instance.value || !scrollbar.wrapElement) return;\n      const offset = Math.abs(e.target.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]);\n      const thumbHalf = thumb.value[bar.value.offset] / 2;\n      const thumbPositionPercentage = (offset - thumbHalf) * 100 * offsetRatio.value / instance.value[bar.value.offset];\n      scrollbar.wrapElement[bar.value.scroll] = thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize] / 100;\n    };\n    const startDrag = e => {\n      e.stopImmediatePropagation();\n      cursorDown = true;\n      document.addEventListener(\"mousemove\", mouseMoveDocumentHandler);\n      document.addEventListener(\"mouseup\", mouseUpDocumentHandler);\n      onselectstartStore = document.onselectstart;\n      document.onselectstart = () => false;\n    };\n    const mouseMoveDocumentHandler = e => {\n      if (!instance.value || !thumb.value) return;\n      if (cursorDown === false) return;\n      const prevPage = barStore.value[bar.value.axis];\n      if (!prevPage) return;\n      const offset = (instance.value.getBoundingClientRect()[bar.value.direction] - e[bar.value.client]) * -1;\n      const thumbClickPosition = thumb.value[bar.value.offset] - prevPage;\n      const thumbPositionPercentage = (offset - thumbClickPosition) * 100 * offsetRatio.value / instance.value[bar.value.offset];\n      scrollbar.wrapElement[bar.value.scroll] = thumbPositionPercentage * scrollbar.wrapElement[bar.value.scrollSize] / 100;\n    };\n    const mouseUpDocumentHandler = () => {\n      cursorDown = false;\n      barStore.value[bar.value.axis] = 0;\n      document.removeEventListener(\"mousemove\", mouseMoveDocumentHandler);\n      document.removeEventListener(\"mouseup\", mouseUpDocumentHandler);\n      document.onselectstart = onselectstartStore;\n      if (cursorLeave) visible.value = false;\n    };\n    const mouseMoveScrollbarHandler = () => {\n      cursorLeave = false;\n      visible.value = !!props.size;\n    };\n    const mouseLeaveScrollbarHandler = () => {\n      cursorLeave = true;\n      visible.value = cursorDown;\n    };\n    onBeforeUnmount(() => document.removeEventListener(\"mouseup\", mouseUpDocumentHandler));\n    useEventListener(toRef(scrollbar, \"scrollbarElement\"), \"mousemove\", mouseMoveScrollbarHandler);\n    useEventListener(toRef(scrollbar, \"scrollbarElement\"), \"mouseleave\", mouseLeaveScrollbarHandler);\n    return {\n      instance,\n      thumb,\n      bar,\n      thumbStyle,\n      visible,\n      clickTrackHandler,\n      clickThumbHandler\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["COMPONENT_NAME","script","defineComponent","name","props","barProps","setup","scrollbar","inject","scrollbarContextKey","throwError","instance","ref","thumb","barStore","visible","cursorDown","cursorLeave","onselectstartStore","bar","computed","BAR_MAP","vertical","thumbStyle","renderThumbStyle","size","move","value","offsetRatio","offset","wrapElement","scrollSize","ratio","clickThumbHandler","e","stopPropagation","ctrlKey","includes","button","_a","window","getSelection","removeAllRanges","startDrag","el","currentTarget","axis","client","getBoundingClientRect","direction","clickTrackHandler","Math","abs","target","thumbHalf","thumbPositionPercentage","scroll","stopImmediatePropagation","document","addEventListener","mouseMoveDocumentHandler","mouseUpDocumentHandler","onselectstart","prevPage","thumbClickPosition","removeEventListener","mouseMoveScrollbarHandler","mouseLeaveScrollbarHandler","onBeforeUnmount","useEventListener","toRef"],"sources":["../../../../../../packages/components/scrollbar/src/bar.vue"],"sourcesContent":["<template>\n  <transition name=\"el-scrollbar-fade\">\n    <div\n      v-show=\"always || visible\"\n      ref=\"instance\"\n      :class=\"['el-scrollbar__bar', 'is-' + bar.key]\"\n      @mousedown=\"clickTrackHandler\"\n    >\n      <div\n        ref=\"thumb\"\n        class=\"el-scrollbar__thumb\"\n        :style=\"thumbStyle\"\n        @mousedown=\"clickThumbHandler\"\n      ></div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  onBeforeUnmount,\n  ref,\n  toRef,\n} from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport { scrollbarContextKey } from '@element-plus/tokens'\nimport { throwError } from '@element-plus/utils/error'\nimport { BAR_MAP, renderThumbStyle } from './util'\n\nimport { barProps } from './bar'\n\nconst COMPONENT_NAME = 'Bar'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  props: barProps,\n\n  setup(props) {\n    const scrollbar = inject(scrollbarContextKey)\n    if (!scrollbar)\n      throwError(COMPONENT_NAME, 'can not inject scrollbar context')\n\n    const instance = ref<HTMLDivElement>()\n    const thumb = ref<HTMLDivElement>()\n\n    const barStore = ref({})\n    const visible = ref(false)\n\n    let cursorDown = false\n    let cursorLeave = false\n    let onselectstartStore:\n      | ((this: GlobalEventHandlers, ev: Event) => any)\n      | null = null\n\n    const bar = computed(\n      () => BAR_MAP[props.vertical ? 'vertical' : 'horizontal']\n    )\n\n    const thumbStyle = computed(() =>\n      renderThumbStyle({\n        size: props.size,\n        move: props.move,\n        bar: bar.value,\n      })\n    )\n\n    const offsetRatio = computed(\n      () =>\n        // offsetRatioX = original width of thumb / current width of thumb / ratioX\n        // offsetRatioY = original height of thumb / current height of thumb / ratioY\n        // instance height = wrap height - GAP\n        instance.value![bar.value.offset] ** 2 /\n        scrollbar.wrapElement![bar.value.scrollSize] /\n        props.ratio /\n        thumb.value![bar.value.offset]\n    )\n\n    const clickThumbHandler = (e: MouseEvent) => {\n      // prevent click event of middle and right button\n      e.stopPropagation()\n      if (e.ctrlKey || [1, 2].includes(e.button)) return\n\n      window.getSelection()?.removeAllRanges()\n      startDrag(e)\n\n      const el = e.currentTarget as HTMLDivElement\n      if (!el) return\n      barStore.value[bar.value.axis] =\n        el[bar.value.offset] -\n        (e[bar.value.client] - el.getBoundingClientRect()[bar.value.direction])\n    }\n\n    const clickTrackHandler = (e: MouseEvent) => {\n      if (!thumb.value || !instance.value || !scrollbar.wrapElement) return\n\n      const offset = Math.abs(\n        (e.target as HTMLElement).getBoundingClientRect()[bar.value.direction] -\n          e[bar.value.client]\n      )\n      const thumbHalf = thumb.value[bar.value.offset] / 2\n      const thumbPositionPercentage =\n        ((offset - thumbHalf) * 100 * offsetRatio.value) /\n        instance.value[bar.value.offset]\n\n      scrollbar.wrapElement[bar.value.scroll] =\n        (thumbPositionPercentage *\n          scrollbar.wrapElement[bar.value.scrollSize]) /\n        100\n    }\n\n    const startDrag = (e: MouseEvent) => {\n      e.stopImmediatePropagation()\n      cursorDown = true\n      document.addEventListener('mousemove', mouseMoveDocumentHandler)\n      document.addEventListener('mouseup', mouseUpDocumentHandler)\n      onselectstartStore = document.onselectstart\n      document.onselectstart = () => false\n    }\n\n    const mouseMoveDocumentHandler = (e: MouseEvent) => {\n      if (!instance.value || !thumb.value) return\n      if (cursorDown === false) return\n\n      const prevPage = barStore.value[bar.value.axis]\n      if (!prevPage) return\n\n      const offset =\n        (instance.value.getBoundingClientRect()[bar.value.direction] -\n          e[bar.value.client]) *\n        -1\n      const thumbClickPosition = thumb.value[bar.value.offset] - prevPage\n      const thumbPositionPercentage =\n        ((offset - thumbClickPosition) * 100 * offsetRatio.value) /\n        instance.value[bar.value.offset]\n      scrollbar.wrapElement[bar.value.scroll] =\n        (thumbPositionPercentage *\n          scrollbar.wrapElement[bar.value.scrollSize]) /\n        100\n    }\n\n    const mouseUpDocumentHandler = () => {\n      cursorDown = false\n      barStore.value[bar.value.axis] = 0\n      document.removeEventListener('mousemove', mouseMoveDocumentHandler)\n      document.removeEventListener('mouseup', mouseUpDocumentHandler)\n      document.onselectstart = onselectstartStore\n      if (cursorLeave) visible.value = false\n    }\n\n    const mouseMoveScrollbarHandler = () => {\n      cursorLeave = false\n      visible.value = !!props.size\n    }\n\n    const mouseLeaveScrollbarHandler = () => {\n      cursorLeave = true\n      visible.value = cursorDown\n    }\n\n    onBeforeUnmount(() =>\n      document.removeEventListener('mouseup', mouseUpDocumentHandler)\n    )\n\n    useEventListener(\n      toRef(scrollbar, 'scrollbarElement'),\n      'mousemove',\n      mouseMoveScrollbarHandler\n    )\n    useEventListener(\n      toRef(scrollbar, 'scrollbarElement'),\n      'mouseleave',\n      mouseLeaveScrollbarHandler\n    )\n\n    return {\n      instance,\n      thumb,\n      bar,\n      thumbStyle,\n      visible,\n      clickTrackHandler,\n      clickThumbHandler,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;AAkCA,MAAMA,cAAA,GAAiB;AACvB,IAAAC,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAMH,cAAA;EACNI,KAAA,EAAOC,QAAA;EAEPC,MAAMF,KAAA,EAAO;IACX,MAAMG,SAAA,GAAYC,MAAA,CAAOC,mBAAA;IACzB,IAAI,CAACF,SAAA,EACHG,UAAA,CAAWV,cAAA,EAAgB;IAE7B,MAAMW,QAAA,GAAWC,GAAA;IACjB,MAAMC,KAAA,GAAQD,GAAA;IAEd,MAAME,QAAA,GAAWF,GAAA,CAAI;IACrB,MAAMG,OAAA,GAAUH,GAAA,CAAI;IAEpB,IAAII,UAAA,GAAa;IACjB,IAAIC,WAAA,GAAc;IAClB,IAAIC,kBAAA,GAEO;IAEX,MAAMC,GAAA,GAAMC,QAAA,CACV,MAAMC,OAAA,CAAQjB,KAAA,CAAMkB,QAAA,GAAW,aAAa;IAG9C,MAAMC,UAAA,GAAaH,QAAA,CAAS,MAC1BI,gBAAA,CAAiB;MACfC,IAAA,EAAMrB,KAAA,CAAMqB,IAAA;MACZC,IAAA,EAAMtB,KAAA,CAAMsB,IAAA;MACZP,GAAA,EAAKA,GAAA,CAAIQ;IAAA;IAIb,MAAMC,WAAA,GAAcR,QAAA,CAClB,MAIET,QAAA,CAASgB,KAAA,CAAOR,GAAA,CAAIQ,KAAA,CAAME,MAAA,KAAW,IACrCtB,SAAA,CAAUuB,WAAA,CAAaX,GAAA,CAAIQ,KAAA,CAAMI,UAAA,IACjC3B,KAAA,CAAM4B,KAAA,GACNnB,KAAA,CAAMc,KAAA,CAAOR,GAAA,CAAIQ,KAAA,CAAME,MAAA;IAG3B,MAAMI,iBAAA,GAAqBC,CAAA,IAAkB;;MAE3CA,CAAA,CAAEC,eAAA;MACF,IAAID,CAAA,CAAEE,OAAA,IAAW,CAAC,GAAG,GAAGC,QAAA,CAASH,CAAA,CAAEI,MAAA,GAAS;MAE5C,CAAAC,EAAA,GAAAC,MAAA,CAAOC,YAAA,OAAP,gBAAAF,EAAA,CAAuBG,eAAA;MACvBC,SAAA,CAAUT,CAAA;MAEV,MAAMU,EAAA,GAAKV,CAAA,CAAEW,aAAA;MACb,IAAI,CAACD,EAAA,EAAI;MACT9B,QAAA,CAASa,KAAA,CAAMR,GAAA,CAAIQ,KAAA,CAAMmB,IAAA,IACvBF,EAAA,CAAGzB,GAAA,CAAIQ,KAAA,CAAME,MAAA,KAAAK,CAAA,CACVf,GAAA,CAAIQ,KAAA,CAAMoB,MAAA,IAAUH,EAAA,CAAGI,qBAAA,GAAwB7B,GAAA,CAAIQ,KAAA,CAAMsB,SAAA;IAAA;IAGhE,MAAMC,iBAAA,GAAqBhB,CAAA,IAAkB;MAC3C,IAAI,CAACrB,KAAA,CAAMc,KAAA,IAAS,CAAChB,QAAA,CAASgB,KAAA,IAAS,CAACpB,SAAA,CAAUuB,WAAA,EAAa;MAE/D,MAAMD,MAAA,GAASsB,IAAA,CAAKC,GAAA,CACjBlB,CAAA,CAAEmB,MAAA,CAAuBL,qBAAA,GAAwB7B,GAAA,CAAIQ,KAAA,CAAMsB,SAAA,IAC1Df,CAAA,CAAEf,GAAA,CAAIQ,KAAA,CAAMoB,MAAA;MAEhB,MAAMO,SAAA,GAAYzC,KAAA,CAAMc,KAAA,CAAMR,GAAA,CAAIQ,KAAA,CAAME,MAAA,IAAU;MAClD,MAAM0B,uBAAA,GACF,CAAA1B,MAAA,GAASyB,SAAA,IAAa,MAAM1B,WAAA,CAAYD,KAAA,GAC1ChB,QAAA,CAASgB,KAAA,CAAMR,GAAA,CAAIQ,KAAA,CAAME,MAAA;MAE3BtB,SAAA,CAAUuB,WAAA,CAAYX,GAAA,CAAIQ,KAAA,CAAM6B,MAAA,IAC7BD,uBAAA,GACChD,SAAA,CAAUuB,WAAA,CAAYX,GAAA,CAAIQ,KAAA,CAAMI,UAAA,IAClC;IAAA;IAGJ,MAAMY,SAAA,GAAaT,CAAA,IAAkB;MACnCA,CAAA,CAAEuB,wBAAA;MACFzC,UAAA,GAAa;MACb0C,QAAA,CAASC,gBAAA,CAAiB,aAAaC,wBAAA;MACvCF,QAAA,CAASC,gBAAA,CAAiB,WAAWE,sBAAA;MACrC3C,kBAAA,GAAqBwC,QAAA,CAASI,aAAA;MAC9BJ,QAAA,CAASI,aAAA,GAAgB,MAAM;IAAA;IAGjC,MAAMF,wBAAA,GAA4B1B,CAAA,IAAkB;MAClD,IAAI,CAACvB,QAAA,CAASgB,KAAA,IAAS,CAACd,KAAA,CAAMc,KAAA,EAAO;MACrC,IAAIX,UAAA,KAAe,OAAO;MAE1B,MAAM+C,QAAA,GAAWjD,QAAA,CAASa,KAAA,CAAMR,GAAA,CAAIQ,KAAA,CAAMmB,IAAA;MAC1C,IAAI,CAACiB,QAAA,EAAU;MAEf,MAAMlC,MAAA,GACH,CAAAlB,QAAA,CAASgB,KAAA,CAAMqB,qBAAA,GAAwB7B,GAAA,CAAIQ,KAAA,CAAMsB,SAAA,IAChDf,CAAA,CAAEf,GAAA,CAAIQ,KAAA,CAAMoB,MAAA,KACd;MACF,MAAMiB,kBAAA,GAAqBnD,KAAA,CAAMc,KAAA,CAAMR,GAAA,CAAIQ,KAAA,CAAME,MAAA,IAAUkC,QAAA;MAC3D,MAAMR,uBAAA,GACF,CAAA1B,MAAA,GAASmC,kBAAA,IAAsB,MAAMpC,WAAA,CAAYD,KAAA,GACnDhB,QAAA,CAASgB,KAAA,CAAMR,GAAA,CAAIQ,KAAA,CAAME,MAAA;MAC3BtB,SAAA,CAAUuB,WAAA,CAAYX,GAAA,CAAIQ,KAAA,CAAM6B,MAAA,IAC7BD,uBAAA,GACChD,SAAA,CAAUuB,WAAA,CAAYX,GAAA,CAAIQ,KAAA,CAAMI,UAAA,IAClC;IAAA;IAGJ,MAAM8B,sBAAA,GAAyBA,CAAA,KAAM;MACnC7C,UAAA,GAAa;MACbF,QAAA,CAASa,KAAA,CAAMR,GAAA,CAAIQ,KAAA,CAAMmB,IAAA,IAAQ;MACjCY,QAAA,CAASO,mBAAA,CAAoB,aAAaL,wBAAA;MAC1CF,QAAA,CAASO,mBAAA,CAAoB,WAAWJ,sBAAA;MACxCH,QAAA,CAASI,aAAA,GAAgB5C,kBAAA;MACzB,IAAID,WAAA,EAAaF,OAAA,CAAQY,KAAA,GAAQ;IAAA;IAGnC,MAAMuC,yBAAA,GAA4BA,CAAA,KAAM;MACtCjD,WAAA,GAAc;MACdF,OAAA,CAAQY,KAAA,GAAQ,CAAC,CAACvB,KAAA,CAAMqB,IAAA;IAAA;IAG1B,MAAM0C,0BAAA,GAA6BA,CAAA,KAAM;MACvClD,WAAA,GAAc;MACdF,OAAA,CAAQY,KAAA,GAAQX,UAAA;IAAA;IAGlBoD,eAAA,CAAgB,MACdV,QAAA,CAASO,mBAAA,CAAoB,WAAWJ,sBAAA;IAG1CQ,gBAAA,CACEC,KAAA,CAAM/D,SAAA,EAAW,qBACjB,aACA2D,yBAAA;IAEFG,gBAAA,CACEC,KAAA,CAAM/D,SAAA,EAAW,qBACjB,cACA4D,0BAAA;IAGF,OAAO;MACLxD,QAAA;MACAE,KAAA;MACAM,GAAA;MACAI,UAAA;MACAR,OAAA;MACAmC,iBAAA;MACAjB;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}