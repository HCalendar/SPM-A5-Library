{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getCurrentInstance, ref } from 'vue';\nimport { getKeysMap, getRowIdentity, toggleRowStatus } from '../util.mjs';\nfunction useExpand(watcherData) {\n  const instance = getCurrentInstance();\n  const defaultExpandAll = ref(false);\n  const expandRows = ref([]);\n  const updateExpandRows = () => {\n    const data = watcherData.data.value || [];\n    const rowKey = watcherData.rowKey.value;\n    if (defaultExpandAll.value) {\n      expandRows.value = data.slice();\n    } else if (rowKey) {\n      const expandRowsMap = getKeysMap(expandRows.value, rowKey);\n      expandRows.value = data.reduce((prev, row) => {\n        const rowId = getRowIdentity(row, rowKey);\n        const rowInfo = expandRowsMap[rowId];\n        if (rowInfo) {\n          prev.push(row);\n        }\n        return prev;\n      }, []);\n    } else {\n      expandRows.value = [];\n    }\n  };\n  const toggleRowExpansion = (row, expanded) => {\n    const changed = toggleRowStatus(expandRows.value, row, expanded);\n    if (changed) {\n      instance.emit(\"expand-change\", row, expandRows.value.slice());\n      instance.store.scheduleLayout();\n    }\n  };\n  const setExpandRowKeys = rowKeys => {\n    instance.store.assertRowKey();\n    const data = watcherData.data.value || [];\n    const rowKey = watcherData.rowKey.value;\n    const keysMap = getKeysMap(data, rowKey);\n    expandRows.value = rowKeys.reduce((prev, cur) => {\n      const info = keysMap[cur];\n      if (info) {\n        prev.push(info.row);\n      }\n      return prev;\n    }, []);\n  };\n  const isRowExpanded = row => {\n    const rowKey = watcherData.rowKey.value;\n    if (rowKey) {\n      const expandMap = getKeysMap(expandRows.value, rowKey);\n      return !!expandMap[getRowIdentity(row, rowKey)];\n    }\n    return expandRows.value.indexOf(row) !== -1;\n  };\n  return {\n    updateExpandRows,\n    toggleRowExpansion,\n    setExpandRowKeys,\n    isRowExpanded,\n    states: {\n      expandRows,\n      defaultExpandAll\n    }\n  };\n}\nexport { useExpand as default };","map":{"version":3,"names":["useExpand","watcherData","instance","getCurrentInstance","defaultExpandAll","ref","expandRows","updateExpandRows","data","value","rowKey","slice","expandRowsMap","getKeysMap","reduce","prev","row","rowId","getRowIdentity","rowInfo","push","toggleRowExpansion","expanded","changed","toggleRowStatus","emit","store","scheduleLayout","setExpandRowKeys","rowKeys","assertRowKey","keysMap","cur","info","isRowExpanded","expandMap","indexOf","states"],"sources":["../../../../../../../packages/components/table/src/store/expand.ts"],"sourcesContent":["import { ref, getCurrentInstance } from 'vue'\nimport { toggleRowStatus, getKeysMap, getRowIdentity } from '../util'\n\nimport type { Ref } from 'vue'\nimport type { WatcherPropsData } from './index'\nimport type { Table } from '../table/defaults'\n\nfunction useExpand<T>(watcherData: WatcherPropsData<T>) {\n  const instance = getCurrentInstance() as Table<T>\n  const defaultExpandAll = ref(false)\n  const expandRows: Ref<T[]> = ref([])\n  const updateExpandRows = () => {\n    const data = watcherData.data.value || []\n    const rowKey = watcherData.rowKey.value\n    if (defaultExpandAll.value) {\n      expandRows.value = data.slice()\n    } else if (rowKey) {\n      // TODO：这里的代码可以优化\n      const expandRowsMap = getKeysMap(expandRows.value, rowKey)\n      expandRows.value = data.reduce((prev: T[], row: T) => {\n        const rowId = getRowIdentity(row, rowKey)\n        const rowInfo = expandRowsMap[rowId]\n        if (rowInfo) {\n          prev.push(row)\n        }\n        return prev\n      }, [])\n    } else {\n      expandRows.value = []\n    }\n  }\n\n  const toggleRowExpansion = (row: T, expanded?: boolean) => {\n    const changed = toggleRowStatus(expandRows.value, row, expanded)\n    if (changed) {\n      instance.emit('expand-change', row, expandRows.value.slice())\n      instance.store.scheduleLayout()\n    }\n  }\n\n  const setExpandRowKeys = (rowKeys: string[]) => {\n    instance.store.assertRowKey()\n    // TODO：这里的代码可以优化\n    const data = watcherData.data.value || []\n    const rowKey = watcherData.rowKey.value\n    const keysMap = getKeysMap(data, rowKey)\n    expandRows.value = rowKeys.reduce((prev: T[], cur: string) => {\n      const info = keysMap[cur]\n      if (info) {\n        prev.push(info.row)\n      }\n      return prev\n    }, [])\n  }\n\n  const isRowExpanded = (row: T): boolean => {\n    const rowKey = watcherData.rowKey.value\n    if (rowKey) {\n      const expandMap = getKeysMap(expandRows.value, rowKey)\n      return !!expandMap[getRowIdentity(row, rowKey)]\n    }\n    return expandRows.value.indexOf(row) !== -1\n  }\n  return {\n    updateExpandRows,\n    toggleRowExpansion,\n    setExpandRowKeys,\n    isRowExpanded,\n    states: {\n      expandRows,\n      defaultExpandAll,\n    },\n  }\n}\n\nexport default useExpand\n"],"mappings":";;;AAOA,SAAAA,UAAsBC,WAAA,EAAkC;EACtD,MAAMC,QAAA,GAAWC,kBAAA;EACjB,MAAMC,gBAAA,GAAmBC,GAAA,CAAI;EAC7B,MAAMC,UAAA,GAAuBD,GAAA,CAAI;EACjC,MAAME,gBAAA,GAAmBA,CAAA,KAAM;IAC7B,MAAMC,IAAA,GAAOP,WAAA,CAAYO,IAAA,CAAKC,KAAA,IAAS;IACvC,MAAMC,MAAA,GAAST,WAAA,CAAYS,MAAA,CAAOD,KAAA;IAClC,IAAIL,gBAAA,CAAiBK,KAAA,EAAO;MAC1BH,UAAA,CAAWG,KAAA,GAAQD,IAAA,CAAKG,KAAA;IAAA,WACfD,MAAA,EAAQ;MAEjB,MAAME,aAAA,GAAgBC,UAAA,CAAWP,UAAA,CAAWG,KAAA,EAAOC,MAAA;MACnDJ,UAAA,CAAWG,KAAA,GAAQD,IAAA,CAAKM,MAAA,CAAO,CAACC,IAAA,EAAWC,GAAA,KAAW;QACpD,MAAMC,KAAA,GAAQC,cAAA,CAAeF,GAAA,EAAKN,MAAA;QAClC,MAAMS,OAAA,GAAUP,aAAA,CAAcK,KAAA;QAC9B,IAAIE,OAAA,EAAS;UACXJ,IAAA,CAAKK,IAAA,CAAKJ,GAAA;QAAA;QAEZ,OAAOD,IAAA;MAAA,GACN;IAAA,OACE;MACLT,UAAA,CAAWG,KAAA,GAAQ;IAAA;EAAA;EAIvB,MAAMY,kBAAA,GAAqBA,CAACL,GAAA,EAAQM,QAAA,KAAuB;IACzD,MAAMC,OAAA,GAAUC,eAAA,CAAgBlB,UAAA,CAAWG,KAAA,EAAOO,GAAA,EAAKM,QAAA;IACvD,IAAIC,OAAA,EAAS;MACXrB,QAAA,CAASuB,IAAA,CAAK,iBAAiBT,GAAA,EAAKV,UAAA,CAAWG,KAAA,CAAME,KAAA;MACrDT,QAAA,CAASwB,KAAA,CAAMC,cAAA;IAAA;EAAA;EAInB,MAAMC,gBAAA,GAAoBC,OAAA,IAAsB;IAC9C3B,QAAA,CAASwB,KAAA,CAAMI,YAAA;IAEf,MAAMtB,IAAA,GAAOP,WAAA,CAAYO,IAAA,CAAKC,KAAA,IAAS;IACvC,MAAMC,MAAA,GAAST,WAAA,CAAYS,MAAA,CAAOD,KAAA;IAClC,MAAMsB,OAAA,GAAUlB,UAAA,CAAWL,IAAA,EAAME,MAAA;IACjCJ,UAAA,CAAWG,KAAA,GAAQoB,OAAA,CAAQf,MAAA,CAAO,CAACC,IAAA,EAAWiB,GAAA,KAAgB;MAC5D,MAAMC,IAAA,GAAOF,OAAA,CAAQC,GAAA;MACrB,IAAIC,IAAA,EAAM;QACRlB,IAAA,CAAKK,IAAA,CAAKa,IAAA,CAAKjB,GAAA;MAAA;MAEjB,OAAOD,IAAA;IAAA,GACN;EAAA;EAGL,MAAMmB,aAAA,GAAiBlB,GAAA,IAAoB;IACzC,MAAMN,MAAA,GAAST,WAAA,CAAYS,MAAA,CAAOD,KAAA;IAClC,IAAIC,MAAA,EAAQ;MACV,MAAMyB,SAAA,GAAYtB,UAAA,CAAWP,UAAA,CAAWG,KAAA,EAAOC,MAAA;MAC/C,OAAO,CAAC,CAACyB,SAAA,CAAUjB,cAAA,CAAeF,GAAA,EAAKN,MAAA;IAAA;IAEzC,OAAOJ,UAAA,CAAWG,KAAA,CAAM2B,OAAA,CAAQpB,GAAA,MAAS;EAAA;EAE3C,OAAO;IACLT,gBAAA;IACAc,kBAAA;IACAO,gBAAA;IACAM,aAAA;IACAG,MAAA,EAAQ;MACN/B,UAAA;MACAF;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}