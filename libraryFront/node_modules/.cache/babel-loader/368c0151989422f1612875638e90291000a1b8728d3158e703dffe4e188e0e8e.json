{"ast":null,"code":"import { defineComponent, provide, ref, h, renderSlot } from 'vue';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport advancedFormat from 'dayjs/plugin/advancedFormat';\nimport localeData from 'dayjs/plugin/localeData';\nimport weekOfYear from 'dayjs/plugin/weekOfYear';\nimport weekYear from 'dayjs/plugin/weekYear';\nimport dayOfYear from 'dayjs/plugin/dayOfYear';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\nimport '../../time-picker/index.mjs';\nimport './date-picker-com/panel-date-pick.mjs';\nimport './date-picker-com/panel-date-range.mjs';\nimport './date-picker-com/panel-month-range.mjs';\nimport { ROOT_PICKER_INJECTION_KEY } from './date-picker.type.mjs';\nimport script from './date-picker-com/panel-date-range.vue_vue_type_script_lang.mjs';\nimport script$1 from './date-picker-com/panel-month-range.vue_vue_type_script_lang.mjs';\nimport script$2 from './date-picker-com/panel-date-pick.vue_vue_type_script_lang.mjs';\nimport { timePickerDefaultProps } from '../../time-picker/src/common/props.mjs';\nimport { DEFAULT_FORMATS_DATEPICKER, DEFAULT_FORMATS_DATE } from '../../time-picker/src/common/constant.mjs';\nimport script$3 from '../../time-picker/src/common/picker.vue_vue_type_script_lang.mjs';\ndayjs.extend(localeData);\ndayjs.extend(advancedFormat);\ndayjs.extend(customParseFormat);\ndayjs.extend(weekOfYear);\ndayjs.extend(weekYear);\ndayjs.extend(dayOfYear);\ndayjs.extend(isSameOrAfter);\ndayjs.extend(isSameOrBefore);\nconst getPanel = function (type) {\n  if (type === \"daterange\" || type === \"datetimerange\") {\n    return script;\n  } else if (type === \"monthrange\") {\n    return script$1;\n  }\n  return script$2;\n};\nvar DatePicker = defineComponent({\n  name: \"ElDatePicker\",\n  install: null,\n  props: {\n    ...timePickerDefaultProps,\n    type: {\n      type: String,\n      default: \"date\"\n    }\n  },\n  emits: [\"update:modelValue\"],\n  setup(props, ctx) {\n    provide(\"ElPopperOptions\", props.popperOptions);\n    provide(ROOT_PICKER_INJECTION_KEY, {\n      ctx\n    });\n    const commonPicker = ref(null);\n    const refProps = {\n      ...props,\n      focus: () => {\n        var _a;\n        (_a = commonPicker.value) == null ? void 0 : _a.handleFocus();\n      }\n    };\n    ctx.expose(refProps);\n    return () => {\n      var _a;\n      const format = (_a = props.format) != null ? _a : DEFAULT_FORMATS_DATEPICKER[props.type] || DEFAULT_FORMATS_DATE;\n      return h(script$3, {\n        ...props,\n        format,\n        type: props.type,\n        ref: commonPicker,\n        \"onUpdate:modelValue\": value => ctx.emit(\"update:modelValue\", value)\n      }, {\n        default: scopedProps => h(getPanel(props.type), scopedProps),\n        \"range-separator\": () => renderSlot(ctx.slots, \"range-separator\")\n      });\n    };\n  }\n});\nexport { DatePicker as default };","map":{"version":3,"names":["dayjs","extend","localeData","advancedFormat","customParseFormat","weekOfYear","weekYear","dayOfYear","isSameOrAfter","isSameOrBefore","getPanel","type","script","script$1","script$2","DatePicker","defineComponent","name","install","props","timePickerDefaultProps","String","default","emits","setup","ctx","provide","popperOptions","ROOT_PICKER_INJECTION_KEY","commonPicker","ref","refProps","focus","_a","value","handleFocus","expose","format","DEFAULT_FORMATS_DATEPICKER","DEFAULT_FORMATS_DATE","h","script$3","emit","scopedProps","range-separator","renderSlot","slots"],"sources":["../../../../../../packages/components/date-picker/src/date-picker.ts"],"sourcesContent":["import { defineComponent, h, provide, ref, renderSlot } from 'vue'\nimport dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat'\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\nimport localeData from 'dayjs/plugin/localeData'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport weekYear from 'dayjs/plugin/weekYear'\nimport dayOfYear from 'dayjs/plugin/dayOfYear'\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore'\nimport {\n  CommonPicker,\n  DEFAULT_FORMATS_DATE,\n  DEFAULT_FORMATS_DATEPICKER,\n  timePickerDefaultProps,\n} from '@element-plus/components/time-picker'\nimport DatePickPanel from './date-picker-com/panel-date-pick.vue'\nimport DateRangePickPanel from './date-picker-com/panel-date-range.vue'\nimport MonthRangePickPanel from './date-picker-com/panel-month-range.vue'\nimport { ROOT_PICKER_INJECTION_KEY } from './date-picker.type'\nimport type { PropType } from 'vue'\nimport type { IDatePickerType } from './date-picker.type'\n\ndayjs.extend(localeData)\ndayjs.extend(advancedFormat)\ndayjs.extend(customParseFormat)\ndayjs.extend(weekOfYear)\ndayjs.extend(weekYear)\ndayjs.extend(dayOfYear)\ndayjs.extend(isSameOrAfter)\ndayjs.extend(isSameOrBefore)\n\nconst getPanel = function (type: IDatePickerType) {\n  if (type === 'daterange' || type === 'datetimerange') {\n    return DateRangePickPanel\n  } else if (type === 'monthrange') {\n    return MonthRangePickPanel\n  }\n  return DatePickPanel\n}\n\nexport default defineComponent({\n  name: 'ElDatePicker',\n  install: null,\n  props: {\n    ...timePickerDefaultProps,\n    type: {\n      type: String as PropType<IDatePickerType>,\n      default: 'date',\n    },\n  },\n  emits: ['update:modelValue'],\n  setup(props, ctx) {\n    provide('ElPopperOptions', props.popperOptions)\n    provide(ROOT_PICKER_INJECTION_KEY, {\n      ctx,\n    })\n    const commonPicker = ref(null)\n    const refProps = {\n      ...props,\n      focus: () => {\n        commonPicker.value?.handleFocus()\n      },\n    }\n    ctx.expose(refProps)\n    return () => {\n      // since props always have all defined keys on it, {format, ...props} will always overwrite format\n      // pick props.format or provide default value here before spreading\n      const format =\n        props.format ??\n        (DEFAULT_FORMATS_DATEPICKER[props.type] || DEFAULT_FORMATS_DATE)\n      return h(\n        CommonPicker,\n        {\n          ...props,\n          format,\n          type: props.type,\n          ref: commonPicker,\n          'onUpdate:modelValue': (value) =>\n            ctx.emit('update:modelValue', value),\n        },\n        {\n          default: (scopedProps) => h(getPanel(props.type), scopedProps),\n          'range-separator': () => renderSlot(ctx.slots, 'range-separator'),\n        }\n      )\n    }\n  },\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAuBAA,KAAA,CAAMC,MAAA,CAAOC,UAAA;AACbF,KAAA,CAAMC,MAAA,CAAOE,cAAA;AACbH,KAAA,CAAMC,MAAA,CAAOG,iBAAA;AACbJ,KAAA,CAAMC,MAAA,CAAOI,UAAA;AACbL,KAAA,CAAMC,MAAA,CAAOK,QAAA;AACbN,KAAA,CAAMC,MAAA,CAAOM,SAAA;AACbP,KAAA,CAAMC,MAAA,CAAOO,aAAA;AACbR,KAAA,CAAMC,MAAA,CAAOQ,cAAA;AAEb,MAAMC,QAAA,GAAW,SAAAA,CAAUC,IAAA,EAAuB;EAChD,IAAIA,IAAA,KAAS,eAAeA,IAAA,KAAS,iBAAiB;IACpD,OAAOC,MAAA;EAAA,WACED,IAAA,KAAS,cAAc;IAChC,OAAOE,QAAA;EAAA;EAET,OAAOC,QAAA;AAAA;AAGT,IAAAC,UAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,OAAA,EAAS;EACTC,KAAA,EAAO;IAAA,GACFC,sBAAA;IACHT,IAAA,EAAM;MACJA,IAAA,EAAMU,MAAA;MACNC,OAAA,EAAS;IAAA;EAAA;EAGbC,KAAA,EAAO,CAAC;EACRC,MAAML,KAAA,EAAOM,GAAA,EAAK;IAChBC,OAAA,CAAQ,mBAAmBP,KAAA,CAAMQ,aAAA;IACjCD,OAAA,CAAQE,yBAAA,EAA2B;MACjCH;IAAA;IAEF,MAAMI,YAAA,GAAeC,GAAA,CAAI;IACzB,MAAMC,QAAA,GAAW;MAAA,GACZZ,KAAA;MACHa,KAAA,EAAOA,CAAA,KAAM;QA5DnB,IAAAC,EAAA;QA6DQ,CAAAA,EAAA,GAAAJ,YAAA,CAAaK,KAAA,KAAb,gBAAAD,EAAA,CAAoBE,WAAA;MAAA;IAAA;IAGxBV,GAAA,CAAIW,MAAA,CAAOL,QAAA;IACX,OAAO,MAAM;MAjEjB,IAAAE,EAAA;MAoEM,MAAMI,MAAA,GACJ,CAAAJ,EAAA,GAAAd,KAAA,CAAMkB,MAAA,KAAN,OAAAJ,EAAA,GACCK,0BAAA,CAA2BnB,KAAA,CAAMR,IAAA,KAAS4B,oBAAA;MAC7C,OAAOC,CAAA,CACLC,QAAA,EACA;QAAA,GACKtB,KAAA;QACHkB,MAAA;QACA1B,IAAA,EAAMQ,KAAA,CAAMR,IAAA;QACZmB,GAAA,EAAKD,YAAA;QACL,uBAAwBK,KAAA,IACtBT,GAAA,CAAIiB,IAAA,CAAK,qBAAqBR,KAAA;MAAA,GAElC;QACEZ,OAAA,EAAUqB,WAAA,IAAgBH,CAAA,CAAE9B,QAAA,CAASS,KAAA,CAAMR,IAAA,GAAOgC,WAAA;QAClD,mBAAmBC,CAAA,KAAMC,UAAA,CAAWpB,GAAA,CAAIqB,KAAA,EAAO;MAAA;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}