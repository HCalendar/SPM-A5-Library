{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, createCommentVNode, createElementVNode, normalizeStyle, createVNode, Fragment, renderList } from 'vue';\nconst _hoisted_1 = [\"aria-valuemin\", \"aria-valuemax\", \"aria-orientation\", \"aria-disabled\"];\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  class: \"el-slider__marks\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input_number = resolveComponent(\"el-input-number\");\n  const _component_slider_button = resolveComponent(\"slider-button\");\n  const _component_slider_marker = resolveComponent(\"slider-marker\");\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"sliderWrapper\",\n    class: normalizeClass([\"el-slider\", {\n      \"is-vertical\": _ctx.vertical,\n      \"el-slider--with-input\": _ctx.showInput\n    }]),\n    role: \"slider\",\n    \"aria-valuemin\": _ctx.min,\n    \"aria-valuemax\": _ctx.max,\n    \"aria-orientation\": _ctx.vertical ? \"vertical\" : \"horizontal\",\n    \"aria-disabled\": _ctx.sliderDisabled\n  }, [_ctx.showInput && !_ctx.range ? (openBlock(), createBlock(_component_el_input_number, {\n    key: 0,\n    ref: \"input\",\n    \"model-value\": _ctx.firstValue,\n    class: \"el-slider__input\",\n    step: _ctx.step,\n    disabled: _ctx.sliderDisabled,\n    controls: _ctx.showInputControls,\n    min: _ctx.min,\n    max: _ctx.max,\n    debounce: _ctx.debounce,\n    size: _ctx.inputSize,\n    \"onUpdate:modelValue\": _ctx.setFirstValue,\n    onChange: _ctx.emitChange\n  }, null, 8, [\"model-value\", \"step\", \"disabled\", \"controls\", \"min\", \"max\", \"debounce\", \"size\", \"onUpdate:modelValue\", \"onChange\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n    ref: \"slider\",\n    class: normalizeClass([\"el-slider__runway\", {\n      \"show-input\": _ctx.showInput && !_ctx.range,\n      disabled: _ctx.sliderDisabled\n    }]),\n    style: normalizeStyle(_ctx.runwayStyle),\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onSliderClick && _ctx.onSliderClick(...args))\n  }, [createElementVNode(\"div\", {\n    class: \"el-slider__bar\",\n    style: normalizeStyle(_ctx.barStyle)\n  }, null, 4), createVNode(_component_slider_button, {\n    ref: \"firstButton\",\n    \"model-value\": _ctx.firstValue,\n    vertical: _ctx.vertical,\n    \"tooltip-class\": _ctx.tooltipClass,\n    \"onUpdate:modelValue\": _ctx.setFirstValue\n  }, null, 8, [\"model-value\", \"vertical\", \"tooltip-class\", \"onUpdate:modelValue\"]), _ctx.range ? (openBlock(), createBlock(_component_slider_button, {\n    key: 0,\n    ref: \"secondButton\",\n    \"model-value\": _ctx.secondValue,\n    vertical: _ctx.vertical,\n    \"tooltip-class\": _ctx.tooltipClass,\n    \"onUpdate:modelValue\": _ctx.setSecondValue\n  }, null, 8, [\"model-value\", \"vertical\", \"tooltip-class\", \"onUpdate:modelValue\"])) : createCommentVNode(\"v-if\", true), _ctx.showStops ? (openBlock(), createElementBlock(\"div\", _hoisted_2, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.stops, (item, key) => {\n    return openBlock(), createElementBlock(\"div\", {\n      key,\n      class: \"el-slider__stop\",\n      style: normalizeStyle(_ctx.getStopStyle(item))\n    }, null, 4);\n  }), 128))])) : createCommentVNode(\"v-if\", true), _ctx.markList.length > 0 ? (openBlock(), createElementBlock(Fragment, {\n    key: 2\n  }, [createElementVNode(\"div\", null, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.markList, (item, key) => {\n    return openBlock(), createElementBlock(\"div\", {\n      key,\n      style: normalizeStyle(_ctx.getStopStyle(item.position)),\n      class: \"el-slider__stop el-slider__marks-stop\"\n    }, null, 4);\n  }), 128))]), createElementVNode(\"div\", _hoisted_3, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.markList, (item, key) => {\n    return openBlock(), createBlock(_component_slider_marker, {\n      key,\n      mark: item.mark,\n      style: normalizeStyle(_ctx.getStopStyle(item.position))\n    }, null, 8, [\"mark\", \"style\"]);\n  }), 128))])], 64)) : createCommentVNode(\"v-if\", true)], 6)], 10, _hoisted_1);\n}\nexport { render };","map":{"version":3,"names":["class","createElementBlock","ref","normalizeClass","_ctx","vertical","showInput","role","min","max","sliderDisabled","range","openBlock","createBlock","_component_el_input_number","firstValue","step","disabled","controls","showInputControls","debounce","size","inputSize","setFirstValue","onChange","emitChange","createElementVNode","style","normalizeStyle","runwayStyle","onClick","_cache","args","onSliderClick","barStyle","createVNode","_component_slider_button","tooltipClass","secondValue","setSecondValue","showStops","_hoisted_2","Fragment","renderList","stops","item","key","getStopStyle","markList","length","position","_hoisted_3","_component_slider_marker","mark"],"sources":["../../../../../../packages/components/slider/src/index.vue?vue&type=template&id=24c42d04&lang.js"],"sourcesContent":["<template>\n  <div\n    ref=\"sliderWrapper\"\n    class=\"el-slider\"\n    :class=\"{ 'is-vertical': vertical, 'el-slider--with-input': showInput }\"\n    role=\"slider\"\n    :aria-valuemin=\"min\"\n    :aria-valuemax=\"max\"\n    :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\"\n    :aria-disabled=\"sliderDisabled\"\n  >\n    <el-input-number\n      v-if=\"showInput && !range\"\n      ref=\"input\"\n      :model-value=\"firstValue\"\n      class=\"el-slider__input\"\n      :step=\"step\"\n      :disabled=\"sliderDisabled\"\n      :controls=\"showInputControls\"\n      :min=\"min\"\n      :max=\"max\"\n      :debounce=\"debounce\"\n      :size=\"inputSize\"\n      @update:model-value=\"setFirstValue\"\n      @change=\"emitChange\"\n    />\n    <div\n      ref=\"slider\"\n      class=\"el-slider__runway\"\n      :class=\"{ 'show-input': showInput && !range, disabled: sliderDisabled }\"\n      :style=\"runwayStyle\"\n      @click=\"onSliderClick\"\n    >\n      <div class=\"el-slider__bar\" :style=\"barStyle\"></div>\n      <slider-button\n        ref=\"firstButton\"\n        :model-value=\"firstValue\"\n        :vertical=\"vertical\"\n        :tooltip-class=\"tooltipClass\"\n        @update:model-value=\"setFirstValue\"\n      />\n      <slider-button\n        v-if=\"range\"\n        ref=\"secondButton\"\n        :model-value=\"secondValue\"\n        :vertical=\"vertical\"\n        :tooltip-class=\"tooltipClass\"\n        @update:model-value=\"setSecondValue\"\n      />\n      <div v-if=\"showStops\">\n        <div\n          v-for=\"(item, key) in stops\"\n          :key=\"key\"\n          class=\"el-slider__stop\"\n          :style=\"getStopStyle(item)\"\n        ></div>\n      </div>\n      <template v-if=\"markList.length > 0\">\n        <div>\n          <div\n            v-for=\"(item, key) in markList\"\n            :key=\"key\"\n            :style=\"getStopStyle(item.position)\"\n            class=\"el-slider__stop el-slider__marks-stop\"\n          ></div>\n        </div>\n        <div class=\"el-slider__marks\">\n          <slider-marker\n            v-for=\"(item, key) in markList\"\n            :key=\"key\"\n            :mark=\"item.mark\"\n            :style=\"getStopStyle(item.position)\"\n          />\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport ElInputNumber from '@element-plus/components/input-number'\nimport {\n  UPDATE_MODEL_EVENT,\n  CHANGE_EVENT,\n  INPUT_EVENT,\n} from '@element-plus/utils/constants'\nimport { off, on } from '@element-plus/utils/dom'\nimport { throwError } from '@element-plus/utils/error'\nimport SliderButton from './button.vue'\nimport SliderMarker from './marker.vue'\nimport { useMarks } from './useMarks'\nimport { useSlide } from './useSlide'\nimport { useStops } from './useStops'\n\nimport type { PropType, Ref } from 'vue'\nimport type { ComponentSize, Nullable } from '@element-plus/utils/types'\n\nexport default defineComponent({\n  name: 'ElSlider',\n\n  components: {\n    ElInputNumber,\n    SliderButton,\n    SliderMarker,\n  },\n\n  props: {\n    modelValue: {\n      type: [Number, Array] as PropType<number | number[]>,\n      default: 0,\n    },\n    min: {\n      type: Number,\n      default: 0,\n    },\n    max: {\n      type: Number,\n      default: 100,\n    },\n    step: {\n      type: Number,\n      default: 1,\n    },\n    showInput: {\n      type: Boolean,\n      default: false,\n    },\n    showInputControls: {\n      type: Boolean,\n      default: true,\n    },\n    inputSize: {\n      type: String as PropType<ComponentSize>,\n      default: 'small',\n    },\n    showStops: {\n      type: Boolean,\n      default: false,\n    },\n    showTooltip: {\n      type: Boolean,\n      default: true,\n    },\n    formatTooltip: {\n      type: Function as PropType<(val: number) => number | string>,\n      default: undefined,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    range: {\n      type: Boolean,\n      default: false,\n    },\n    vertical: {\n      type: Boolean,\n      default: false,\n    },\n    height: {\n      type: String,\n      default: '',\n    },\n    debounce: {\n      type: Number,\n      default: 300,\n    },\n    label: {\n      type: String,\n      default: undefined,\n    },\n    tooltipClass: {\n      type: String,\n      default: undefined,\n    },\n    marks: Object,\n  },\n\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT],\n\n  setup(props, { emit }) {\n    const initData = reactive({\n      firstValue: 0,\n      secondValue: 0,\n      oldValue: 0,\n      dragging: false,\n      sliderSize: 1,\n    })\n\n    const {\n      elFormItem,\n      slider,\n      firstButton,\n      secondButton,\n      sliderDisabled,\n      minValue,\n      maxValue,\n      runwayStyle,\n      barStyle,\n      resetSize,\n      emitChange,\n      onSliderClick,\n      setFirstValue,\n      setSecondValue,\n    } = useSlide(props, initData, emit)\n\n    const { stops, getStopStyle } = useStops(\n      props,\n      initData,\n      minValue,\n      maxValue\n    )\n\n    const markList = useMarks(props)\n\n    useWatch(props, initData, minValue, maxValue, emit, elFormItem)\n\n    const precision = computed(() => {\n      const precisions = [props.min, props.max, props.step].map((item) => {\n        const decimal = `${item}`.split('.')[1]\n        return decimal ? decimal.length : 0\n      })\n      return Math.max.apply(null, precisions)\n    })\n\n    const { sliderWrapper } = useLifecycle(props, initData, resetSize)\n\n    const { firstValue, secondValue, oldValue, dragging, sliderSize } =\n      toRefs(initData)\n\n    const updateDragging = (val: boolean) => {\n      initData.dragging = val\n    }\n\n    provide('SliderProvider', {\n      ...toRefs(props),\n      sliderSize,\n      disabled: sliderDisabled,\n      precision,\n      emitChange,\n      resetSize,\n      updateDragging,\n    })\n\n    return {\n      firstValue,\n      secondValue,\n      oldValue,\n      dragging,\n      sliderSize,\n\n      slider,\n      firstButton,\n      secondButton,\n      sliderDisabled,\n      runwayStyle,\n      barStyle,\n      emitChange,\n      onSliderClick,\n      getStopStyle,\n      setFirstValue,\n      setSecondValue,\n\n      stops,\n      markList,\n\n      sliderWrapper,\n    }\n  },\n})\n\nconst useWatch = (props, initData, minValue, maxValue, emit, elFormItem) => {\n  const _emit = (val: number | number[]) => {\n    emit(UPDATE_MODEL_EVENT, val)\n    emit(INPUT_EVENT, val)\n  }\n\n  const valueChanged = () => {\n    if (props.range) {\n      return ![minValue.value, maxValue.value].every(\n        (item, index) => item === initData.oldValue[index]\n      )\n    } else {\n      return props.modelValue !== initData.oldValue\n    }\n  }\n\n  const setValues = () => {\n    if (props.min > props.max) {\n      throwError('Slider', 'min should not be greater than max.')\n      return\n    }\n    const val = props.modelValue\n    if (props.range && Array.isArray(val)) {\n      if (val[1] < props.min) {\n        _emit([props.min, props.min])\n      } else if (val[0] > props.max) {\n        _emit([props.max, props.max])\n      } else if (val[0] < props.min) {\n        _emit([props.min, val[1]])\n      } else if (val[1] > props.max) {\n        _emit([val[0], props.max])\n      } else {\n        initData.firstValue = val[0]\n        initData.secondValue = val[1]\n        if (valueChanged()) {\n          elFormItem.validate?.('change')\n          initData.oldValue = val.slice()\n        }\n      }\n    } else if (!props.range && typeof val === 'number' && !isNaN(val)) {\n      if (val < props.min) {\n        _emit(props.min)\n      } else if (val > props.max) {\n        _emit(props.max)\n      } else {\n        initData.firstValue = val\n        if (valueChanged()) {\n          elFormItem.validate?.('change')\n          initData.oldValue = val\n        }\n      }\n    }\n  }\n\n  setValues()\n\n  watch(\n    () => initData.dragging,\n    (val) => {\n      if (!val) {\n        setValues()\n      }\n    }\n  )\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      if (\n        initData.dragging ||\n        (Array.isArray(val) &&\n          Array.isArray(oldVal) &&\n          val.every((item, index) => item === oldVal[index]))\n      ) {\n        return\n      }\n      setValues()\n    }\n  )\n\n  watch(\n    () => [props.min, props.max],\n    () => {\n      setValues()\n    }\n  )\n}\n\nconst useLifecycle = (props, initData, resetSize) => {\n  const sliderWrapper: Ref<Nullable<HTMLElement>> = ref(null)\n\n  onMounted(async () => {\n    let valuetext\n    if (props.range) {\n      if (Array.isArray(props.modelValue)) {\n        initData.firstValue = Math.max(props.min, props.modelValue[0])\n        initData.secondValue = Math.min(props.max, props.modelValue[1])\n      } else {\n        initData.firstValue = props.min\n        initData.secondValue = props.max\n      }\n      initData.oldValue = [initData.firstValue, initData.secondValue]\n      valuetext = `${initData.firstValue}-${initData.secondValue}`\n    } else {\n      if (typeof props.modelValue !== 'number' || isNaN(props.modelValue)) {\n        initData.firstValue = props.min\n      } else {\n        initData.firstValue = Math.min(\n          props.max,\n          Math.max(props.min, props.modelValue)\n        )\n      }\n      initData.oldValue = initData.firstValue\n      valuetext = initData.firstValue\n    }\n\n    sliderWrapper.value.setAttribute('aria-valuetext', valuetext)\n\n    // label screen reader\n    sliderWrapper.value.setAttribute(\n      'aria-label',\n      props.label ? props.label : `slider between ${props.min} and ${props.max}`\n    )\n\n    on(window, 'resize', resetSize)\n\n    await nextTick()\n    resetSize()\n  })\n\n  onBeforeUnmount(() => {\n    off(window, 'resize', resetSize)\n  })\n\n  return {\n    sliderWrapper,\n  }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}