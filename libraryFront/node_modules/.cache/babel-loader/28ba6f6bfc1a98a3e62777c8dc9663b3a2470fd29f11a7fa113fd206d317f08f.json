{"ast":null,"code":"import { getCurrentInstance, ref, h } from 'vue';\nimport debounce from 'lodash/debounce';\nimport { hasClass, getStyle } from '../../../../utils/dom.mjs';\nimport { getCell, getColumnByCell, createTablePopper } from '../util.mjs';\nfunction useEvents(props) {\n  const instance = getCurrentInstance();\n  const parent = instance.parent;\n  const tooltipContent = ref(\"\");\n  const tooltipTrigger = ref(h(\"div\"));\n  const handleEvent = (event, row, name) => {\n    const table = parent;\n    const cell = getCell(event);\n    let column;\n    if (cell) {\n      column = getColumnByCell({\n        columns: props.store.states.columns.value\n      }, cell);\n      if (column) {\n        table.emit(`cell-${name}`, row, column, cell, event);\n      }\n    }\n    table.emit(`row-${name}`, row, column, event);\n  };\n  const handleDoubleClick = (event, row) => {\n    handleEvent(event, row, \"dblclick\");\n  };\n  const handleClick = (event, row) => {\n    props.store.commit(\"setCurrentRow\", row);\n    handleEvent(event, row, \"click\");\n  };\n  const handleContextMenu = (event, row) => {\n    handleEvent(event, row, \"contextmenu\");\n  };\n  const handleMouseEnter = debounce(function (index) {\n    props.store.commit(\"setHoverRow\", index);\n  }, 30);\n  const handleMouseLeave = debounce(function () {\n    props.store.commit(\"setHoverRow\", null);\n  }, 30);\n  const handleCellMouseEnter = (event, row) => {\n    const table = parent;\n    const cell = getCell(event);\n    if (cell) {\n      const column = getColumnByCell({\n        columns: props.store.states.columns.value\n      }, cell);\n      const hoverState = table.hoverState = {\n        cell,\n        column,\n        row\n      };\n      table.emit(\"cell-mouse-enter\", hoverState.row, hoverState.column, hoverState.cell, event);\n    }\n    const cellChild = event.target.querySelector(\".cell\");\n    if (!(hasClass(cellChild, \"el-tooltip\") && cellChild.childNodes.length)) {\n      return;\n    }\n    const range = document.createRange();\n    range.setStart(cellChild, 0);\n    range.setEnd(cellChild, cellChild.childNodes.length);\n    const rangeWidth = range.getBoundingClientRect().width;\n    const padding = (parseInt(getStyle(cellChild, \"paddingLeft\"), 10) || 0) + (parseInt(getStyle(cellChild, \"paddingRight\"), 10) || 0);\n    if (rangeWidth + padding > cellChild.offsetWidth || cellChild.scrollWidth > cellChild.offsetWidth) {\n      createTablePopper(cell, cell.innerText || cell.textContent, {\n        placement: \"top\",\n        strategy: \"fixed\"\n      }, row.tooltipEffect);\n    }\n  };\n  const handleCellMouseLeave = event => {\n    const cell = getCell(event);\n    if (!cell) return;\n    const oldHoverState = parent.hoverState;\n    parent.emit(\"cell-mouse-leave\", oldHoverState == null ? void 0 : oldHoverState.row, oldHoverState == null ? void 0 : oldHoverState.column, oldHoverState == null ? void 0 : oldHoverState.cell, event);\n  };\n  return {\n    handleDoubleClick,\n    handleClick,\n    handleContextMenu,\n    handleMouseEnter,\n    handleMouseLeave,\n    handleCellMouseEnter,\n    handleCellMouseLeave,\n    tooltipContent,\n    tooltipTrigger\n  };\n}\nexport { useEvents as default };","map":{"version":3,"names":["useEvents","props","instance","getCurrentInstance","parent","tooltipContent","ref","tooltipTrigger","h","handleEvent","event","row","name","table","cell","getCell","column","getColumnByCell","columns","store","states","value","emit","handleDoubleClick","handleClick","commit","handleContextMenu","handleMouseEnter","debounce","index","handleMouseLeave","handleCellMouseEnter","hoverState","cellChild","target","querySelector","hasClass","childNodes","length","range","document","createRange","setStart","setEnd","rangeWidth","getBoundingClientRect","width","padding","parseInt","getStyle","offsetWidth","scrollWidth","createTablePopper","innerText","textContent","placement","strategy","tooltipEffect","handleCellMouseLeave","oldHoverState"],"sources":["../../../../../../../packages/components/table/src/table-body/events-helper.ts"],"sourcesContent":["import { getCurrentInstance, ref, h } from 'vue'\nimport debounce from 'lodash/debounce'\nimport { getStyle, hasClass } from '@element-plus/utils/dom'\nimport { createTablePopper, getCell, getColumnByCell } from '../util'\n\nimport type { TableColumnCtx } from '../table-column/defaults'\nimport type { Table } from '../table/defaults'\nimport type { TableBodyProps } from './defaults'\n\nfunction useEvents<T>(props: Partial<TableBodyProps<T>>) {\n  const instance = getCurrentInstance()\n  const parent = instance.parent as Table<T>\n  const tooltipContent = ref('')\n  const tooltipTrigger = ref(h('div'))\n  const handleEvent = (event: Event, row: T, name: string) => {\n    const table = parent\n    const cell = getCell(event)\n    let column: TableColumnCtx<T>\n    if (cell) {\n      column = getColumnByCell(\n        {\n          columns: props.store.states.columns.value,\n        },\n        cell\n      )\n      if (column) {\n        table.emit(`cell-${name}`, row, column, cell, event)\n      }\n    }\n    table.emit(`row-${name}`, row, column, event)\n  }\n  const handleDoubleClick = (event: Event, row: T) => {\n    handleEvent(event, row, 'dblclick')\n  }\n  const handleClick = (event: Event, row: T) => {\n    props.store.commit('setCurrentRow', row)\n    handleEvent(event, row, 'click')\n  }\n  const handleContextMenu = (event: Event, row: T) => {\n    handleEvent(event, row, 'contextmenu')\n  }\n  const handleMouseEnter = debounce(function (index: number) {\n    props.store.commit('setHoverRow', index)\n  }, 30)\n  const handleMouseLeave = debounce(function () {\n    props.store.commit('setHoverRow', null)\n  }, 30)\n  const handleCellMouseEnter = (\n    event: MouseEvent,\n    row: T & { tooltipEffect: string }\n  ) => {\n    const table = parent\n    const cell = getCell(event)\n\n    if (cell) {\n      const column = getColumnByCell(\n        {\n          columns: props.store.states.columns.value,\n        },\n        cell\n      )\n      const hoverState = (table.hoverState = { cell, column, row })\n      table.emit(\n        'cell-mouse-enter',\n        hoverState.row,\n        hoverState.column,\n        hoverState.cell,\n        event\n      )\n    }\n\n    // 判断是否text-overflow, 如果是就显示tooltip\n    const cellChild = (event.target as HTMLElement).querySelector(\n      '.cell'\n    ) as HTMLElement\n    if (!(hasClass(cellChild, 'el-tooltip') && cellChild.childNodes.length)) {\n      return\n    }\n    // use range width instead of scrollWidth to determine whether the text is overflowing\n    // to address a potential FireFox bug: https://bugzilla.mozilla.org/show_bug.cgi?id=1074543#c3\n    const range = document.createRange()\n    range.setStart(cellChild, 0)\n    range.setEnd(cellChild, cellChild.childNodes.length)\n    const rangeWidth = range.getBoundingClientRect().width\n    const padding =\n      (parseInt(getStyle(cellChild, 'paddingLeft'), 10) || 0) +\n      (parseInt(getStyle(cellChild, 'paddingRight'), 10) || 0)\n    if (\n      rangeWidth + padding > cellChild.offsetWidth ||\n      cellChild.scrollWidth > cellChild.offsetWidth\n    ) {\n      createTablePopper(\n        cell,\n        cell.innerText || cell.textContent,\n        {\n          placement: 'top',\n          strategy: 'fixed',\n        },\n        row.tooltipEffect\n      )\n    }\n  }\n  const handleCellMouseLeave = (event) => {\n    const cell = getCell(event)\n    if (!cell) return\n\n    const oldHoverState = parent.hoverState\n    parent.emit(\n      'cell-mouse-leave',\n      oldHoverState?.row,\n      oldHoverState?.column,\n      oldHoverState?.cell,\n      event\n    )\n  }\n\n  return {\n    handleDoubleClick,\n    handleClick,\n    handleContextMenu,\n    handleMouseEnter,\n    handleMouseLeave,\n    handleCellMouseEnter,\n    handleCellMouseLeave,\n    tooltipContent,\n    tooltipTrigger,\n  }\n}\n\nexport default useEvents\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}