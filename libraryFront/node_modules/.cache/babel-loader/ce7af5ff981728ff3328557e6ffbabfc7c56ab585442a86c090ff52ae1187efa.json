{"ast":null,"code":"import { getCurrentInstance, computed } from 'vue';\nconst useProp = name => {\n  const vm = getCurrentInstance();\n  return computed(() => {\n    var _a, _b;\n    return (_b = (_a = vm.proxy) == null ? void 0 : _a.$props[name]) != null ? _b : void 0;\n  });\n};\nexport { useProp };","map":{"version":3,"names":["useProp","name","vm","getCurrentInstance","computed","_a","_b","proxy","$props"],"sources":["../../../../../packages/hooks/use-prop/index.ts"],"sourcesContent":["import { getCurrentInstance, computed } from 'vue'\nimport type { ComputedRef } from 'vue'\n\nexport const useProp = <T>(name: string): ComputedRef<T | undefined> => {\n  const vm = getCurrentInstance()!\n  return computed(() => vm.proxy?.$props[name] ?? undefined)\n}\n"],"mappings":";MAGaA,OAAA,GAAcC,IAAA,IAA6C;EACtE,MAAMC,EAAA,GAAKC,kBAAA;EACX,OAAOC,QAAA,CAAS,MAAG;IALrB,IAAAC,EAAA,EAAAC,EAAA;IAKwB,QAAAA,EAAA,IAAAD,EAAA,GAAAH,EAAA,CAAGK,KAAA,KAAH,gBAAAF,EAAA,CAAUG,MAAA,CAAOP,IAAA,MAAjB,OAAAK,EAAA,GAA0B;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}