{"ast":null,"code":"import { defineComponent, onMounted, onBeforeUnmount, onActivated, onDeactivated, renderSlot, toDisplayString, withDirectives, h, Fragment, Teleport } from 'vue';\nimport '../../../directives/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport usePopper from './use-popper/index.mjs';\nimport popperDefaultProps from './use-popper/defaults.mjs';\nimport './renderers/index.mjs';\nimport renderArrow from './renderers/arrow.mjs';\nimport renderPopper from './renderers/popper.mjs';\nimport renderTrigger from './renderers/trigger.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nconst compName = \"ElPopper\";\nconst UPDATE_VISIBLE_EVENT = \"update:visible\";\nvar script = defineComponent({\n  name: compName,\n  props: popperDefaultProps,\n  emits: [UPDATE_VISIBLE_EVENT, \"after-enter\", \"after-leave\", \"before-enter\", \"before-leave\"],\n  setup(props, ctx) {\n    if (!ctx.slots.trigger) {\n      throwError(compName, \"Trigger must be provided\");\n    }\n    const popperStates = usePopper(props, ctx);\n    const forceDestroy = () => popperStates.doDestroy(true);\n    onMounted(popperStates.initializePopper);\n    onBeforeUnmount(forceDestroy);\n    onActivated(popperStates.initializePopper);\n    onDeactivated(forceDestroy);\n    return popperStates;\n  },\n  render() {\n    var _a;\n    const {\n      $slots,\n      appendToBody,\n      class: kls,\n      style,\n      effect,\n      hide,\n      onPopperMouseEnter,\n      onPopperMouseLeave,\n      onAfterEnter,\n      onAfterLeave,\n      onBeforeEnter,\n      onBeforeLeave,\n      popperClass,\n      popperId,\n      popperStyle,\n      pure,\n      showArrow,\n      transition,\n      visibility,\n      stopPopperMouseEvent\n    } = this;\n    const isManual = this.isManualMode();\n    const arrow = renderArrow(showArrow);\n    const popper = renderPopper({\n      effect,\n      name: transition,\n      popperClass,\n      popperId,\n      popperStyle,\n      pure,\n      stopPopperMouseEvent,\n      onMouseenter: onPopperMouseEnter,\n      onMouseleave: onPopperMouseLeave,\n      onAfterEnter,\n      onAfterLeave,\n      onBeforeEnter,\n      onBeforeLeave,\n      visibility\n    }, [renderSlot($slots, \"default\", {}, () => {\n      return [toDisplayString(this.content)];\n    }), arrow]);\n    const _t = (_a = $slots.trigger) == null ? void 0 : _a.call($slots);\n    const triggerProps = {\n      \"aria-describedby\": popperId,\n      class: kls,\n      style,\n      ref: \"triggerRef\",\n      ...this.events\n    };\n    const trigger = isManual ? renderTrigger(_t, triggerProps) : withDirectives(renderTrigger(_t, triggerProps), [[ClickOutside, hide]]);\n    return h(Fragment, null, [trigger, h(Teleport, {\n      to: \"body\",\n      disabled: !appendToBody\n    }, [popper])]);\n  }\n});\nexport { script as default };","map":{"version":3,"names":["compName","UPDATE_VISIBLE_EVENT","script","defineComponent","name","props","popperDefaultProps","emits","setup","ctx","slots","trigger","throwError","popperStates","usePopper","forceDestroy","doDestroy","onMounted","initializePopper","onBeforeUnmount","onActivated","onDeactivated","render","$slots","appendToBody","class","kls","style","effect","hide","onPopperMouseEnter","onPopperMouseLeave","onAfterEnter","onAfterLeave","onBeforeEnter","onBeforeLeave","popperClass","popperId","popperStyle","pure","showArrow","transition","visibility","stopPopperMouseEvent","isManual","isManualMode","arrow","renderArrow","popper","renderPopper","onMouseenter","onMouseleave","renderSlot","toDisplayString","content","_t","_a","call","triggerProps","ref","events","renderTrigger","withDirectives","ClickOutside","h","Fragment","Teleport","to","disabled"],"sources":["../../../../../../packages/components/popper/src/index.vue"],"sourcesContent":["<script lang=\"ts\">\nimport {\n  defineComponent,\n  Fragment,\n  Teleport,\n  onBeforeUnmount,\n  onDeactivated,\n  onActivated,\n  onMounted,\n  renderSlot,\n  toDisplayString,\n  withDirectives,\n  h,\n} from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport { throwError } from '@element-plus/utils/error'\n\nimport usePopper from './use-popper/index'\nimport defaultProps from './use-popper/defaults'\nimport { renderPopper, renderTrigger, renderArrow } from './renderers'\n\nconst compName = 'ElPopper'\nconst UPDATE_VISIBLE_EVENT = 'update:visible'\n\nexport default defineComponent({\n  name: compName,\n  props: defaultProps,\n  emits: [\n    UPDATE_VISIBLE_EVENT,\n    'after-enter',\n    'after-leave',\n    'before-enter',\n    'before-leave',\n  ],\n  setup(props, ctx) {\n    if (!ctx.slots.trigger) {\n      throwError(compName, 'Trigger must be provided')\n    }\n    // this is a reference that we need to pass down to child component\n    // to obtain the child instance\n\n    // return usePopper(props as IPopperOptions, ctx as SetupContext)\n    const popperStates = usePopper(props, ctx)\n\n    const forceDestroy = () => popperStates.doDestroy(true)\n    onMounted(popperStates.initializePopper)\n    onBeforeUnmount(forceDestroy)\n    onActivated(popperStates.initializePopper)\n    onDeactivated(forceDestroy)\n\n    return popperStates\n  },\n\n  render() {\n    const {\n      $slots,\n      appendToBody,\n      class: kls,\n      style,\n      effect,\n      hide,\n      onPopperMouseEnter,\n      onPopperMouseLeave,\n      onAfterEnter,\n      onAfterLeave,\n      onBeforeEnter,\n      onBeforeLeave,\n      popperClass,\n      popperId,\n      popperStyle,\n      pure,\n      showArrow,\n      transition,\n      visibility,\n      stopPopperMouseEvent,\n    } = this\n\n    const isManual = this.isManualMode()\n    const arrow = renderArrow(showArrow)\n    const popper = renderPopper(\n      {\n        effect,\n        name: transition,\n        popperClass,\n        popperId,\n        popperStyle,\n        pure,\n        stopPopperMouseEvent,\n        onMouseenter: onPopperMouseEnter,\n        onMouseleave: onPopperMouseLeave,\n        onAfterEnter,\n        onAfterLeave,\n        onBeforeEnter,\n        onBeforeLeave,\n        visibility,\n      },\n      [\n        renderSlot($slots, 'default', {}, () => {\n          return [toDisplayString(this.content)]\n        }),\n        arrow,\n      ]\n    )\n\n    const _t = $slots.trigger?.()\n\n    const triggerProps = {\n      'aria-describedby': popperId,\n      class: kls,\n      style,\n      ref: 'triggerRef',\n      ...this.events,\n    }\n\n    const trigger = isManual\n      ? renderTrigger(_t, triggerProps)\n      : withDirectives(renderTrigger(_t, triggerProps), [[ClickOutside, hide]])\n\n    return h(Fragment, null, [\n      trigger,\n      h(\n        Teleport as any, // Vue did not support createVNode for Teleport\n        {\n          to: 'body',\n          disabled: !appendToBody,\n        },\n        [popper]\n      ),\n    ])\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;AAqBA,MAAMA,QAAA,GAAW;AACjB,MAAMC,oBAAA,GAAuB;AAE7B,IAAAC,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAMJ,QAAA;EACNK,KAAA,EAAOC,kBAAA;EACPC,KAAA,EAAO,CACLN,oBAAA,EACA,eACA,eACA,gBACA;EAEFO,MAAMH,KAAA,EAAOI,GAAA,EAAK;IAChB,IAAI,CAACA,GAAA,CAAIC,KAAA,CAAMC,OAAA,EAAS;MACtBC,UAAA,CAAWZ,QAAA,EAAU;IAAA;IAMvB,MAAMa,YAAA,GAAeC,SAAA,CAAUT,KAAA,EAAOI,GAAA;IAEtC,MAAMM,YAAA,GAAeA,CAAA,KAAMF,YAAA,CAAaG,SAAA,CAAU;IAClDC,SAAA,CAAUJ,YAAA,CAAaK,gBAAA;IACvBC,eAAA,CAAgBJ,YAAA;IAChBK,WAAA,CAAYP,YAAA,CAAaK,gBAAA;IACzBG,aAAA,CAAcN,YAAA;IAEd,OAAOF,YAAA;EAAA;EAGTS,OAAA,EAAS;;IACP,MAAM;MACJC,MAAA;MACAC,YAAA;MACAC,KAAA,EAAOC,GAAA;MACPC,KAAA;MACAC,MAAA;MACAC,IAAA;MACAC,kBAAA;MACAC,kBAAA;MACAC,YAAA;MACAC,YAAA;MACAC,aAAA;MACAC,aAAA;MACAC,WAAA;MACAC,QAAA;MACAC,WAAA;MACAC,IAAA;MACAC,SAAA;MACAC,UAAA;MACAC,UAAA;MACAC;IAAA,IACE;IAEJ,MAAMC,QAAA,GAAW,KAAKC,YAAA;IACtB,MAAMC,KAAA,GAAQC,WAAA,CAAYP,SAAA;IAC1B,MAAMQ,MAAA,GAASC,YAAA,CACb;MACErB,MAAA;MACAxB,IAAA,EAAMqC,UAAA;MACNL,WAAA;MACAC,QAAA;MACAC,WAAA;MACAC,IAAA;MACAI,oBAAA;MACAO,YAAA,EAAcpB,kBAAA;MACdqB,YAAA,EAAcpB,kBAAA;MACdC,YAAA;MACAC,YAAA;MACAC,aAAA;MACAC,aAAA;MACAO;IAAA,GAEF,CACEU,UAAA,CAAW7B,MAAA,EAAQ,WAAW,IAAI,MAAM;MACtC,OAAO,CAAC8B,eAAA,CAAgB,KAAKC,OAAA;IAAA,IAE/BR,KAAA;IAIJ,MAAMS,EAAA,GAAK,CAAAC,EAAA,GAAAjC,MAAA,CAAOZ,OAAA,KAAP,gBAAA6C,EAAA,CAAAC,IAAA,CAAAlC,MAAA;IAEX,MAAMmC,YAAA,GAAe;MACnB,oBAAoBrB,QAAA;MACpBZ,KAAA,EAAOC,GAAA;MACPC,KAAA;MACAgC,GAAA,EAAK;MAAA,GACF,KAAKC;IAAA;IAGV,MAAMjD,OAAA,GAAUiC,QAAA,GACZiB,aAAA,CAAcN,EAAA,EAAIG,YAAA,IAClBI,cAAA,CAAeD,aAAA,CAAcN,EAAA,EAAIG,YAAA,GAAe,CAAC,CAACK,YAAA,EAAclC,IAAA;IAEpE,OAAOmC,CAAA,CAAEC,QAAA,EAAU,MAAM,CACvBtD,OAAA,EACAqD,CAAA,CACEE,QAAA,EACA;MACEC,EAAA,EAAI;MACJC,QAAA,EAAU,CAAC5C;IAAA,GAEb,CAACwB,MAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}