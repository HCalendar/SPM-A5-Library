{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, getCurrentInstance, ref, computed, onBeforeMount, onMounted, onBeforeUnmount, Fragment, h } from 'vue';\nimport { ElCheckbox } from '../../../checkbox/index.mjs';\nimport { cellStarts } from '../config.mjs';\nimport { mergeOptions, compose } from '../util.mjs';\nimport useWatcher from './watcher-helper.mjs';\nimport useRender from './render-helper.mjs';\nimport defaultProps from './defaults.mjs';\nlet columnIdSeed = 1;\nvar ElTableColumn = defineComponent({\n  name: \"ElTableColumn\",\n  components: {\n    ElCheckbox\n  },\n  props: defaultProps,\n  setup(props, {\n    slots\n  }) {\n    const instance = getCurrentInstance();\n    const columnConfig = ref({});\n    const owner = computed(() => {\n      let parent2 = instance.parent;\n      while (parent2 && !parent2.tableId) {\n        parent2 = parent2.parent;\n      }\n      return parent2;\n    });\n    const {\n      registerNormalWatchers,\n      registerComplexWatchers\n    } = useWatcher(owner, props);\n    const {\n      columnId,\n      isSubColumn,\n      realHeaderAlign,\n      columnOrTableParent,\n      setColumnWidth,\n      setColumnForcedProps,\n      setColumnRenders,\n      getPropsData,\n      getColumnElIndex,\n      realAlign\n    } = useRender(props, slots, owner);\n    const parent = columnOrTableParent.value;\n    columnId.value = `${parent.tableId || parent.columnId}_column_${columnIdSeed++}`;\n    onBeforeMount(() => {\n      isSubColumn.value = owner.value !== parent;\n      const type = props.type || \"default\";\n      const sortable = props.sortable === \"\" ? true : props.sortable;\n      const defaults = {\n        ...cellStarts[type],\n        id: columnId.value,\n        type,\n        property: props.prop || props.property,\n        align: realAlign,\n        headerAlign: realHeaderAlign,\n        showOverflowTooltip: props.showOverflowTooltip || props.showTooltipWhenOverflow,\n        filterable: props.filters || props.filterMethod,\n        filteredValue: [],\n        filterPlacement: \"\",\n        isColumnGroup: false,\n        filterOpened: false,\n        sortable,\n        index: props.index,\n        rawColumnKey: instance.vnode.key\n      };\n      const basicProps = [\"columnKey\", \"label\", \"className\", \"labelClassName\", \"type\", \"renderHeader\", \"formatter\", \"fixed\", \"resizable\"];\n      const sortProps = [\"sortMethod\", \"sortBy\", \"sortOrders\"];\n      const selectProps = [\"selectable\", \"reserveSelection\"];\n      const filterProps = [\"filterMethod\", \"filters\", \"filterMultiple\", \"filterOpened\", \"filteredValue\", \"filterPlacement\"];\n      let column = getPropsData(basicProps, sortProps, selectProps, filterProps);\n      column = mergeOptions(defaults, column);\n      const chains = compose(setColumnRenders, setColumnWidth, setColumnForcedProps);\n      column = chains(column);\n      columnConfig.value = column;\n      registerNormalWatchers();\n      registerComplexWatchers();\n    });\n    onMounted(() => {\n      var _a;\n      const parent2 = columnOrTableParent.value;\n      const children = isSubColumn.value ? parent2.vnode.el.children : (_a = parent2.refs.hiddenColumns) == null ? void 0 : _a.children;\n      const getColumnIndex = () => getColumnElIndex(children || [], instance.vnode.el);\n      columnConfig.value.getColumnIndex = getColumnIndex;\n      const columnIndex = getColumnIndex();\n      columnIndex > -1 && owner.value.store.commit(\"insertColumn\", columnConfig.value, isSubColumn.value ? parent2.columnConfig.value : null);\n    });\n    onBeforeUnmount(() => {\n      owner.value.store.commit(\"removeColumn\", columnConfig.value, isSubColumn.value ? parent.columnConfig.value : null);\n    });\n    instance.columnId = columnId.value;\n    instance.columnConfig = columnConfig;\n    return;\n  },\n  render() {\n    var _a, _b, _c;\n    let children = [];\n    try {\n      const renderDefault = (_b = (_a = this.$slots).default) == null ? void 0 : _b.call(_a, {\n        row: {},\n        column: {},\n        $index: -1\n      });\n      if (renderDefault instanceof Array) {\n        for (const childNode of renderDefault) {\n          if (((_c = childNode.type) == null ? void 0 : _c.name) === \"ElTableColumn\" || childNode.shapeFlag & 2) {\n            children.push(childNode);\n          } else if (childNode.type === Fragment && childNode.children instanceof Array) {\n            children.push(...childNode.children);\n          }\n        }\n      }\n    } catch (e) {\n      children = [];\n    }\n    return h(\"div\", children);\n  }\n});\nexport { ElTableColumn as default };","map":{"version":3,"names":["columnIdSeed","ElTableColumn","defineComponent","name","components","ElCheckbox","props","defaultProps","setup","slots","instance","getCurrentInstance","columnConfig","ref","owner","computed","parent2","parent","tableId","registerNormalWatchers","registerComplexWatchers","useWatcher","columnId","isSubColumn","realHeaderAlign","columnOrTableParent","setColumnWidth","setColumnForcedProps","setColumnRenders","getPropsData","getColumnElIndex","realAlign","useRender","value","onBeforeMount","type","sortable","defaults","cellStarts","id","property","prop","align","headerAlign","showOverflowTooltip","showTooltipWhenOverflow","filterable","filters","filterMethod","filteredValue","filterPlacement","isColumnGroup","filterOpened","index","rawColumnKey","vnode","key","basicProps","sortProps","selectProps","filterProps","column","mergeOptions","chains","compose","onMounted","_a","children","el","refs","hiddenColumns","getColumnIndex","columnIndex","store","commit","onBeforeUnmount","render","_b","_c","renderDefault","$slots","default","call","row","$index","Array","childNode","shapeFlag","push","Fragment","e","h"],"sources":["../../../../../../../packages/components/table/src/table-column/index.ts"],"sourcesContent":["import {\n  defineComponent,\n  ref,\n  onBeforeMount,\n  onMounted,\n  computed,\n  getCurrentInstance,\n  h,\n  onBeforeUnmount,\n  Fragment,\n} from 'vue'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { cellStarts } from '../config'\nimport { mergeOptions, compose } from '../util'\nimport useWatcher from './watcher-helper'\nimport useRender from './render-helper'\nimport defaultProps from './defaults'\nimport type { TableColumn, TableColumnCtx } from './defaults'\n\nimport type { DefaultRow } from '../table/defaults'\n\nlet columnIdSeed = 1\n\nexport default defineComponent({\n  name: 'ElTableColumn',\n  components: {\n    ElCheckbox,\n  },\n  props: defaultProps,\n  setup(props, { slots }) {\n    const instance = getCurrentInstance() as TableColumn<DefaultRow>\n    const columnConfig = ref<Partial<TableColumnCtx<DefaultRow>>>({})\n    const owner = computed(() => {\n      let parent = instance.parent as any\n      while (parent && !parent.tableId) {\n        parent = parent.parent\n      }\n      return parent\n    })\n\n    const { registerNormalWatchers, registerComplexWatchers } = useWatcher(\n      owner,\n      props\n    )\n    const {\n      columnId,\n      isSubColumn,\n      realHeaderAlign,\n      columnOrTableParent,\n      setColumnWidth,\n      setColumnForcedProps,\n      setColumnRenders,\n      getPropsData,\n      getColumnElIndex,\n      realAlign,\n    } = useRender(props as unknown as TableColumnCtx<unknown>, slots, owner)\n\n    const parent = columnOrTableParent.value\n    columnId.value = `${\n      parent.tableId || parent.columnId\n    }_column_${columnIdSeed++}`\n    onBeforeMount(() => {\n      isSubColumn.value = owner.value !== parent\n\n      const type = props.type || 'default'\n      const sortable = props.sortable === '' ? true : props.sortable\n      const defaults = {\n        ...cellStarts[type],\n        id: columnId.value,\n        type,\n        property: props.prop || props.property,\n        align: realAlign,\n        headerAlign: realHeaderAlign,\n        showOverflowTooltip:\n          props.showOverflowTooltip || props.showTooltipWhenOverflow,\n        // filter 相关属性\n        filterable: props.filters || props.filterMethod,\n        filteredValue: [],\n        filterPlacement: '',\n        isColumnGroup: false,\n        filterOpened: false,\n        // sort 相关属性\n        sortable,\n        // index 列\n        index: props.index,\n        // <el-table-column key=\"xxx\" />\n        rawColumnKey: instance.vnode.key,\n      }\n\n      const basicProps = [\n        'columnKey',\n        'label',\n        'className',\n        'labelClassName',\n        'type',\n        'renderHeader',\n        'formatter',\n        'fixed',\n        'resizable',\n      ]\n      const sortProps = ['sortMethod', 'sortBy', 'sortOrders']\n      const selectProps = ['selectable', 'reserveSelection']\n      const filterProps = [\n        'filterMethod',\n        'filters',\n        'filterMultiple',\n        'filterOpened',\n        'filteredValue',\n        'filterPlacement',\n      ]\n\n      let column = getPropsData(basicProps, sortProps, selectProps, filterProps)\n\n      column = mergeOptions(defaults, column)\n      // 注意 compose 中函数执行的顺序是从右到左\n      const chains = compose(\n        setColumnRenders,\n        setColumnWidth,\n        setColumnForcedProps\n      )\n      column = chains(column)\n      columnConfig.value = column\n\n      // 注册 watcher\n      registerNormalWatchers()\n      registerComplexWatchers()\n    })\n    onMounted(() => {\n      const parent = columnOrTableParent.value\n      const children = isSubColumn.value\n        ? parent.vnode.el.children\n        : parent.refs.hiddenColumns?.children\n      const getColumnIndex = () =>\n        getColumnElIndex(children || [], instance.vnode.el)\n      columnConfig.value.getColumnIndex = getColumnIndex\n      const columnIndex = getColumnIndex()\n      columnIndex > -1 &&\n        owner.value.store.commit(\n          'insertColumn',\n          columnConfig.value,\n          isSubColumn.value ? parent.columnConfig.value : null\n        )\n    })\n    onBeforeUnmount(() => {\n      owner.value.store.commit(\n        'removeColumn',\n        columnConfig.value,\n        isSubColumn.value ? parent.columnConfig.value : null\n      )\n    })\n    instance.columnId = columnId.value\n\n    // eslint-disable-next-line\n    instance.columnConfig = columnConfig\n    return\n  },\n  render() {\n    let children = []\n    try {\n      const renderDefault = this.$slots.default?.({\n        row: {},\n        column: {},\n        $index: -1,\n      })\n      if (renderDefault instanceof Array) {\n        for (const childNode of renderDefault) {\n          if (\n            childNode.type?.name === 'ElTableColumn' ||\n            childNode.shapeFlag & 2\n          ) {\n            children.push(childNode)\n          } else if (\n            childNode.type === Fragment &&\n            childNode.children instanceof Array\n          ) {\n            children.push(...childNode.children)\n          }\n        }\n      }\n    } catch {\n      children = []\n    }\n    return h('div', children)\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}