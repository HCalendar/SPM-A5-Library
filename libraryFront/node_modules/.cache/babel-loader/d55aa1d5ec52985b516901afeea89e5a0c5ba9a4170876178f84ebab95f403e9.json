{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getCurrentInstance, computed, watch } from 'vue';\nconst CHECKED_CHANGE_EVENT = \"checked-change\";\nconst useCheckProps = {\n  data: {\n    type: Array,\n    default() {\n      return [];\n    }\n  },\n  optionRender: Function,\n  placeholder: String,\n  title: String,\n  filterable: Boolean,\n  format: Object,\n  filterMethod: Function,\n  defaultChecked: Array,\n  props: Object\n};\nconst useCheck = (props, panelState) => {\n  const {\n    emit\n  } = getCurrentInstance();\n  const labelProp = computed(() => props.props.label || \"label\");\n  const keyProp = computed(() => props.props.key || \"key\");\n  const disabledProp = computed(() => props.props.disabled || \"disabled\");\n  const filteredData = computed(() => {\n    return props.data.filter(item => {\n      if (typeof props.filterMethod === \"function\") {\n        return props.filterMethod(panelState.query, item);\n      } else {\n        const label = item[labelProp.value] || item[keyProp.value].toString();\n        return label.toLowerCase().includes(panelState.query.toLowerCase());\n      }\n    });\n  });\n  const checkableData = computed(() => {\n    return filteredData.value.filter(item => !item[disabledProp.value]);\n  });\n  const checkedSummary = computed(() => {\n    const checkedLength = panelState.checked.length;\n    const dataLength = props.data.length;\n    const {\n      noChecked,\n      hasChecked\n    } = props.format;\n    if (noChecked && hasChecked) {\n      return checkedLength > 0 ? hasChecked.replace(/\\${checked}/g, checkedLength.toString()).replace(/\\${total}/g, dataLength.toString()) : noChecked.replace(/\\${total}/g, dataLength.toString());\n    } else {\n      return `${checkedLength}/${dataLength}`;\n    }\n  });\n  const isIndeterminate = computed(() => {\n    const checkedLength = panelState.checked.length;\n    return checkedLength > 0 && checkedLength < checkableData.value.length;\n  });\n  const updateAllChecked = () => {\n    const checkableDataKeys = checkableData.value.map(item => item[keyProp.value]);\n    panelState.allChecked = checkableDataKeys.length > 0 && checkableDataKeys.every(item => panelState.checked.includes(item));\n  };\n  const handleAllCheckedChange = value => {\n    panelState.checked = value ? checkableData.value.map(item => item[keyProp.value]) : [];\n  };\n  watch(() => panelState.checked, (val, oldVal) => {\n    updateAllChecked();\n    if (panelState.checkChangeByUser) {\n      const movedKeys = val.concat(oldVal).filter(v => !val.includes(v) || !oldVal.includes(v));\n      emit(CHECKED_CHANGE_EVENT, val, movedKeys);\n    } else {\n      emit(CHECKED_CHANGE_EVENT, val);\n      panelState.checkChangeByUser = true;\n    }\n  });\n  watch(checkableData, () => {\n    updateAllChecked();\n  });\n  watch(() => props.data, () => {\n    const checked = [];\n    const filteredDataKeys = filteredData.value.map(item => item[keyProp.value]);\n    panelState.checked.forEach(item => {\n      if (filteredDataKeys.includes(item)) {\n        checked.push(item);\n      }\n    });\n    panelState.checkChangeByUser = false;\n    panelState.checked = checked;\n  });\n  watch(() => props.defaultChecked, (val, oldVal) => {\n    if (oldVal && val.length === oldVal.length && val.every(item => oldVal.includes(item))) return;\n    const checked = [];\n    const checkableDataKeys = checkableData.value.map(item => item[keyProp.value]);\n    val.forEach(item => {\n      if (checkableDataKeys.includes(item)) {\n        checked.push(item);\n      }\n    });\n    panelState.checkChangeByUser = false;\n    panelState.checked = checked;\n  }, {\n    immediate: true\n  });\n  return {\n    labelProp,\n    keyProp,\n    disabledProp,\n    filteredData,\n    checkableData,\n    checkedSummary,\n    isIndeterminate,\n    updateAllChecked,\n    handleAllCheckedChange\n  };\n};\nexport { CHECKED_CHANGE_EVENT, useCheck, useCheckProps };","map":{"version":3,"names":["CHECKED_CHANGE_EVENT","useCheckProps","data","type","Array","default","optionRender","Function","placeholder","String","title","filterable","Boolean","format","Object","filterMethod","defaultChecked","props","useCheck","panelState","emit","getCurrentInstance","labelProp","computed","label","keyProp","key","disabledProp","disabled","filteredData","filter","item","query","value","toString","toLowerCase","includes","checkableData","checkedSummary","checkedLength","checked","length","dataLength","noChecked","hasChecked","replace","isIndeterminate","updateAllChecked","checkableDataKeys","map","allChecked","every","handleAllCheckedChange","watch","val","oldVal","checkChangeByUser","movedKeys","concat","v","filteredDataKeys","forEach","push","immediate"],"sources":["../../../../../../packages/components/transfer/src/useCheck.ts"],"sourcesContent":["import { computed, getCurrentInstance, watch } from 'vue'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { TransferPanelState, Key } from './transfer'\n\nexport const CHECKED_CHANGE_EVENT = 'checked-change'\n\nexport const useCheckProps = {\n  data: {\n    type: Array,\n    default() {\n      return []\n    },\n  },\n  optionRender: Function,\n  placeholder: String,\n  title: String,\n  filterable: Boolean,\n  format: Object,\n  filterMethod: Function,\n  defaultChecked: Array,\n  props: Object,\n}\n\nexport const useCheck = (\n  props: ExtractPropTypes<typeof useCheckProps>,\n  panelState: TransferPanelState\n) => {\n  const { emit } = getCurrentInstance()\n\n  const labelProp = computed(() => props.props.label || 'label')\n\n  const keyProp = computed(() => props.props.key || 'key')\n\n  const disabledProp = computed(() => props.props.disabled || 'disabled')\n\n  const filteredData = computed(() => {\n    return props.data.filter((item) => {\n      if (typeof props.filterMethod === 'function') {\n        return props.filterMethod(panelState.query, item)\n      } else {\n        const label = item[labelProp.value] || item[keyProp.value].toString()\n        return label.toLowerCase().includes(panelState.query.toLowerCase())\n      }\n    })\n  })\n\n  const checkableData = computed(() => {\n    return filteredData.value.filter((item) => !item[disabledProp.value])\n  })\n\n  const checkedSummary = computed(() => {\n    const checkedLength = panelState.checked.length\n    const dataLength = props.data.length\n    const { noChecked, hasChecked } = props.format\n\n    if (noChecked && hasChecked) {\n      return checkedLength > 0\n        ? hasChecked\n            .replace(/\\${checked}/g, checkedLength.toString())\n            .replace(/\\${total}/g, dataLength.toString())\n        : noChecked.replace(/\\${total}/g, dataLength.toString())\n    } else {\n      return `${checkedLength}/${dataLength}`\n    }\n  })\n\n  const isIndeterminate = computed(() => {\n    const checkedLength = panelState.checked.length\n    return checkedLength > 0 && checkedLength < checkableData.value.length\n  })\n\n  const updateAllChecked = () => {\n    const checkableDataKeys = checkableData.value.map(\n      (item) => item[keyProp.value]\n    )\n    panelState.allChecked =\n      checkableDataKeys.length > 0 &&\n      checkableDataKeys.every((item) => panelState.checked.includes(item))\n  }\n\n  const handleAllCheckedChange = (value: Key[]) => {\n    panelState.checked = value\n      ? checkableData.value.map((item) => item[keyProp.value])\n      : []\n  }\n\n  watch(\n    () => panelState.checked,\n    (val, oldVal) => {\n      updateAllChecked()\n\n      if (panelState.checkChangeByUser) {\n        const movedKeys = val\n          .concat(oldVal)\n          .filter((v) => !val.includes(v) || !oldVal.includes(v))\n        emit(CHECKED_CHANGE_EVENT, val, movedKeys)\n      } else {\n        emit(CHECKED_CHANGE_EVENT, val)\n        panelState.checkChangeByUser = true\n      }\n    }\n  )\n\n  watch(checkableData, () => {\n    updateAllChecked()\n  })\n\n  watch(\n    () => props.data,\n    () => {\n      const checked = []\n      const filteredDataKeys = filteredData.value.map(\n        (item) => item[keyProp.value]\n      )\n      panelState.checked.forEach((item) => {\n        if (filteredDataKeys.includes(item)) {\n          checked.push(item)\n        }\n      })\n      panelState.checkChangeByUser = false\n      panelState.checked = checked\n    }\n  )\n\n  watch(\n    () => props.defaultChecked,\n    (val, oldVal) => {\n      if (\n        oldVal &&\n        val.length === oldVal.length &&\n        val.every((item) => oldVal.includes(item))\n      )\n        return\n\n      const checked = []\n      const checkableDataKeys = checkableData.value.map(\n        (item) => item[keyProp.value]\n      )\n\n      val.forEach((item) => {\n        if (checkableDataKeys.includes(item)) {\n          checked.push(item)\n        }\n      })\n      panelState.checkChangeByUser = false\n      panelState.checked = checked\n    },\n    {\n      immediate: true,\n    }\n  )\n\n  return {\n    labelProp,\n    keyProp,\n    disabledProp,\n    filteredData,\n    checkableData,\n    checkedSummary,\n    isIndeterminate,\n    updateAllChecked,\n    handleAllCheckedChange,\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}