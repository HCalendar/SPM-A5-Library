{"ast":null,"code":"import request from \"../utils/request\";\nimport { ElMessage } from \"element-plus\";\nimport SingleComment from \"@/views/SingleComment.vue\";\nexport default {\n  components: {\n    SingleComment\n  },\n  created() {\n    this.title = this.$route.params.bookname;\n    let userStr = sessionStorage.getItem(\"user\") || \"{}\";\n    this.user = JSON.parse(userStr);\n    this.showComment();\n  },\n  data() {\n    return {\n      form: {},\n      title: \"\",\n      comment: \"\",\n      infos: []\n    };\n  },\n  name: 'LComment',\n  methods: {\n    addComment() {\n      this.form.userid = this.user.id;\n      this.form.bookid = this.$route.params.bookid;\n      const currentTime = new Date();\n      this.form.createdtime = currentTime.toLocaleString();\n      this.form.content = this.comment;\n      this.form.username = this.user.username;\n      request.post('http://localhost:8181/comment/insertNew', this.form).then(res => {\n        console.log(res);\n        if (res.code == 0) {\n          ElMessage({\n            message: 'Successfully comment!',\n            type: 'success'\n          });\n          this.clearComment();\n          window.location.reload();\n        } else {\n          ElMessage.error(res.msg);\n        }\n      }).catch(error => {\n        console.error(error); // 打印任何请求错误\n        alert('An error occurred while adding the comment.');\n      });\n    },\n    clearComment() {\n      this.comment = '';\n    },\n    showComment() {\n      request.get('http://localhost:8181/comment/selectByBookId', {\n        params: {\n          bookId: this.$route.params.bookid\n        }\n      }, this.form).then(res => {\n        this.infos = res.data;\n        console.log(res.data);\n      });\n    }\n  }\n};","map":{"version":3,"names":["request","ElMessage","SingleComment","components","created","title","$route","params","bookname","userStr","sessionStorage","getItem","user","JSON","parse","showComment","data","form","comment","infos","name","methods","addComment","userid","id","bookid","currentTime","Date","createdtime","toLocaleString","content","username","post","then","res","console","log","code","message","type","clearComment","window","location","reload","error","msg","catch","alert","get","bookId"],"sources":["G:\\SPM-A5-Library\\libraryFront\\src\\views\\Comment.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-container>\r\n      <el-header>\r\n        <div class=\"content-container\">\r\n          <div class=\"center-text\">Comment</div>\r\n          <div class=\"title\">{{ this.title }}</div>\r\n          <el-button type=\"text\" class=\"right-button\" @click=\"$router.push('/book')\">Return</el-button>\r\n        </div>\r\n      </el-header>\r\n      <el-main>\r\n        <div>\r\n          <el-card style=\"width: 80%; margin-left: 120px; margin-top: 40px; background: papayawhip\" >\r\n            <h2 style=\"padding: 20px\">Add Your Comment</h2>\r\n            <el-form :model=\"form\" ref=\"form\" label-width=\"70px\">\r\n              <el-form-item label=\"\">\r\n                <el-input type=\"textarea\" style=\"width: 90%;\" :rows=\"2\" v-model=\"comment\"></el-input>\r\n              </el-form-item>\r\n            </el-form>\r\n            <div style=\"text-align: center\">\r\n              <el-button type=\"primary\" @click=\"addComment\">Submit</el-button>\r\n            </div>\r\n          </el-card>\r\n        </div>\r\n        <div>\r\n          <SingleComment v-for=\"(item) in infos\" :key=\"item.id\" :info=\"item\"/>\r\n        </div>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport request from \"../utils/request\";\r\nimport {ElMessage} from \"element-plus\";\r\nimport SingleComment from \"@/views/SingleComment.vue\";\r\n\r\nexport default {\r\n  components: {SingleComment},\r\n  created(){\r\n    this.title=this.$route.params.bookname\r\n    let userStr = sessionStorage.getItem(\"user\") ||\"{}\"\r\n    this.user = JSON.parse(userStr)\r\n    this.showComment()\r\n  },\r\n  data(){\r\n    return {\r\n      form:{},\r\n      title:\"\",\r\n      comment:\"\",\r\n      infos:[]\r\n    }\r\n  },\r\n  name: 'LComment',\r\n  methods: {\r\n    addComment(){\r\n      this.form.userid=this.user.id;\r\n      this.form.bookid=this.$route.params.bookid;\r\n      const currentTime = new Date();\r\n      this.form.createdtime=currentTime.toLocaleString();\r\n      this.form.content=this.comment;\r\n      this.form.username=this.user.username;\r\n\r\n      request.post('http://localhost:8181/comment/insertNew', this.form).then(res => {\r\n        console.log(res);\r\n        if (res.code==0) {\r\n          ElMessage({\r\n            message: 'Successfully comment!',\r\n            type: 'success',\r\n          })\r\n          this.clearComment()\r\n          window.location.reload()\r\n        } else {\r\n          ElMessage.error(res.msg)\r\n        }\r\n      }).catch(error => {\r\n        console.error(error); // 打印任何请求错误\r\n        alert('An error occurred while adding the comment.');\r\n      })\r\n    },\r\n    clearComment(){\r\n      this.comment=''\r\n    },\r\n    showComment(){\r\n      request.get('http://localhost:8181/comment/selectByBookId',{\r\n        params:{\r\n          bookId:this.$route.params.bookid\r\n        }\r\n      },this.form).then(res => {\r\n        this.infos = res.data;\r\n        console.log(res.data);\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.content-container {\r\n  display: flex;\r\n  align-items: center; /* 垂直居中 */\r\n  justify-content: center; /* 水平居中，但是这里的中心指的是内容容器本身的中心，而不是页面中心 */\r\n}\r\n.center-text {\r\n  flex-shrink: 0;\r\n  margin-right: 10px;\r\n  line-height:1.5;\r\n  font-size:50px;\r\n  font-weight: bold;\r\n}\r\n.right-button{\r\n  margin-left: auto;\r\n}\r\n.title{\r\n  font-size:20px;\r\n  font-weight: bold;\r\n  color:grey;\r\n}\r\n</style>\r\n"],"mappings":"AAkCA,OAAOA,OAAM,MAAO,kBAAkB;AACtC,SAAQC,SAAS,QAAO,cAAc;AACtC,OAAOC,aAAY,MAAO,2BAA2B;AAErD,eAAe;EACbC,UAAU,EAAE;IAACD;EAAa,CAAC;EAC3BE,OAAOA,CAAA,EAAE;IACP,IAAI,CAACC,KAAK,GAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,QAAO;IACrC,IAAIC,OAAM,GAAIC,cAAc,CAACC,OAAO,CAAC,MAAM,KAAI,IAAG;IAClD,IAAI,CAACC,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACL,OAAO;IAC9B,IAAI,CAACM,WAAW,CAAC;EACnB,CAAC;EACDC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,IAAI,EAAC,CAAC,CAAC;MACPZ,KAAK,EAAC,EAAE;MACRa,OAAO,EAAC,EAAE;MACVC,KAAK,EAAC;IACR;EACF,CAAC;EACDC,IAAI,EAAE,UAAU;EAChBC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAE;MACV,IAAI,CAACL,IAAI,CAACM,MAAM,GAAC,IAAI,CAACX,IAAI,CAACY,EAAE;MAC7B,IAAI,CAACP,IAAI,CAACQ,MAAM,GAAC,IAAI,CAACnB,MAAM,CAACC,MAAM,CAACkB,MAAM;MAC1C,MAAMC,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC;MAC9B,IAAI,CAACV,IAAI,CAACW,WAAW,GAACF,WAAW,CAACG,cAAc,CAAC,CAAC;MAClD,IAAI,CAACZ,IAAI,CAACa,OAAO,GAAC,IAAI,CAACZ,OAAO;MAC9B,IAAI,CAACD,IAAI,CAACc,QAAQ,GAAC,IAAI,CAACnB,IAAI,CAACmB,QAAQ;MAErC/B,OAAO,CAACgC,IAAI,CAAC,yCAAyC,EAAE,IAAI,CAACf,IAAI,CAAC,CAACgB,IAAI,CAACC,GAAE,IAAK;QAC7EC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAIA,GAAG,CAACG,IAAI,IAAE,CAAC,EAAE;UACfpC,SAAS,CAAC;YACRqC,OAAO,EAAE,uBAAuB;YAChCC,IAAI,EAAE;UACR,CAAC;UACD,IAAI,CAACC,YAAY,CAAC;UAClBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;QACzB,OAAO;UACL1C,SAAS,CAAC2C,KAAK,CAACV,GAAG,CAACW,GAAG;QACzB;MACF,CAAC,CAAC,CAACC,KAAK,CAACF,KAAI,IAAK;QAChBT,OAAO,CAACS,KAAK,CAACA,KAAK,CAAC,EAAE;QACtBG,KAAK,CAAC,6CAA6C,CAAC;MACtD,CAAC;IACH,CAAC;IACDP,YAAYA,CAAA,EAAE;MACZ,IAAI,CAACtB,OAAO,GAAC,EAAC;IAChB,CAAC;IACDH,WAAWA,CAAA,EAAE;MACXf,OAAO,CAACgD,GAAG,CAAC,8CAA8C,EAAC;QACzDzC,MAAM,EAAC;UACL0C,MAAM,EAAC,IAAI,CAAC3C,MAAM,CAACC,MAAM,CAACkB;QAC5B;MACF,CAAC,EAAC,IAAI,CAACR,IAAI,CAAC,CAACgB,IAAI,CAACC,GAAE,IAAK;QACvB,IAAI,CAACf,KAAI,GAAIe,GAAG,CAAClB,IAAI;QACrBmB,OAAO,CAACC,GAAG,CAACF,GAAG,CAAClB,IAAI,CAAC;MACvB,CAAC;IACH;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}