{"ast":null,"code":"import { resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createVNode, withCtx, createElementVNode, normalizeStyle, toDisplayString, createBlock, createCommentVNode, Transition, Fragment, renderList, withKeys, vModelText, createSlots, resolveDynamicComponent, vShow, renderSlot } from 'vue';\nconst _hoisted_1 = {\n  class: \"select-trigger\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"el-select__tags-text\"\n};\nconst _hoisted_4 = [\"disabled\", \"autocomplete\"];\nconst _hoisted_5 = {\n  style: {\n    \"height\": \"100%\",\n    \"display\": \"flex\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\"\n  }\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"el-select-dropdown__empty\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = resolveComponent(\"el-tag\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_input = resolveComponent(\"el-input\");\n  const _component_el_option = resolveComponent(\"el-option\");\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  const _component_el_select_menu = resolveComponent(\"el-select-menu\");\n  const _component_el_popper = resolveComponent(\"el-popper\");\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectWrapper\",\n    class: normalizeClass([\"el-select\", [_ctx.selectSize ? \"el-select--\" + _ctx.selectSize : \"\"]]),\n    onClick: _cache[24] || (_cache[24] = withModifiers((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), [\"stop\"]))\n  }, [createVNode(_component_el_popper, {\n    ref: \"popper\",\n    visible: _ctx.dropMenuVisible,\n    \"onUpdate:visible\": _cache[23] || (_cache[23] = $event => _ctx.dropMenuVisible = $event),\n    placement: \"bottom-start\",\n    \"append-to-body\": _ctx.popperAppendToBody,\n    \"popper-class\": `el-select__popper ${_ctx.popperClass}`,\n    \"fallback-placements\": [\"bottom-start\", \"top-start\", \"right\", \"left\"],\n    \"manual-mode\": \"\",\n    effect: _ctx.Effect.LIGHT,\n    pure: \"\",\n    trigger: \"click\",\n    transition: \"el-zoom-in-top\",\n    \"stop-popper-mouse-event\": false,\n    \"gpu-acceleration\": false,\n    onBeforeEnter: _ctx.handleMenuEnter\n  }, {\n    trigger: withCtx(() => [createElementVNode(\"div\", _hoisted_1, [_ctx.multiple ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      ref: \"tags\",\n      class: \"el-select__tags\",\n      style: normalizeStyle({\n        maxWidth: _ctx.inputWidth - 32 + \"px\",\n        width: \"100%\"\n      })\n    }, [_ctx.collapseTags && _ctx.selected.length ? (openBlock(), createElementBlock(\"span\", _hoisted_2, [createVNode(_component_el_tag, {\n      closable: !_ctx.selectDisabled && !_ctx.selected[0].isDisabled,\n      size: _ctx.collapseTagSize,\n      hit: _ctx.selected[0].hitState,\n      type: _ctx.tagType,\n      \"disable-transitions\": \"\",\n      onClose: _cache[0] || (_cache[0] = $event => _ctx.deleteTag($event, _ctx.selected[0]))\n    }, {\n      default: withCtx(() => [createElementVNode(\"span\", {\n        class: \"el-select__tags-text\",\n        style: normalizeStyle({\n          maxWidth: _ctx.inputWidth - 123 + \"px\"\n        })\n      }, toDisplayString(_ctx.selected[0].currentLabel), 5)]),\n      _: 1\n    }, 8, [\"closable\", \"size\", \"hit\", \"type\"]), _ctx.selected.length > 1 ? (openBlock(), createBlock(_component_el_tag, {\n      key: 0,\n      closable: false,\n      size: _ctx.collapseTagSize,\n      type: _ctx.tagType,\n      \"disable-transitions\": \"\"\n    }, {\n      default: withCtx(() => [createElementVNode(\"span\", _hoisted_3, \"+ \" + toDisplayString(_ctx.selected.length - 1), 1)]),\n      _: 1\n    }, 8, [\"size\", \"type\"])) : createCommentVNode(\"v-if\", true)])) : createCommentVNode(\"v-if\", true), createCommentVNode(\" <div> \"), !_ctx.collapseTags ? (openBlock(), createBlock(Transition, {\n      key: 1,\n      onAfterLeave: _ctx.resetInputHeight\n    }, {\n      default: withCtx(() => [createElementVNode(\"span\", {\n        style: normalizeStyle({\n          marginLeft: _ctx.prefixWidth && _ctx.selected.length ? `${_ctx.prefixWidth}px` : null\n        })\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.selected, item => {\n        return openBlock(), createBlock(_component_el_tag, {\n          key: _ctx.getValueKey(item),\n          closable: !_ctx.selectDisabled && !item.isDisabled,\n          size: _ctx.collapseTagSize,\n          hit: item.hitState,\n          type: _ctx.tagType,\n          \"disable-transitions\": \"\",\n          onClose: $event => _ctx.deleteTag($event, item)\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: \"el-select__tags-text\",\n            style: normalizeStyle({\n              maxWidth: _ctx.inputWidth - 75 + \"px\"\n            })\n          }, toDisplayString(item.currentLabel), 5)]),\n          _: 2\n        }, 1032, [\"closable\", \"size\", \"hit\", \"type\", \"onClose\"]);\n      }), 128))], 4)]),\n      _: 1\n    }, 8, [\"onAfterLeave\"])) : createCommentVNode(\"v-if\", true), createCommentVNode(\" </div> \"), _ctx.filterable ? withDirectives((openBlock(), createElementBlock(\"input\", {\n      key: 2,\n      ref: \"input\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.query = $event),\n      type: \"text\",\n      class: normalizeClass([\"el-select__input\", [_ctx.selectSize ? `is-${_ctx.selectSize}` : \"\"]]),\n      disabled: _ctx.selectDisabled,\n      autocomplete: _ctx.autocomplete,\n      style: normalizeStyle({\n        marginLeft: _ctx.prefixWidth && !_ctx.selected.length || _ctx.tagInMultiLine ? `${_ctx.prefixWidth}px` : null,\n        flexGrow: \"1\",\n        width: `${_ctx.inputLength / (_ctx.inputWidth - 32)}%`,\n        maxWidth: `${_ctx.inputWidth - 42}px`\n      }),\n      onFocus: _cache[2] || (_cache[2] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n      onBlur: _cache[3] || (_cache[3] = (...args) => _ctx.handleBlur && _ctx.handleBlur(...args)),\n      onKeyup: _cache[4] || (_cache[4] = (...args) => _ctx.managePlaceholder && _ctx.managePlaceholder(...args)),\n      onKeydown: [_cache[5] || (_cache[5] = (...args) => _ctx.resetInputState && _ctx.resetInputState(...args)), _cache[6] || (_cache[6] = withKeys(withModifiers($event => _ctx.navigateOptions(\"next\"), [\"prevent\"]), [\"down\"])), _cache[7] || (_cache[7] = withKeys(withModifiers($event => _ctx.navigateOptions(\"prev\"), [\"prevent\"]), [\"up\"])), _cache[8] || (_cache[8] = withKeys(withModifiers($event => _ctx.visible = false, [\"stop\", \"prevent\"]), [\"esc\"])), _cache[9] || (_cache[9] = withKeys(withModifiers((...args) => _ctx.selectOption && _ctx.selectOption(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[10] || (_cache[10] = withKeys((...args) => _ctx.deletePrevTag && _ctx.deletePrevTag(...args), [\"delete\"])), _cache[11] || (_cache[11] = withKeys($event => _ctx.visible = false, [\"tab\"]))],\n      onCompositionstart: _cache[12] || (_cache[12] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n      onCompositionupdate: _cache[13] || (_cache[13] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n      onCompositionend: _cache[14] || (_cache[14] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n      onInput: _cache[15] || (_cache[15] = (...args) => _ctx.debouncedQueryChange && _ctx.debouncedQueryChange(...args))\n    }, null, 46, _hoisted_4)), [[vModelText, _ctx.query]]) : createCommentVNode(\"v-if\", true)], 4)) : createCommentVNode(\"v-if\", true), createVNode(_component_el_input, {\n      id: _ctx.id,\n      ref: \"reference\",\n      modelValue: _ctx.selectedLabel,\n      \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.selectedLabel = $event),\n      type: \"text\",\n      placeholder: _ctx.currentPlaceholder,\n      name: _ctx.name,\n      autocomplete: _ctx.autocomplete,\n      size: _ctx.selectSize,\n      disabled: _ctx.selectDisabled,\n      readonly: _ctx.readonly,\n      \"validate-event\": false,\n      class: normalizeClass({\n        \"is-focus\": _ctx.visible\n      }),\n      tabindex: _ctx.multiple && _ctx.filterable ? \"-1\" : null,\n      onFocus: _ctx.handleFocus,\n      onBlur: _ctx.handleBlur,\n      onInput: _ctx.debouncedOnInputChange,\n      onPaste: _ctx.debouncedOnInputChange,\n      onCompositionstart: _ctx.handleComposition,\n      onCompositionupdate: _ctx.handleComposition,\n      onCompositionend: _ctx.handleComposition,\n      onKeydown: [_cache[17] || (_cache[17] = withKeys(withModifiers($event => _ctx.navigateOptions(\"next\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[18] || (_cache[18] = withKeys(withModifiers($event => _ctx.navigateOptions(\"prev\"), [\"stop\", \"prevent\"]), [\"up\"])), withKeys(withModifiers(_ctx.selectOption, [\"stop\", \"prevent\"]), [\"enter\"]), _cache[19] || (_cache[19] = withKeys(withModifiers($event => _ctx.visible = false, [\"stop\", \"prevent\"]), [\"esc\"])), _cache[20] || (_cache[20] = withKeys($event => _ctx.visible = false, [\"tab\"]))],\n      onMouseenter: _cache[21] || (_cache[21] = $event => _ctx.inputHovering = true),\n      onMouseleave: _cache[22] || (_cache[22] = $event => _ctx.inputHovering = false)\n    }, createSlots({\n      suffix: withCtx(() => [_ctx.iconComponent ? withDirectives((openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass([\"el-select__caret\", \"el-input__icon\", _ctx.iconReverse])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n        _: 1\n      }, 8, [\"class\"])), [[vShow, !_ctx.showClose]]) : createCommentVNode(\"v-if\", true), _ctx.showClose && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        class: \"el-select__caret el-input__icon\",\n        onClick: _ctx.handleClearClick\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n        _: 1\n      }, 8, [\"onClick\"])) : createCommentVNode(\"v-if\", true)]),\n      _: 2\n    }, [_ctx.$slots.prefix ? {\n      name: \"prefix\",\n      fn: withCtx(() => [createElementVNode(\"div\", _hoisted_5, [renderSlot(_ctx.$slots, \"prefix\")])])\n    } : void 0]), 1032, [\"id\", \"modelValue\", \"placeholder\", \"name\", \"autocomplete\", \"size\", \"disabled\", \"readonly\", \"class\", \"tabindex\", \"onFocus\", \"onBlur\", \"onInput\", \"onPaste\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onKeydown\"])])]),\n    default: withCtx(() => [createVNode(_component_el_select_menu, null, {\n      default: withCtx(() => [withDirectives(createVNode(_component_el_scrollbar, {\n        ref: \"scrollbar\",\n        tag: \"ul\",\n        \"wrap-class\": \"el-select-dropdown__wrap\",\n        \"view-class\": \"el-select-dropdown__list\",\n        class: normalizeClass({\n          \"is-empty\": !_ctx.allowCreate && _ctx.query && _ctx.filteredOptionsCount === 0\n        })\n      }, {\n        default: withCtx(() => [_ctx.showNewOption ? (openBlock(), createBlock(_component_el_option, {\n          key: 0,\n          value: _ctx.query,\n          created: true\n        }, null, 8, [\"value\"])) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"class\"]), [[vShow, _ctx.options.size > 0 && !_ctx.loading]]), _ctx.emptyText && (!_ctx.allowCreate || _ctx.loading || _ctx.allowCreate && _ctx.options.size === 0) ? (openBlock(), createElementBlock(Fragment, {\n        key: 0\n      }, [_ctx.$slots.empty ? renderSlot(_ctx.$slots, \"empty\", {\n        key: 0\n      }) : (openBlock(), createElementBlock(\"p\", _hoisted_6, toDisplayString(_ctx.emptyText), 1))], 2112)) : createCommentVNode(\"v-if\", true)]),\n      _: 3\n    })]),\n    _: 3\n  }, 8, [\"visible\", \"append-to-body\", \"popper-class\", \"effect\", \"onBeforeEnter\"])], 2)), [[_directive_click_outside, _ctx.handleClose, _ctx.popperPaneRef]]);\n}\nexport { render };","map":{"version":3,"names":["class","style","createElementBlock","ref","normalizeClass","_ctx","selectSize","onClick","_cache","withModifiers","args","toggleMenu","createVNode","_component_el_popper","visible","dropMenuVisible","$event","placement","popperAppendToBody","popperClass","effect","Effect","LIGHT","pure","trigger","transition","onBeforeEnter","handleMenuEnter","withCtx","createElementVNode","_hoisted_1","multiple","openBlock","normalizeStyle","maxWidth","inputWidth","width","collapseTags","selected","length","_hoisted_2","_component_el_tag","closable","selectDisabled","isDisabled","size","collapseTagSize","hit","hitState","type","tagType","onClose","deleteTag","currentLabel","createBlock","_hoisted_3","toDisplayString","createCommentVNode","Transition","onAfterLeave","resetInputHeight","Fragment","renderList","item","key","getValueKey","filterable","withDirectives","query","disabled","autocomplete","onFocus","handleFocus","onBlur","handleBlur","onKeyup","managePlaceholder","onKeydown","resetInputState","navigateOptions","selectOption","deletePrevTag","onCompositionstart","handleComposition","onCompositionupdate","onCompositionend","onInput","debouncedQueryChange","_component_el_input","id","modelValue","selectedLabel","placeholder","currentPlaceholder","name","readonly","tabindex","debouncedOnInputChange","onPaste","onMouseenter","inputHovering","onMouseleave","suffix","iconComponent","_component_el_icon","iconReverse","resolveDynamicComponent","showClose","clearIcon","handleClearClick","$slots","prefix","fn","_hoisted_5","renderSlot","default","_component_el_select_menu","_component_el_scrollbar","tag","showNewOption","_component_el_option","value","created","options","loading","empty","_hoisted_6","emptyText","handleClose","popperPaneRef"],"sources":["../../../../../../packages/components/select/src/select.vue?vue&type=template&id=33774f85&lang.js"],"sourcesContent":["<template>\n  <div\n    ref=\"selectWrapper\"\n    v-click-outside:[popperPaneRef]=\"handleClose\"\n    class=\"el-select\"\n    :class=\"[selectSize ? 'el-select--' + selectSize : '']\"\n    @click.stop=\"toggleMenu\"\n  >\n    <el-popper\n      ref=\"popper\"\n      v-model:visible=\"dropMenuVisible\"\n      placement=\"bottom-start\"\n      :append-to-body=\"popperAppendToBody\"\n      :popper-class=\"`el-select__popper ${popperClass}`\"\n      :fallback-placements=\"['bottom-start', 'top-start', 'right', 'left']\"\n      manual-mode\n      :effect=\"Effect.LIGHT\"\n      pure\n      trigger=\"click\"\n      transition=\"el-zoom-in-top\"\n      :stop-popper-mouse-event=\"false\"\n      :gpu-acceleration=\"false\"\n      @before-enter=\"handleMenuEnter\"\n    >\n      <template #trigger>\n        <div class=\"select-trigger\">\n          <div\n            v-if=\"multiple\"\n            ref=\"tags\"\n            class=\"el-select__tags\"\n            :style=\"{ maxWidth: inputWidth - 32 + 'px', width: '100%' }\"\n          >\n            <span v-if=\"collapseTags && selected.length\">\n              <el-tag\n                :closable=\"!selectDisabled && !selected[0].isDisabled\"\n                :size=\"collapseTagSize\"\n                :hit=\"selected[0].hitState\"\n                :type=\"tagType\"\n                disable-transitions\n                @close=\"deleteTag($event, selected[0])\"\n              >\n                <span\n                  class=\"el-select__tags-text\"\n                  :style=\"{ maxWidth: inputWidth - 123 + 'px' }\"\n                  >{{ selected[0].currentLabel }}</span\n                >\n              </el-tag>\n              <el-tag\n                v-if=\"selected.length > 1\"\n                :closable=\"false\"\n                :size=\"collapseTagSize\"\n                :type=\"tagType\"\n                disable-transitions\n              >\n                <span class=\"el-select__tags-text\"\n                  >+ {{ selected.length - 1 }}</span\n                >\n              </el-tag>\n            </span>\n            <!-- <div> -->\n            <transition v-if=\"!collapseTags\" @after-leave=\"resetInputHeight\">\n              <span\n                :style=\"{\n                  marginLeft:\n                    prefixWidth && selected.length ? `${prefixWidth}px` : null,\n                }\"\n              >\n                <el-tag\n                  v-for=\"item in selected\"\n                  :key=\"getValueKey(item)\"\n                  :closable=\"!selectDisabled && !item.isDisabled\"\n                  :size=\"collapseTagSize\"\n                  :hit=\"item.hitState\"\n                  :type=\"tagType\"\n                  disable-transitions\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span\n                    class=\"el-select__tags-text\"\n                    :style=\"{ maxWidth: inputWidth - 75 + 'px' }\"\n                    >{{ item.currentLabel }}</span\n                  >\n                </el-tag>\n              </span>\n            </transition>\n            <!-- </div> -->\n            <input\n              v-if=\"filterable\"\n              ref=\"input\"\n              v-model=\"query\"\n              type=\"text\"\n              class=\"el-select__input\"\n              :class=\"[selectSize ? `is-${selectSize}` : '']\"\n              :disabled=\"selectDisabled\"\n              :autocomplete=\"autocomplete\"\n              :style=\"{\n                marginLeft:\n                  (prefixWidth && !selected.length) || tagInMultiLine\n                    ? `${prefixWidth}px`\n                    : null,\n                flexGrow: '1',\n                width: `${inputLength / (inputWidth - 32)}%`,\n                maxWidth: `${inputWidth - 42}px`,\n              }\"\n              @focus=\"handleFocus\"\n              @blur=\"handleBlur\"\n              @keyup=\"managePlaceholder\"\n              @keydown=\"resetInputState\"\n              @keydown.down.prevent=\"navigateOptions('next')\"\n              @keydown.up.prevent=\"navigateOptions('prev')\"\n              @keydown.esc.stop.prevent=\"visible = false\"\n              @keydown.enter.stop.prevent=\"selectOption\"\n              @keydown.delete=\"deletePrevTag\"\n              @keydown.tab=\"visible = false\"\n              @compositionstart=\"handleComposition\"\n              @compositionupdate=\"handleComposition\"\n              @compositionend=\"handleComposition\"\n              @input=\"debouncedQueryChange\"\n            />\n          </div>\n          <el-input\n            :id=\"id\"\n            ref=\"reference\"\n            v-model=\"selectedLabel\"\n            type=\"text\"\n            :placeholder=\"currentPlaceholder\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :size=\"selectSize\"\n            :disabled=\"selectDisabled\"\n            :readonly=\"readonly\"\n            :validate-event=\"false\"\n            :class=\"{ 'is-focus': visible }\"\n            :tabindex=\"multiple && filterable ? '-1' : null\"\n            @focus=\"handleFocus\"\n            @blur=\"handleBlur\"\n            @input=\"debouncedOnInputChange\"\n            @paste=\"debouncedOnInputChange\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n            @keydown.down.stop.prevent=\"navigateOptions('next')\"\n            @keydown.up.stop.prevent=\"navigateOptions('prev')\"\n            @keydown.enter.stop.prevent=\"selectOption\"\n            @keydown.esc.stop.prevent=\"visible = false\"\n            @keydown.tab=\"visible = false\"\n            @mouseenter=\"inputHovering = true\"\n            @mouseleave=\"inputHovering = false\"\n          >\n            <template v-if=\"$slots.prefix\" #prefix>\n              <div\n                style=\"\n                  height: 100%;\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n                \"\n              >\n                <slot name=\"prefix\"></slot>\n              </div>\n            </template>\n            <template #suffix>\n              <el-icon\n                v-if=\"iconComponent\"\n                v-show=\"!showClose\"\n                :class=\"['el-select__caret', 'el-input__icon', iconReverse]\"\n              >\n                <component :is=\"iconComponent\" />\n              </el-icon>\n              <el-icon\n                v-if=\"showClose && clearIcon\"\n                class=\"el-select__caret el-input__icon\"\n                @click=\"handleClearClick\"\n              >\n                <component :is=\"clearIcon\" />\n              </el-icon>\n            </template>\n          </el-input>\n        </div>\n      </template>\n      <template #default>\n        <el-select-menu>\n          <el-scrollbar\n            v-show=\"options.size > 0 && !loading\"\n            ref=\"scrollbar\"\n            tag=\"ul\"\n            wrap-class=\"el-select-dropdown__wrap\"\n            view-class=\"el-select-dropdown__list\"\n            :class=\"{\n              'is-empty': !allowCreate && query && filteredOptionsCount === 0,\n            }\"\n          >\n            <el-option v-if=\"showNewOption\" :value=\"query\" :created=\"true\" />\n            <slot></slot>\n          </el-scrollbar>\n          <template\n            v-if=\"\n              emptyText &&\n              (!allowCreate || loading || (allowCreate && options.size === 0))\n            \"\n          >\n            <slot v-if=\"$slots.empty\" name=\"empty\"></slot>\n            <p v-else class=\"el-select-dropdown__empty\">\n              {{ emptyText }}\n            </p>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-popper>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  toRefs,\n  defineComponent,\n  onMounted,\n  onBeforeUnmount,\n  nextTick,\n  reactive,\n  provide,\n  computed,\n} from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport { useFocus, useLocale } from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport ElPopper, { Effect } from '@element-plus/components/popper'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '@element-plus/utils/constants'\nimport {\n  addResizeListener,\n  removeResizeListener,\n} from '@element-plus/utils/resize-event'\nimport { isValidComponentSize } from '@element-plus/utils/validators'\nimport { CircleClose, ArrowUp } from '@element-plus/icons-vue'\nimport ElOption from './option.vue'\nimport ElSelectMenu from './select-dropdown.vue'\nimport { useSelect, useSelectStates } from './useSelect'\nimport { selectKey } from './token'\n\nimport type { PropType, Component } from 'vue'\nimport type { ComponentSize } from '@element-plus/utils/types'\nimport type { SelectContext } from './token'\n\nexport default defineComponent({\n  name: 'ElSelect',\n  componentName: 'ElSelect',\n  components: {\n    ElInput,\n    ElSelectMenu,\n    ElOption,\n    ElTag,\n    ElScrollbar,\n    ElPopper,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: {\n    name: String,\n    id: String,\n    modelValue: {\n      type: [Array, String, Number, Boolean, Object],\n      default: undefined,\n    },\n    autocomplete: {\n      type: String,\n      default: 'off',\n    },\n    automaticDropdown: Boolean,\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    allowCreate: Boolean,\n    loading: Boolean,\n    popperClass: {\n      type: String,\n      default: '',\n    },\n    remote: Boolean,\n    loadingText: String,\n    noMatchText: String,\n    noDataText: String,\n    remoteMethod: Function,\n    filterMethod: Function,\n    multiple: Boolean,\n    multipleLimit: {\n      type: Number,\n      default: 0,\n    },\n    placeholder: {\n      type: String,\n    },\n    defaultFirstOption: Boolean,\n    reserveKeyword: Boolean,\n    valueKey: {\n      type: String,\n      default: 'value',\n    },\n    collapseTags: Boolean,\n    popperAppendToBody: {\n      type: Boolean,\n      default: true,\n    },\n    clearIcon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: CircleClose,\n    },\n    fitInputWidth: {\n      type: Boolean,\n      default: false,\n    },\n    suffixIcon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: ArrowUp,\n    },\n    tagType: {\n      type: String,\n      default: 'info',\n    },\n  },\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, ctx) {\n    const { t } = useLocale()\n    const states = useSelectStates(props)\n    const {\n      optionsArray,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      setSelected,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      onOptionCreate,\n      onOptionDestroy,\n      handleMenuEnter,\n      handleFocus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n\n      reference,\n      input,\n      popper,\n      tags,\n      selectWrapper,\n      scrollbar,\n      queryChange,\n      groupQueryChange,\n    } = useSelect(props, states, ctx)\n\n    const { focus } = useFocus(reference)\n\n    const {\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      softFocus,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      isSilentBlur,\n      options,\n      cachedOptions,\n      optionsCount,\n      prefixWidth,\n      tagInMultiLine,\n    } = toRefs(states)\n\n    provide(\n      selectKey,\n      reactive({\n        props,\n        options,\n        optionsArray,\n        cachedOptions,\n        optionsCount,\n        filteredOptionsCount,\n        hoverIndex,\n        handleOptionSelect,\n        onOptionCreate,\n        onOptionDestroy,\n        selectWrapper,\n        selected,\n        setSelected,\n        queryChange,\n        groupQueryChange,\n      }) as unknown as SelectContext\n    )\n\n    onMounted(() => {\n      states.cachedPlaceHolder = currentPlaceholder.value =\n        props.placeholder || t('el.select.placeholder')\n      if (\n        props.multiple &&\n        Array.isArray(props.modelValue) &&\n        props.modelValue.length > 0\n      ) {\n        currentPlaceholder.value = ''\n      }\n      addResizeListener(selectWrapper.value as any, handleResize)\n      if (reference.value && reference.value.$el) {\n        const sizeMap = {\n          medium: 36,\n          small: 32,\n          mini: 28,\n        }\n        const input = reference.value.input\n        states.initialInputHeight =\n          input.getBoundingClientRect().height || sizeMap[selectSize.value]\n      }\n      if (props.remote && props.multiple) {\n        resetInputHeight()\n      }\n      nextTick(() => {\n        if (reference.value.$el) {\n          inputWidth.value = reference.value.$el.getBoundingClientRect().width\n        }\n        if (ctx.slots.prefix) {\n          const inputChildNodes = reference.value.$el.childNodes\n          const input = [].filter.call(\n            inputChildNodes,\n            (item) => item.tagName === 'INPUT'\n          )[0]\n          const prefix = reference.value.$el.querySelector('.el-input__prefix')\n          prefixWidth.value = Math.max(\n            prefix.getBoundingClientRect().width + 5,\n            30\n          )\n          if (states.prefixWidth) {\n            input.style.paddingLeft = `${Math.max(states.prefixWidth, 30)}px`\n          }\n        }\n      })\n      setSelected()\n    })\n\n    onBeforeUnmount(() => {\n      removeResizeListener(selectWrapper.value as any, handleResize)\n    })\n\n    if (props.multiple && !Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, [])\n    }\n    if (!props.multiple && Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, '')\n    }\n\n    const popperPaneRef = computed(() => {\n      return popper.value?.popperRef\n    })\n\n    return {\n      Effect,\n      tagInMultiLine,\n      prefixWidth,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      softFocus,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      isSilentBlur,\n      options,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      handleMenuEnter,\n      handleFocus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n      focus,\n\n      reference,\n      input,\n      popper,\n      popperPaneRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}