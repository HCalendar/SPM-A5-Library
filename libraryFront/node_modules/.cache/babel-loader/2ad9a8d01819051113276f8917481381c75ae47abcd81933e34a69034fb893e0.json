{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, ref, computed, watchEffect } from 'vue';\nimport { DArrowLeft, DArrowRight, MoreFilled } from '@element-plus/icons-vue';\nconst paginationPagerProps = {\n  currentPage: {\n    type: Number,\n    default: 1\n  },\n  pageCount: {\n    type: Number,\n    required: true\n  },\n  pagerCount: {\n    type: Number,\n    default: 7\n  },\n  disabled: Boolean\n};\nvar script = defineComponent({\n  name: \"ElPaginationPager\",\n  components: {\n    DArrowLeft,\n    DArrowRight,\n    MoreFilled\n  },\n  props: paginationPagerProps,\n  emits: [\"change\"],\n  setup(props, {\n    emit\n  }) {\n    const showPrevMore = ref(false);\n    const showNextMore = ref(false);\n    const quickPrevHover = ref(false);\n    const quickNextHover = ref(false);\n    const pagers = computed(() => {\n      const pagerCount = props.pagerCount;\n      const halfPagerCount = (pagerCount - 1) / 2;\n      const currentPage = Number(props.currentPage);\n      const pageCount = Number(props.pageCount);\n      let showPrevMore2 = false;\n      let showNextMore2 = false;\n      if (pageCount > pagerCount) {\n        if (currentPage > pagerCount - halfPagerCount) {\n          showPrevMore2 = true;\n        }\n        if (currentPage < pageCount - halfPagerCount) {\n          showNextMore2 = true;\n        }\n      }\n      const array = [];\n      if (showPrevMore2 && !showNextMore2) {\n        const startPage = pageCount - (pagerCount - 2);\n        for (let i = startPage; i < pageCount; i++) {\n          array.push(i);\n        }\n      } else if (!showPrevMore2 && showNextMore2) {\n        for (let i = 2; i < pagerCount; i++) {\n          array.push(i);\n        }\n      } else if (showPrevMore2 && showNextMore2) {\n        const offset = Math.floor(pagerCount / 2) - 1;\n        for (let i = currentPage - offset; i <= currentPage + offset; i++) {\n          array.push(i);\n        }\n      } else {\n        for (let i = 2; i < pageCount; i++) {\n          array.push(i);\n        }\n      }\n      return array;\n    });\n    watchEffect(() => {\n      const halfPagerCount = (props.pagerCount - 1) / 2;\n      showPrevMore.value = false;\n      showNextMore.value = false;\n      if (props.pageCount > props.pagerCount) {\n        if (props.currentPage > props.pagerCount - halfPagerCount) {\n          showPrevMore.value = true;\n        }\n        if (props.currentPage < props.pageCount - halfPagerCount) {\n          showNextMore.value = true;\n        }\n      }\n    });\n    function onMouseenter(direction) {\n      if (props.disabled) return;\n      if (direction === \"left\") {\n        quickPrevHover.value = true;\n      } else {\n        quickNextHover.value = true;\n      }\n    }\n    function onEnter(e) {\n      const target = e.target;\n      if (target.tagName.toLowerCase() === \"li\" && Array.from(target.classList).includes(\"number\")) {\n        const newPage = Number(target.textContent);\n        if (newPage !== props.currentPage) {\n          emit(\"change\", newPage);\n        }\n      }\n    }\n    function onPagerClick(event) {\n      const target = event.target;\n      if (target.tagName.toLowerCase() === \"ul\" || props.disabled) {\n        return;\n      }\n      let newPage = Number(target.textContent);\n      const pageCount = props.pageCount;\n      const currentPage = props.currentPage;\n      const pagerCountOffset = props.pagerCount - 2;\n      if (target.className.includes(\"more\")) {\n        if (target.className.includes(\"quickprev\")) {\n          newPage = currentPage - pagerCountOffset;\n        } else if (target.className.includes(\"quicknext\")) {\n          newPage = currentPage + pagerCountOffset;\n        }\n      }\n      if (!isNaN(newPage)) {\n        if (newPage < 1) {\n          newPage = 1;\n        }\n        if (newPage > pageCount) {\n          newPage = pageCount;\n        }\n      }\n      if (newPage !== currentPage) {\n        emit(\"change\", newPage);\n      }\n    }\n    return {\n      showPrevMore,\n      showNextMore,\n      quickPrevHover,\n      quickNextHover,\n      pagers,\n      onMouseenter,\n      onPagerClick,\n      onEnter\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["paginationPagerProps","currentPage","type","Number","default","pageCount","required","pagerCount","disabled","Boolean","script","defineComponent","name","components","DArrowLeft","DArrowRight","MoreFilled","props","emits","setup","emit","showPrevMore","ref","showNextMore","quickPrevHover","quickNextHover","pagers","computed","halfPagerCount","showPrevMore2","showNextMore2","array","startPage","i","push","offset","Math","floor","watchEffect","value","onMouseenter","direction","onEnter","e","target","tagName","toLowerCase","Array","from","classList","includes","newPage","textContent","onPagerClick","event","pagerCountOffset","className","isNaN"],"sources":["../../../../../../../packages/components/pagination/src/components/pager.vue"],"sourcesContent":["<template>\n  <ul class=\"el-pager\" @click=\"onPagerClick\" @keyup.enter=\"onEnter\">\n    <li\n      v-if=\"pageCount > 0\"\n      :class=\"{ active: currentPage === 1, disabled }\"\n      class=\"number\"\n      :aria-current=\"currentPage === 1\"\n      tabindex=\"0\"\n    >\n      1\n    </li>\n    <li\n      v-if=\"showPrevMore\"\n      class=\"el-icon more btn-quickprev\"\n      :class=\"{ disabled }\"\n      @mouseenter=\"onMouseenter('left')\"\n      @mouseleave=\"quickPrevHover = false\"\n    >\n      <d-arrow-left v-if=\"quickPrevHover\" />\n      <more-filled v-else />\n    </li>\n    <li\n      v-for=\"pager in pagers\"\n      :key=\"pager\"\n      :class=\"{ active: currentPage === pager, disabled }\"\n      class=\"number\"\n      :aria-current=\"currentPage === pager\"\n      tabindex=\"0\"\n    >\n      {{ pager }}\n    </li>\n    <li\n      v-if=\"showNextMore\"\n      class=\"el-icon more btn-quicknext\"\n      :class=\"{ disabled }\"\n      @mouseenter=\"onMouseenter('right')\"\n      @mouseleave=\"quickNextHover = false\"\n    >\n      <d-arrow-right v-if=\"quickNextHover\" />\n      <more-filled v-else />\n    </li>\n    <li\n      v-if=\"pageCount > 1\"\n      :class=\"{ active: currentPage === pageCount, disabled }\"\n      class=\"number\"\n      :aria-current=\"currentPage === pageCount\"\n      tabindex=\"0\"\n    >\n      {{ pageCount }}\n    </li>\n  </ul>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, watchEffect } from 'vue'\nimport { MoreFilled, DArrowLeft, DArrowRight } from '@element-plus/icons-vue'\n\nconst paginationPagerProps = {\n  currentPage: {\n    type: Number,\n    default: 1,\n  },\n  pageCount: {\n    type: Number,\n    required: true,\n  },\n  pagerCount: {\n    type: Number,\n    default: 7,\n  },\n  disabled: Boolean,\n} as const\n\nexport default defineComponent({\n  name: 'ElPaginationPager',\n\n  components: {\n    DArrowLeft,\n    DArrowRight,\n    MoreFilled,\n  },\n  props: paginationPagerProps,\n  emits: ['change'],\n\n  setup(props, { emit }) {\n    const showPrevMore = ref(false)\n    const showNextMore = ref(false)\n    const quickPrevHover = ref(false)\n    const quickNextHover = ref(false)\n\n    const pagers = computed(() => {\n      const pagerCount = props.pagerCount\n      const halfPagerCount = (pagerCount - 1) / 2\n      const currentPage = Number(props.currentPage)\n      const pageCount = Number(props.pageCount)\n\n      let showPrevMore = false\n      let showNextMore = false\n      if (pageCount > pagerCount) {\n        if (currentPage > pagerCount - halfPagerCount) {\n          showPrevMore = true\n        }\n        if (currentPage < pageCount - halfPagerCount) {\n          showNextMore = true\n        }\n      }\n      const array: number[] = []\n      if (showPrevMore && !showNextMore) {\n        const startPage = pageCount - (pagerCount - 2)\n        for (let i = startPage; i < pageCount; i++) {\n          array.push(i)\n        }\n      } else if (!showPrevMore && showNextMore) {\n        for (let i = 2; i < pagerCount; i++) {\n          array.push(i)\n        }\n      } else if (showPrevMore && showNextMore) {\n        const offset = Math.floor(pagerCount / 2) - 1\n        for (let i = currentPage - offset; i <= currentPage + offset; i++) {\n          array.push(i)\n        }\n      } else {\n        for (let i = 2; i < pageCount; i++) {\n          array.push(i)\n        }\n      }\n\n      return array\n    })\n\n    watchEffect(() => {\n      const halfPagerCount = (props.pagerCount - 1) / 2\n\n      showPrevMore.value = false\n      showNextMore.value = false\n\n      if (props.pageCount > props.pagerCount) {\n        if (props.currentPage > props.pagerCount - halfPagerCount) {\n          showPrevMore.value = true\n        }\n        if (props.currentPage < props.pageCount - halfPagerCount) {\n          showNextMore.value = true\n        }\n      }\n    })\n\n    function onMouseenter(direction: 'left' | 'right') {\n      if (props.disabled) return\n      if (direction === 'left') {\n        quickPrevHover.value = true\n      } else {\n        quickNextHover.value = true\n      }\n    }\n\n    function onEnter(e: UIEvent) {\n      const target = e.target as HTMLElement\n      if (\n        target.tagName.toLowerCase() === 'li' &&\n        Array.from(target.classList).includes('number')\n      ) {\n        const newPage = Number(target.textContent)\n        if (newPage !== props.currentPage) {\n          emit('change', newPage)\n        }\n      }\n    }\n\n    function onPagerClick(event: UIEvent) {\n      const target = event.target as HTMLElement\n      if (target.tagName.toLowerCase() === 'ul' || props.disabled) {\n        return\n      }\n\n      let newPage = Number(target.textContent)\n      const pageCount = props.pageCount\n      const currentPage = props.currentPage\n      const pagerCountOffset = props.pagerCount - 2\n      if (target.className.includes('more')) {\n        if (target.className.includes('quickprev')) {\n          newPage = currentPage - pagerCountOffset\n        } else if (target.className.includes('quicknext')) {\n          newPage = currentPage + pagerCountOffset\n        }\n      }\n      if (!isNaN(newPage)) {\n        if (newPage < 1) {\n          newPage = 1\n        }\n        if (newPage > pageCount) {\n          newPage = pageCount\n        }\n      }\n      if (newPage !== currentPage) {\n        emit('change', newPage)\n      }\n    }\n\n    return {\n      showPrevMore,\n      showNextMore,\n      quickPrevHover,\n      quickNextHover,\n      pagers,\n\n      onMouseenter,\n      onPagerClick,\n      onEnter,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}