{"ast":null,"code":"import { defineComponent, getCurrentInstance, reactive, inject, computed, onMounted, toRefs, onUnmounted } from 'vue';\nimport { autoprefixer } from '../../../utils/util.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nconst CARD_SCALE = 0.83;\nvar script = defineComponent({\n  name: \"ElCarouselItem\",\n  props: {\n    name: {\n      type: String,\n      default: \"\"\n    },\n    label: {\n      type: [String, Number],\n      default: \"\"\n    }\n  },\n  setup(props) {\n    const instance = getCurrentInstance();\n    const data = reactive({\n      hover: false,\n      translate: 0,\n      scale: 1,\n      active: false,\n      ready: false,\n      inStage: false,\n      animating: false\n    });\n    const injectCarouselScope = inject(\"injectCarouselScope\");\n    const parentDirection = computed(() => {\n      return injectCarouselScope.direction;\n    });\n    const itemStyle = computed(() => {\n      const translateType = parentDirection.value === \"vertical\" ? \"translateY\" : \"translateX\";\n      const value = `${translateType}(${data.translate}px) scale(${data.scale})`;\n      const style = {\n        transform: value\n      };\n      return autoprefixer(style);\n    });\n    function processIndex(index, activeIndex, length) {\n      if (activeIndex === 0 && index === length - 1) {\n        return -1;\n      } else if (activeIndex === length - 1 && index === 0) {\n        return length;\n      } else if (index < activeIndex - 1 && activeIndex - index >= length / 2) {\n        return length + 1;\n      } else if (index > activeIndex + 1 && index - activeIndex >= length / 2) {\n        return -2;\n      }\n      return index;\n    }\n    function calcCardTranslate(index, activeIndex) {\n      var _a;\n      const parentWidth = ((_a = injectCarouselScope.root.value) == null ? void 0 : _a.offsetWidth) || 0;\n      if (data.inStage) {\n        return parentWidth * ((2 - CARD_SCALE) * (index - activeIndex) + 1) / 4;\n      } else if (index < activeIndex) {\n        return -(1 + CARD_SCALE) * parentWidth / 4;\n      } else {\n        return (3 + CARD_SCALE) * parentWidth / 4;\n      }\n    }\n    function calcTranslate(index, activeIndex, isVertical) {\n      var _a, _b;\n      const distance = (isVertical ? (_a = injectCarouselScope.root.value) == null ? void 0 : _a.offsetHeight : (_b = injectCarouselScope.root.value) == null ? void 0 : _b.offsetWidth) || 0;\n      return distance * (index - activeIndex);\n    }\n    const translateItem = (index, activeIndex, oldIndex) => {\n      const parentType = injectCarouselScope.type;\n      const length = injectCarouselScope.items.value.length;\n      if (parentType !== \"card\" && oldIndex !== void 0) {\n        data.animating = index === activeIndex || index === oldIndex;\n      }\n      if (index !== activeIndex && length > 2 && injectCarouselScope.loop) {\n        index = processIndex(index, activeIndex, length);\n      }\n      if (parentType === \"card\") {\n        if (parentDirection.value === \"vertical\") {\n          debugWarn(\"Carousel\", \"vertical direction is not supported in card mode\");\n        }\n        data.inStage = Math.round(Math.abs(index - activeIndex)) <= 1;\n        data.active = index === activeIndex;\n        data.translate = calcCardTranslate(index, activeIndex);\n        data.scale = data.active ? 1 : CARD_SCALE;\n      } else {\n        data.active = index === activeIndex;\n        const isVertical = parentDirection.value === \"vertical\";\n        data.translate = calcTranslate(index, activeIndex, isVertical);\n      }\n      data.ready = true;\n    };\n    function handleItemClick() {\n      if (injectCarouselScope && injectCarouselScope.type === \"card\") {\n        const index = injectCarouselScope.items.value.map(d => d.uid).indexOf(instance.uid);\n        injectCarouselScope.setActiveItem(index);\n      }\n    }\n    onMounted(() => {\n      if (injectCarouselScope.addItem) {\n        injectCarouselScope.addItem({\n          uid: instance.uid,\n          ...props,\n          ...toRefs(data),\n          translateItem\n        });\n      }\n    });\n    onUnmounted(() => {\n      if (injectCarouselScope.removeItem) {\n        injectCarouselScope.removeItem(instance.uid);\n      }\n    });\n    return {\n      data,\n      itemStyle,\n      translateItem,\n      type: injectCarouselScope.type,\n      handleItemClick\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["CARD_SCALE","script","defineComponent","name","props","type","String","default","label","Number","setup","instance","getCurrentInstance","data","reactive","hover","translate","scale","active","ready","inStage","animating","injectCarouselScope","inject","parentDirection","computed","direction","itemStyle","translateType","value","style","transform","autoprefixer","processIndex","index","activeIndex","length","calcCardTranslate","parentWidth","_a","root","offsetWidth","calcTranslate","isVertical","distance","offsetHeight","_b","translateItem","oldIndex","parentType","items","loop","debugWarn","Math","round","abs","handleItemClick","map","d","uid","indexOf","setActiveItem","onMounted","addItem","toRefs","onUnmounted","removeItem"],"sources":["../../../../../../packages/components/carousel/src/item.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"data.ready\"\n    class=\"el-carousel__item\"\n    :class=\"{\n      'is-active': data.active,\n      'el-carousel__item--card': type === 'card',\n      'is-in-stage': data.inStage,\n      'is-hover': data.hover,\n      'is-animating': data.animating,\n    }\"\n    :style=\"itemStyle\"\n    @click=\"handleItemClick\"\n  >\n    <div\n      v-if=\"type === 'card'\"\n      v-show=\"!data.active\"\n      class=\"el-carousel__mask\"\n    ></div>\n    <slot></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  reactive,\n  onMounted,\n  inject,\n  computed,\n  toRefs,\n  getCurrentInstance,\n  onUnmounted,\n} from 'vue'\nimport { autoprefixer } from '@element-plus/utils/util'\nimport { debugWarn } from '@element-plus/utils/error'\nimport type { CSSProperties } from 'vue'\nimport type { InjectCarouselScope, ICarouselItemProps } from './carousel'\n\nconst CARD_SCALE = 0.83\nexport default defineComponent({\n  name: 'ElCarouselItem',\n  props: {\n    name: { type: String, default: '' },\n    label: {\n      type: [String, Number],\n      default: '',\n    },\n  },\n  setup(props: ICarouselItemProps) {\n    // instance\n    const instance = getCurrentInstance()\n\n    // data\n    const data = reactive({\n      hover: false,\n      translate: 0,\n      scale: 1,\n      active: false,\n      ready: false,\n      inStage: false,\n      animating: false,\n    })\n\n    // inject\n    const injectCarouselScope: InjectCarouselScope = inject(\n      'injectCarouselScope'\n    )\n\n    // computed\n    const parentDirection = computed(() => {\n      return injectCarouselScope.direction\n    })\n\n    const itemStyle = computed(() => {\n      const translateType =\n        parentDirection.value === 'vertical' ? 'translateY' : 'translateX'\n      const value = `${translateType}(${data.translate}px) scale(${data.scale})`\n      const style: CSSProperties = {\n        transform: value,\n      }\n      return autoprefixer(style)\n    })\n\n    // methods\n\n    function processIndex(index, activeIndex, length) {\n      if (activeIndex === 0 && index === length - 1) {\n        return -1\n      } else if (activeIndex === length - 1 && index === 0) {\n        return length\n      } else if (index < activeIndex - 1 && activeIndex - index >= length / 2) {\n        return length + 1\n      } else if (index > activeIndex + 1 && index - activeIndex >= length / 2) {\n        return -2\n      }\n      return index\n    }\n\n    function calcCardTranslate(index, activeIndex) {\n      const parentWidth = injectCarouselScope.root.value?.offsetWidth || 0\n      if (data.inStage) {\n        return (\n          (parentWidth * ((2 - CARD_SCALE) * (index - activeIndex) + 1)) / 4\n        )\n      } else if (index < activeIndex) {\n        return (-(1 + CARD_SCALE) * parentWidth) / 4\n      } else {\n        return ((3 + CARD_SCALE) * parentWidth) / 4\n      }\n    }\n\n    function calcTranslate(index, activeIndex, isVertical) {\n      const distance =\n        (isVertical\n          ? injectCarouselScope.root.value?.offsetHeight\n          : injectCarouselScope.root.value?.offsetWidth) || 0\n      return distance * (index - activeIndex)\n    }\n\n    const translateItem = (\n      index: number,\n      activeIndex: number,\n      oldIndex: number\n    ) => {\n      const parentType = injectCarouselScope.type\n      const length = injectCarouselScope.items.value.length\n      if (parentType !== 'card' && oldIndex !== undefined) {\n        data.animating = index === activeIndex || index === oldIndex\n      }\n      if (index !== activeIndex && length > 2 && injectCarouselScope.loop) {\n        index = processIndex(index, activeIndex, length)\n      }\n      if (parentType === 'card') {\n        if (parentDirection.value === 'vertical') {\n          debugWarn(\n            'Carousel',\n            'vertical direction is not supported in card mode'\n          )\n        }\n        data.inStage = Math.round(Math.abs(index - activeIndex)) <= 1\n        data.active = index === activeIndex\n        data.translate = calcCardTranslate(index, activeIndex)\n        data.scale = data.active ? 1 : CARD_SCALE\n      } else {\n        data.active = index === activeIndex\n        const isVertical = parentDirection.value === 'vertical'\n        data.translate = calcTranslate(index, activeIndex, isVertical)\n      }\n      data.ready = true\n    }\n\n    function handleItemClick() {\n      if (injectCarouselScope && injectCarouselScope.type === 'card') {\n        const index = injectCarouselScope.items.value\n          .map((d) => d.uid)\n          .indexOf(instance.uid)\n        injectCarouselScope.setActiveItem(index)\n      }\n    }\n\n    // lifecycle\n    onMounted(() => {\n      if (injectCarouselScope.addItem) {\n        injectCarouselScope.addItem({\n          uid: instance.uid,\n          ...props,\n          ...toRefs(data),\n          translateItem,\n        })\n      }\n    })\n\n    onUnmounted(() => {\n      if (injectCarouselScope.removeItem) {\n        injectCarouselScope.removeItem(instance.uid)\n      }\n    })\n\n    return {\n      data,\n      itemStyle,\n      translateItem,\n      type: injectCarouselScope.type,\n      handleItemClick,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}