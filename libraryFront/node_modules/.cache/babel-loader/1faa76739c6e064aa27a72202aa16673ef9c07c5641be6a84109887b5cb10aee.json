{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, createVNode } from 'vue';\nconst _hoisted_1 = [\"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"data-key\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _a, _b, _c;\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_checkbox = resolveComponent(\"el-checkbox\");\n  const _component_el_node_content = resolveComponent(\"el-node-content\");\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"node$\",\n    class: normalizeClass([\"el-tree-node\", {\n      \"is-expanded\": _ctx.expanded,\n      \"is-current\": _ctx.current,\n      \"is-focusable\": !_ctx.disabled,\n      \"is-checked\": !_ctx.disabled && _ctx.checked\n    }]),\n    role: \"treeitem\",\n    tabindex: \"-1\",\n    \"aria-expanded\": _ctx.expanded,\n    \"aria-disabled\": _ctx.disabled,\n    \"aria-checked\": _ctx.checked,\n    \"data-key\": (_a = _ctx.node) == null ? void 0 : _a.key,\n    onClick: _cache[1] || (_cache[1] = withModifiers((...args) => _ctx.handleClick && _ctx.handleClick(...args), [\"stop\"])),\n    onContextmenu: _cache[2] || (_cache[2] = (...args) => _ctx.handleContextMenu && _ctx.handleContextMenu(...args))\n  }, [createElementVNode(\"div\", {\n    class: \"el-tree-node__content\",\n    style: normalizeStyle({\n      paddingLeft: `${(_ctx.node.level - 1) * _ctx.indent}px`\n    })\n  }, [_ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    class: normalizeClass([{\n      \"is-leaf\": (_b = _ctx.node) == null ? void 0 : _b.isLeaf,\n      \"is-hidden\": _ctx.hiddenExpandIcon,\n      expanded: !((_c = _ctx.node) == null ? void 0 : _c.isLeaf) && _ctx.expanded\n    }, \"el-tree-node__expand-icon\"]),\n    onClick: withModifiers(_ctx.handleExpandIconClick, [\"stop\"])\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))]),\n    _: 1\n  }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.showCheckbox ? (openBlock(), createBlock(_component_el_checkbox, {\n    key: 1,\n    \"model-value\": _ctx.checked,\n    indeterminate: _ctx.indeterminate,\n    disabled: _ctx.disabled,\n    onChange: _ctx.handleCheckChange,\n    onClick: _cache[0] || (_cache[0] = withModifiers(() => {}, [\"stop\"]))\n  }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onChange\"])) : createCommentVNode(\"v-if\", true), createVNode(_component_el_node_content, {\n    node: _ctx.node\n  }, null, 8, [\"node\"])], 4)], 42, _hoisted_1);\n}\nexport { render };","map":{"version":3,"names":["createElementBlock","ref","class","normalizeClass","role","tabindex","_ctx","expanded","disabled","checked","_a","node","key","onClick","_cache","withModifiers","args","handleClick","onContextmenu","handleContextMenu","createElementVNode","style","normalizeStyle","paddingLeft","level","indent","icon","openBlock","createBlock","_component_el_icon","handleExpandIconClick","resolveDynamicComponent","showCheckbox","_component_el_checkbox","indeterminate","onChange","handleCheckChange","createVNode","_component_el_node_content"],"sources":["../../../../../../packages/components/tree-v2/src/tree-node.vue?vue&type=template&id=71d8f826&lang.js"],"sourcesContent":["<template>\n  <div\n    ref=\"node$\"\n    class=\"el-tree-node\"\n    :class=\"{\n      'is-expanded': expanded,\n      'is-current': current,\n      'is-focusable': !disabled,\n      'is-checked': !disabled && checked,\n    }\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"disabled\"\n    :aria-checked=\"checked\"\n    :data-key=\"node?.key\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n  >\n    <div\n      class=\"el-tree-node__content\"\n      :style=\"{ paddingLeft: `${(node.level - 1) * indent}px` }\"\n    >\n      <el-icon\n        v-if=\"icon\"\n        :class=\"[\n          {\n            'is-leaf': node?.isLeaf,\n            'is-hidden': hiddenExpandIcon,\n            expanded: !node?.isLeaf && expanded,\n          },\n          'el-tree-node__expand-icon',\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"icon\" />\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"checked\"\n        :indeterminate=\"indeterminate\"\n        :disabled=\"disabled\"\n        @change=\"handleCheckChange\"\n        @click.stop\n      />\n      <el-node-content :node=\"node\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject } from 'vue'\nimport { CaretRight } from '@element-plus/icons-vue'\nimport ElIcon from '@element-plus/components/icon'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport ElNodeContent from './tree-node-content'\nimport {\n  ROOT_TREE_INJECTION_KEY,\n  NODE_CONTEXTMENU,\n  treeNodeEmits,\n  treeNodeProps,\n} from './virtual-tree'\n\nconst DEFAULT_ICON = 'caret-right'\n\nexport default defineComponent({\n  name: 'ElTreeNode',\n  components: {\n    ElIcon,\n    CaretRight,\n    ElCheckbox,\n    ElNodeContent,\n  },\n  props: treeNodeProps,\n  emits: treeNodeEmits,\n  setup(props, { emit }) {\n    const tree = inject(ROOT_TREE_INJECTION_KEY)\n\n    const indent = computed(() => {\n      return tree?.props.indent ?? 16\n    })\n\n    const icon = computed(() => {\n      return tree?.props.icon ?? DEFAULT_ICON\n    })\n\n    const handleClick = () => {\n      emit('click', props.node)\n    }\n    const handleExpandIconClick = () => {\n      emit('toggle', props.node)\n    }\n    const handleCheckChange = (value: boolean) => {\n      emit('check', props.node, value)\n    }\n    const handleContextMenu = (event: Event) => {\n      if (tree?.instance?.vnode?.props?.['onNodeContextmenu']) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n      tree?.ctx.emit(NODE_CONTEXTMENU, event, props.node?.data, props.node)\n    }\n\n    return {\n      indent,\n      icon,\n      handleClick,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleContextMenu,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;sBACEA,kBAAA;IACEC,GAAA,EAAI;IACJC,KAAA,EAAAC,cAAA,EAAM;;;;;;IAONC,IAAA,EAAK;IACLC,QAAA,EAAS;IACR,iBAAeC,IAAA,CAAAC,QAAA;IACf,iBAAeD,IAAA,CAAAE,QAAA;IACf,gBAAcF,IAAA,CAAAG,OAAA;IACd,YAAU,CAAAC,EAAA,GAAAJ,IAAA,CAAAK,IAAA,qBAAAD,EAAA,CAAME,GAAA;IAChBC,OAAA,EAAAC,MAAA,QAAAA,MAAA,MAAAC,aAAA,KAAAC,IAAA,KAAYV,IAAA,CAAAW,WAAA,IAAAX,IAAA,CAAAW,WAAA,IAAAD,IAAA;IACZE,aAAA,EAAAJ,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAaV,IAAA,CAAAa,iBAAA,IAAAb,IAAA,CAAAa,iBAAA,IAAAH,IAAA;MAEdI,kBAAA;IACElB,KAAA,EAAM;IACLmB,KAAA,EAAAC,cAAA;MAAAC,WAAA,KAA0B,CAAAjB,IAAA,CAAAK,IAAA,CAAKa,KAAA,QAAalB,IAAA,CAAAmB,MAAA;IAAA;MAGrCnB,IAAA,CAAAoB,IAAA,IAAAC,SAAA,IADRC,WAAA,CAAAC,kBAAA;;IAEG3B,KAAA,EAAAC,cAAA,E;;;;;IAQAU,OAAA,EAAAE,aAAA,CAAYT,IAAA,CAAAwB,qBAAA;;qBAEb,Q,aAAAF,WAAA,CAAAG,uBAAA,CAAgBzB,IAAA,CAAAoB,IAAA,I;;mEAGVpB,IAAA,CAAA0B,YAAA,IAAAL,SAAA,IADRC,WAAA,CAAAK,sBAAA;;IAEG,eAAa3B,IAAA,CAAAG,OAAA;IACbyB,aAAA,EAAe5B,IAAA,CAAA4B,aAAA;IACf1B,QAAA,EAAUF,IAAA,CAAAE,QAAA;IACV2B,QAAA,EAAQ7B,IAAA,CAAA8B,iBAAA;IACRvB,OAAA,EAAAC,MAAA,QAAAA,MAAA,MAAAC,aAAA,CAAD,O;6GAEFsB,WAAA,CAAAC,0BAAA;IAAkB3B,IAAA,EAAML,IAAA,CAAAK;EAAA,sB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}