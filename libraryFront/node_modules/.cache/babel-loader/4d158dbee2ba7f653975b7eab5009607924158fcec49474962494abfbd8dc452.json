{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watchEffect, watch, unref, computed, onMounted, nextTick, onUnmounted } from 'vue';\nimport throttle from 'lodash/throttle';\nimport { addResizeListener, removeResizeListener } from '../../../../utils/resize-event.mjs';\nimport { on, off } from '../../../../utils/dom.mjs';\nimport '../../../../hooks/index.mjs';\nimport { parseHeight } from '../util.mjs';\nimport { useSize } from '../../../../hooks/use-common-props/index.mjs';\nfunction useStyle(props, layout, store, table) {\n  const isHidden = ref(false);\n  const renderExpanded = ref(null);\n  const resizeProxyVisible = ref(false);\n  const setDragVisible = visible => {\n    resizeProxyVisible.value = visible;\n  };\n  const resizeState = ref({\n    width: null,\n    height: null\n  });\n  const isGroup = ref(false);\n  watchEffect(() => {\n    layout.setHeight(props.height);\n  });\n  watchEffect(() => {\n    layout.setMaxHeight(props.maxHeight);\n  });\n  watch(() => [props.currentRowKey, store.states.rowKey], ([currentRowKey, rowKey]) => {\n    if (!unref(rowKey)) return;\n    store.setCurrentRowKey(`${currentRowKey}`);\n  }, {\n    immediate: true\n  });\n  watch(() => props.data, data => {\n    table.store.commit(\"setData\", data);\n  }, {\n    immediate: true,\n    deep: true\n  });\n  watchEffect(() => {\n    if (props.expandRowKeys) {\n      store.setExpandRowKeysAdapter(props.expandRowKeys);\n    }\n  });\n  const handleMouseLeave = () => {\n    table.store.commit(\"setHoverRow\", null);\n    if (table.hoverState) table.hoverState = null;\n  };\n  const handleHeaderFooterMousewheel = (event, data) => {\n    const {\n      pixelX,\n      pixelY\n    } = data;\n    if (Math.abs(pixelX) >= Math.abs(pixelY)) {\n      table.refs.bodyWrapper.scrollLeft += data.pixelX / 5;\n    }\n  };\n  const shouldUpdateHeight = computed(() => {\n    return props.height || props.maxHeight || store.states.fixedColumns.value.length > 0 || store.states.rightFixedColumns.value.length > 0;\n  });\n  const doLayout = () => {\n    if (shouldUpdateHeight.value) {\n      layout.updateElsHeight();\n    }\n    layout.updateColumnsWidth();\n    requestAnimationFrame(syncPostion);\n  };\n  onMounted(async () => {\n    setScrollClass(\"is-scrolling-left\");\n    store.updateColumns();\n    await nextTick();\n    bindEvents();\n    requestAnimationFrame(doLayout);\n    resizeState.value = {\n      width: table.vnode.el.offsetWidth,\n      height: table.vnode.el.offsetHeight\n    };\n    store.states.columns.value.forEach(column => {\n      if (column.filteredValue && column.filteredValue.length) {\n        table.store.commit(\"filterChange\", {\n          column,\n          values: column.filteredValue,\n          silent: true\n        });\n      }\n    });\n    table.$ready = true;\n  });\n  const setScrollClassByEl = (el, className) => {\n    if (!el) return;\n    const classList = Array.from(el.classList).filter(item => !item.startsWith(\"is-scrolling-\"));\n    classList.push(layout.scrollX.value ? className : \"is-scrolling-none\");\n    el.className = classList.join(\" \");\n  };\n  const setScrollClass = className => {\n    const {\n      bodyWrapper\n    } = table.refs;\n    setScrollClassByEl(bodyWrapper, className);\n  };\n  const syncPostion = throttle(function () {\n    if (!table.refs.bodyWrapper) return;\n    const {\n      scrollLeft,\n      scrollTop,\n      offsetWidth,\n      scrollWidth\n    } = table.refs.bodyWrapper;\n    const {\n      headerWrapper,\n      footerWrapper,\n      fixedBodyWrapper,\n      rightFixedBodyWrapper\n    } = table.refs;\n    if (headerWrapper) headerWrapper.scrollLeft = scrollLeft;\n    if (footerWrapper) footerWrapper.scrollLeft = scrollLeft;\n    if (fixedBodyWrapper) fixedBodyWrapper.scrollTop = scrollTop;\n    if (rightFixedBodyWrapper) rightFixedBodyWrapper.scrollTop = scrollTop;\n    const maxScrollLeftPosition = scrollWidth - offsetWidth - 1;\n    if (scrollLeft >= maxScrollLeftPosition) {\n      setScrollClass(\"is-scrolling-right\");\n    } else if (scrollLeft === 0) {\n      setScrollClass(\"is-scrolling-left\");\n    } else {\n      setScrollClass(\"is-scrolling-middle\");\n    }\n  }, 10);\n  const bindEvents = () => {\n    table.refs.bodyWrapper.addEventListener(\"scroll\", syncPostion, {\n      passive: true\n    });\n    if (props.fit) {\n      addResizeListener(table.vnode.el, resizeListener);\n    } else {\n      on(window, \"resize\", doLayout);\n    }\n  };\n  onUnmounted(() => {\n    unbindEvents();\n  });\n  const unbindEvents = () => {\n    var _a;\n    (_a = table.refs.bodyWrapper) == null ? void 0 : _a.removeEventListener(\"scroll\", syncPostion, true);\n    if (props.fit) {\n      removeResizeListener(table.vnode.el, resizeListener);\n    } else {\n      off(window, \"resize\", doLayout);\n    }\n  };\n  const resizeListener = () => {\n    if (!table.$ready) return;\n    let shouldUpdateLayout = false;\n    const el = table.vnode.el;\n    const {\n      width: oldWidth,\n      height: oldHeight\n    } = resizeState.value;\n    const width = el.offsetWidth;\n    if (oldWidth !== width) {\n      shouldUpdateLayout = true;\n    }\n    const height = el.offsetHeight;\n    if ((props.height || shouldUpdateHeight.value) && oldHeight !== height) {\n      shouldUpdateLayout = true;\n    }\n    if (shouldUpdateLayout) {\n      resizeState.value = {\n        width,\n        height\n      };\n      doLayout();\n    }\n  };\n  const tableSize = useSize();\n  const bodyWidth = computed(() => {\n    const {\n      bodyWidth: bodyWidth_,\n      scrollY,\n      gutterWidth\n    } = layout;\n    return bodyWidth_.value ? `${bodyWidth_.value - (scrollY.value ? gutterWidth : 0)}px` : \"\";\n  });\n  const bodyHeight = computed(() => {\n    const headerHeight = layout.headerHeight.value || 0;\n    const bodyHeight2 = layout.bodyHeight.value;\n    const footerHeight = layout.footerHeight.value || 0;\n    if (props.height) {\n      return {\n        height: bodyHeight2 ? `${bodyHeight2}px` : \"\"\n      };\n    } else if (props.maxHeight) {\n      const maxHeight = parseHeight(props.maxHeight);\n      if (typeof maxHeight === \"number\") {\n        return {\n          \"max-height\": `${maxHeight - footerHeight - (props.showHeader ? headerHeight : 0)}px`\n        };\n      }\n    }\n    return {};\n  });\n  const emptyBlockStyle = computed(() => {\n    if (props.data && props.data.length) return null;\n    let height = \"100%\";\n    if (layout.appendHeight.value) {\n      height = `calc(100% - ${layout.appendHeight.value}px)`;\n    }\n    return {\n      width: bodyWidth.value,\n      height\n    };\n  });\n  const handleFixedMousewheel = (event, data) => {\n    const bodyWrapper = table.refs.bodyWrapper;\n    if (Math.abs(data.spinY) > 0) {\n      const currentScrollTop = bodyWrapper.scrollTop;\n      if (data.pixelY < 0 && currentScrollTop !== 0) {\n        event.preventDefault();\n      }\n      if (data.pixelY > 0 && bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop) {\n        event.preventDefault();\n      }\n      bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5);\n    } else {\n      bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5);\n    }\n  };\n  const fixedHeight = computed(() => {\n    if (props.maxHeight) {\n      if (props.showSummary) {\n        return {\n          bottom: 0\n        };\n      }\n      return {\n        bottom: layout.scrollX.value && props.data.length ? `${layout.gutterWidth}px` : \"\"\n      };\n    } else {\n      if (props.showSummary) {\n        return {\n          height: layout.tableHeight.value ? `${layout.tableHeight.value}px` : \"\"\n        };\n      }\n      return {\n        height: layout.viewportHeight.value ? `${layout.viewportHeight.value}px` : \"\"\n      };\n    }\n  });\n  const fixedBodyHeight = computed(() => {\n    if (props.height) {\n      return {\n        height: layout.fixedBodyHeight.value ? `${layout.fixedBodyHeight.value}px` : \"\"\n      };\n    } else if (props.maxHeight) {\n      let maxHeight = parseHeight(props.maxHeight);\n      if (typeof maxHeight === \"number\") {\n        maxHeight = layout.scrollX.value ? maxHeight - layout.gutterWidth : maxHeight;\n        if (props.showHeader) {\n          maxHeight -= layout.headerHeight.value;\n        }\n        maxHeight -= layout.footerHeight.value;\n        return {\n          \"max-height\": `${maxHeight}px`\n        };\n      }\n    }\n    return {};\n  });\n  return {\n    isHidden,\n    renderExpanded,\n    setDragVisible,\n    isGroup,\n    handleMouseLeave,\n    handleHeaderFooterMousewheel,\n    tableSize,\n    bodyHeight,\n    emptyBlockStyle,\n    handleFixedMousewheel,\n    fixedHeight,\n    fixedBodyHeight,\n    resizeProxyVisible,\n    bodyWidth,\n    resizeState,\n    doLayout\n  };\n}\nexport { useStyle as default };","map":{"version":3,"names":["useStyle","props","layout","store","table","isHidden","ref","renderExpanded","resizeProxyVisible","setDragVisible","visible","value","resizeState","width","height","isGroup","watchEffect","setHeight","setMaxHeight","maxHeight","watch","currentRowKey","states","rowKey","unref","setCurrentRowKey","immediate","data","commit","deep","expandRowKeys","setExpandRowKeysAdapter","handleMouseLeave","hoverState","handleHeaderFooterMousewheel","event","pixelX","pixelY","Math","abs","refs","bodyWrapper","scrollLeft","shouldUpdateHeight","computed","fixedColumns","length","rightFixedColumns","doLayout","updateElsHeight","updateColumnsWidth","requestAnimationFrame","syncPostion","onMounted","setScrollClass","updateColumns","nextTick","bindEvents","vnode","el","offsetWidth","offsetHeight","columns","forEach","column","filteredValue","values","silent","$ready","setScrollClassByEl","className","classList","Array","from","filter","item","startsWith","push","scrollX","join","throttle","scrollTop","scrollWidth","headerWrapper","footerWrapper","fixedBodyWrapper","rightFixedBodyWrapper","maxScrollLeftPosition","addEventListener","passive","fit","addResizeListener","resizeListener","on","window","onUnmounted","unbindEvents","_a","removeEventListener","removeResizeListener","off","shouldUpdateLayout","oldWidth","oldHeight","tableSize","useSize","bodyWidth","bodyWidth_","scrollY","gutterWidth","bodyHeight","headerHeight","bodyHeight2","footerHeight","parseHeight","showHeader","emptyBlockStyle","appendHeight","handleFixedMousewheel","spinY","currentScrollTop","preventDefault","scrollHeight","clientHeight","ceil","fixedHeight","showSummary","bottom","tableHeight","viewportHeight","fixedBodyHeight"],"sources":["../../../../../../../packages/components/table/src/table/style-helper.ts"],"sourcesContent":["import {\n  onMounted,\n  onUnmounted,\n  computed,\n  ref,\n  watchEffect,\n  watch,\n  unref,\n  nextTick,\n} from 'vue'\nimport throttle from 'lodash/throttle'\nimport {\n  addResizeListener,\n  removeResizeListener,\n} from '@element-plus/utils/resize-event'\nimport { on, off } from '@element-plus/utils/dom'\nimport { useSize } from '@element-plus/hooks'\nimport { parseHeight } from '../util'\n\nimport type { ResizableElement } from '@element-plus/utils/resize-event'\nimport type { Table, TableProps } from './defaults'\nimport type { Store } from '../store'\nimport type TableLayout from '../table-layout'\nimport type { TableColumnCtx } from '../table-column/defaults'\n\nfunction useStyle<T>(\n  props: TableProps<T>,\n  layout: TableLayout<T>,\n  store: Store<T>,\n  table: Table<T>\n) {\n  const isHidden = ref(false)\n  const renderExpanded = ref(null)\n  const resizeProxyVisible = ref(false)\n  const setDragVisible = (visible: boolean) => {\n    resizeProxyVisible.value = visible\n  }\n  const resizeState = ref({\n    width: null,\n    height: null,\n  })\n  const isGroup = ref(false)\n\n  watchEffect(() => {\n    layout.setHeight(props.height)\n  })\n  watchEffect(() => {\n    layout.setMaxHeight(props.maxHeight)\n  })\n  watch(\n    () => [props.currentRowKey, store.states.rowKey],\n    ([currentRowKey, rowKey]) => {\n      if (!unref(rowKey)) return\n      store.setCurrentRowKey(`${currentRowKey}`)\n    },\n    {\n      immediate: true,\n    }\n  )\n  watch(\n    () => props.data,\n    (data) => {\n      table.store.commit('setData', data)\n    },\n    {\n      immediate: true,\n      deep: true,\n    }\n  )\n  watchEffect(() => {\n    if (props.expandRowKeys) {\n      store.setExpandRowKeysAdapter(props.expandRowKeys)\n    }\n  })\n\n  const handleMouseLeave = () => {\n    table.store.commit('setHoverRow', null)\n    if (table.hoverState) table.hoverState = null\n  }\n\n  const handleHeaderFooterMousewheel = (event, data) => {\n    const { pixelX, pixelY } = data\n    if (Math.abs(pixelX) >= Math.abs(pixelY)) {\n      table.refs.bodyWrapper.scrollLeft += data.pixelX / 5\n    }\n  }\n\n  const shouldUpdateHeight = computed(() => {\n    return (\n      props.height ||\n      props.maxHeight ||\n      store.states.fixedColumns.value.length > 0 ||\n      store.states.rightFixedColumns.value.length > 0\n    )\n  })\n\n  const doLayout = () => {\n    if (shouldUpdateHeight.value) {\n      layout.updateElsHeight()\n    }\n    layout.updateColumnsWidth()\n    requestAnimationFrame(syncPostion)\n  }\n  onMounted(async () => {\n    setScrollClass('is-scrolling-left')\n    store.updateColumns()\n    await nextTick()\n    bindEvents()\n    requestAnimationFrame(doLayout)\n\n    resizeState.value = {\n      width: table.vnode.el.offsetWidth,\n      height: table.vnode.el.offsetHeight,\n    }\n\n    // init filters\n    store.states.columns.value.forEach((column: TableColumnCtx<T>) => {\n      if (column.filteredValue && column.filteredValue.length) {\n        table.store.commit('filterChange', {\n          column,\n          values: column.filteredValue,\n          silent: true,\n        })\n      }\n    })\n    table.$ready = true\n  })\n  const setScrollClassByEl = (el: HTMLElement, className: string) => {\n    if (!el) return\n    const classList = Array.from(el.classList).filter(\n      (item) => !item.startsWith('is-scrolling-')\n    )\n    classList.push(layout.scrollX.value ? className : 'is-scrolling-none')\n    el.className = classList.join(' ')\n  }\n  const setScrollClass = (className: string) => {\n    const { bodyWrapper } = table.refs\n    setScrollClassByEl(bodyWrapper, className)\n  }\n  const syncPostion = throttle(function () {\n    if (!table.refs.bodyWrapper) return\n    const { scrollLeft, scrollTop, offsetWidth, scrollWidth } =\n      table.refs.bodyWrapper\n    const {\n      headerWrapper,\n      footerWrapper,\n      fixedBodyWrapper,\n      rightFixedBodyWrapper,\n    } = table.refs\n    if (headerWrapper) headerWrapper.scrollLeft = scrollLeft\n    if (footerWrapper) footerWrapper.scrollLeft = scrollLeft\n    if (fixedBodyWrapper) fixedBodyWrapper.scrollTop = scrollTop\n    if (rightFixedBodyWrapper) rightFixedBodyWrapper.scrollTop = scrollTop\n    const maxScrollLeftPosition = scrollWidth - offsetWidth - 1\n    if (scrollLeft >= maxScrollLeftPosition) {\n      setScrollClass('is-scrolling-right')\n    } else if (scrollLeft === 0) {\n      setScrollClass('is-scrolling-left')\n    } else {\n      setScrollClass('is-scrolling-middle')\n    }\n  }, 10)\n\n  const bindEvents = () => {\n    table.refs.bodyWrapper.addEventListener('scroll', syncPostion, {\n      passive: true,\n    })\n    if (props.fit) {\n      addResizeListener(table.vnode.el as ResizableElement, resizeListener)\n    } else {\n      on(window, 'resize', doLayout)\n    }\n  }\n  onUnmounted(() => {\n    unbindEvents()\n  })\n  const unbindEvents = () => {\n    table.refs.bodyWrapper?.removeEventListener('scroll', syncPostion, true)\n    if (props.fit) {\n      removeResizeListener(table.vnode.el as ResizableElement, resizeListener)\n    } else {\n      off(window, 'resize', doLayout)\n    }\n  }\n  const resizeListener = () => {\n    if (!table.$ready) return\n    let shouldUpdateLayout = false\n    const el = table.vnode.el\n    const { width: oldWidth, height: oldHeight } = resizeState.value\n\n    const width = el.offsetWidth\n    if (oldWidth !== width) {\n      shouldUpdateLayout = true\n    }\n\n    const height = el.offsetHeight\n    if ((props.height || shouldUpdateHeight.value) && oldHeight !== height) {\n      shouldUpdateLayout = true\n    }\n\n    if (shouldUpdateLayout) {\n      resizeState.value = {\n        width,\n        height,\n      }\n      doLayout()\n    }\n  }\n  const tableSize = useSize()\n  const bodyWidth = computed(() => {\n    const { bodyWidth: bodyWidth_, scrollY, gutterWidth } = layout\n    return bodyWidth_.value\n      ? `${(bodyWidth_.value as number) - (scrollY.value ? gutterWidth : 0)}px`\n      : ''\n  })\n  const bodyHeight = computed(() => {\n    const headerHeight = layout.headerHeight.value || 0\n    const bodyHeight = layout.bodyHeight.value\n    const footerHeight = layout.footerHeight.value || 0\n    if (props.height) {\n      return {\n        height: bodyHeight ? `${bodyHeight}px` : '',\n      }\n    } else if (props.maxHeight) {\n      const maxHeight = parseHeight(props.maxHeight)\n      if (typeof maxHeight === 'number') {\n        return {\n          'max-height': `${\n            maxHeight - footerHeight - (props.showHeader ? headerHeight : 0)\n          }px`,\n        }\n      }\n    }\n    return {}\n  })\n  const emptyBlockStyle = computed(() => {\n    if (props.data && props.data.length) return null\n    let height = '100%'\n    if (layout.appendHeight.value) {\n      height = `calc(100% - ${layout.appendHeight.value}px)`\n    }\n    return {\n      width: bodyWidth.value,\n      height,\n    }\n  })\n  /**\n   * fix layout\n   */\n  const handleFixedMousewheel = (event, data) => {\n    const bodyWrapper = table.refs.bodyWrapper\n    if (Math.abs(data.spinY) > 0) {\n      const currentScrollTop = bodyWrapper.scrollTop\n      if (data.pixelY < 0 && currentScrollTop !== 0) {\n        event.preventDefault()\n      }\n      if (\n        data.pixelY > 0 &&\n        bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop\n      ) {\n        event.preventDefault()\n      }\n      bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5)\n    } else {\n      bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5)\n    }\n  }\n  const fixedHeight = computed(() => {\n    if (props.maxHeight) {\n      if (props.showSummary) {\n        return {\n          bottom: 0,\n        }\n      }\n      return {\n        bottom:\n          layout.scrollX.value && props.data.length\n            ? `${layout.gutterWidth}px`\n            : '',\n      }\n    } else {\n      if (props.showSummary) {\n        return {\n          height: layout.tableHeight.value\n            ? `${layout.tableHeight.value}px`\n            : '',\n        }\n      }\n      return {\n        height: layout.viewportHeight.value\n          ? `${layout.viewportHeight.value}px`\n          : '',\n      }\n    }\n  })\n  const fixedBodyHeight = computed(() => {\n    if (props.height) {\n      return {\n        height: layout.fixedBodyHeight.value\n          ? `${layout.fixedBodyHeight.value}px`\n          : '',\n      }\n    } else if (props.maxHeight) {\n      let maxHeight = parseHeight(props.maxHeight)\n      if (typeof maxHeight === 'number') {\n        maxHeight = layout.scrollX.value\n          ? maxHeight - layout.gutterWidth\n          : maxHeight\n        if (props.showHeader) {\n          maxHeight -= layout.headerHeight.value\n        }\n        maxHeight -= layout.footerHeight.value\n        return {\n          'max-height': `${maxHeight}px`,\n        }\n      }\n    }\n    return {}\n  })\n\n  return {\n    isHidden,\n    renderExpanded,\n    setDragVisible,\n    isGroup,\n    handleMouseLeave,\n    handleHeaderFooterMousewheel,\n    tableSize,\n    bodyHeight,\n    emptyBlockStyle,\n    handleFixedMousewheel,\n    fixedHeight,\n    fixedBodyHeight,\n    resizeProxyVisible,\n    bodyWidth,\n    resizeState,\n    doLayout,\n  }\n}\n\nexport default useStyle\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}