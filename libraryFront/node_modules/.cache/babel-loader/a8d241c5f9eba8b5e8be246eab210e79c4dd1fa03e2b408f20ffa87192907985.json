{"ast":null,"code":"import { defineComponent, inject, h } from 'vue';\nvar script = defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n  setup(props) {\n    const nodeInstance = inject(\"NodeInstance\");\n    const tree = inject(\"RootTree\");\n    return () => {\n      const node = props.node;\n      const {\n        data,\n        store\n      } = node;\n      return props.renderContent ? props.renderContent(h, {\n        _self: nodeInstance,\n        node,\n        data,\n        store\n      }) : tree.ctx.slots.default ? tree.ctx.slots.default({\n        node,\n        data\n      }) : h(\"span\", {\n        class: \"el-tree-node__label\"\n      }, [node.label]);\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","props","node","type","Object","required","renderContent","Function","setup","nodeInstance","inject","tree","data","store","h","_self","ctx","slots","default","class","label"],"sources":["../../../../../../packages/components/tree/src/tree-node-content.vue"],"sourcesContent":["<script lang=\"ts\">\nimport { h, defineComponent, inject } from 'vue'\n\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : tree.ctx.slots.default\n        ? tree.ctx.slots.default({ node, data })\n        : h('span', { class: 'el-tree-node__label' }, [node.label])\n    }\n  },\n})\n</script>\n"],"mappings":";AAMA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAO;IACLC,IAAA,EAAM;MACJC,IAAA,EAAMC,MAAA;MACNC,QAAA,EAAU;IAAA;IAEZC,aAAA,EAAeC;EAAA;EAEjBC,MAAMP,KAAA,EAAO;IACX,MAAMQ,YAAA,GAAeC,MAAA,CAAkC;IACvD,MAAMC,IAAA,GAAOD,MAAA,CAAqB;IAClC,OAAO,MAAM;MACX,MAAMR,IAAA,GAAOD,KAAA,CAAMC,IAAA;MACnB,MAAM;QAAEU,IAAA;QAAMC;MAAA,IAAUX,IAAA;MACxB,OAAOD,KAAA,CAAMK,aAAA,GACTL,KAAA,CAAMK,aAAA,CAAcQ,CAAA,EAAG;QAAEC,KAAA,EAAON,YAAA;QAAcP,IAAA;QAAMU,IAAA;QAAMC;MAAA,KAC1DF,IAAA,CAAKK,GAAA,CAAIC,KAAA,CAAMC,OAAA,GACfP,IAAA,CAAKK,GAAA,CAAIC,KAAA,CAAMC,OAAA,CAAQ;QAAEhB,IAAA;QAAMU;MAAA,KAC/BE,CAAA,CAAE,QAAQ;QAAEK,KAAA,EAAO;MAAA,GAAyB,CAACjB,IAAA,CAAKkB,KAAA;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}