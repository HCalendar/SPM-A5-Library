{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction buildModifier(props, externalModifiers = []) {\n  const {\n    arrow,\n    arrowOffset,\n    offset,\n    gpuAcceleration,\n    fallbackPlacements\n  } = props;\n  const modifiers = [{\n    name: \"offset\",\n    options: {\n      offset: [0, offset != null ? offset : 12]\n    }\n  }, {\n    name: \"preventOverflow\",\n    options: {\n      padding: {\n        top: 2,\n        bottom: 2,\n        left: 5,\n        right: 5\n      }\n    }\n  }, {\n    name: \"flip\",\n    options: {\n      padding: 5,\n      fallbackPlacements: fallbackPlacements != null ? fallbackPlacements : []\n    }\n  }, {\n    name: \"computeStyles\",\n    options: {\n      gpuAcceleration,\n      adaptive: gpuAcceleration\n    }\n  }];\n  if (arrow) {\n    modifiers.push({\n      name: \"arrow\",\n      options: {\n        element: arrow,\n        padding: arrowOffset != null ? arrowOffset : 5\n      }\n    });\n  }\n  modifiers.push(...externalModifiers);\n  return modifiers;\n}\nexport { buildModifier as default };","map":{"version":3,"names":["props","externalModifiers","arrow","arrowOffset","offset","gpuAcceleration","fallbackPlacements","modifiers","name","options","padding","top","bottom","left","right","adaptive","push","element"],"sources":["../../../../../../../packages/components/popper/src/use-popper/build-modifiers.ts"],"sourcesContent":["import type { StrictModifiers, Placement } from '@popperjs/core'\n\ninterface ModifierProps {\n  offset?: number\n  arrow?: HTMLElement\n  arrowOffset?: number\n  gpuAcceleration?: boolean\n  fallbackPlacements?: Array<Placement>\n}\n\nexport default function buildModifier(\n  props: ModifierProps,\n  externalModifiers: StrictModifiers[] = []\n) {\n  const { arrow, arrowOffset, offset, gpuAcceleration, fallbackPlacements } =\n    props\n\n  const modifiers: Array<StrictModifiers> = [\n    {\n      name: 'offset',\n      options: {\n        offset: [0, offset ?? 12],\n      },\n    },\n    {\n      name: 'preventOverflow',\n      options: {\n        padding: {\n          top: 2,\n          bottom: 2,\n          left: 5,\n          right: 5,\n        },\n      },\n    },\n    {\n      name: 'flip',\n      options: {\n        padding: 5,\n        fallbackPlacements: fallbackPlacements ?? [],\n      },\n    },\n    {\n      name: 'computeStyles',\n      options: {\n        gpuAcceleration,\n        adaptive: gpuAcceleration,\n      },\n    },\n    // tippyModifier,\n  ]\n\n  if (arrow) {\n    modifiers.push({\n      name: 'arrow',\n      options: {\n        element: arrow,\n        // the arrow size is an equailateral triangle with 10px side length, the 3rd side length ~ 14.1px\n        // adding a offset to the ceil of 4.1 should be 5 this resolves the problem of arrow overflowing out of popper.\n        padding: arrowOffset ?? 5,\n      },\n    })\n  }\n\n  modifiers.push(...externalModifiers)\n  return modifiers\n}\n"],"mappings":";uBAWEA,KAAA,EACAC,iBAAA,GAAuC,IACvC;EACA,MAAM;IAAEC,KAAA;IAAOC,WAAA;IAAaC,MAAA;IAAQC,eAAA;IAAiBC;EAAA,IACnDN,KAAA;EAEF,MAAMO,SAAA,GAAoC,CACxC;IACEC,IAAA,EAAM;IACNC,OAAA,EAAS;MACPL,MAAA,EAAQ,CAAC,GAAGA,MAAA,WAAAA,MAAA,GAAU;IAAA;EAAA,GAG1B;IACEI,IAAA,EAAM;IACNC,OAAA,EAAS;MACPC,OAAA,EAAS;QACPC,GAAA,EAAK;QACLC,MAAA,EAAQ;QACRC,IAAA,EAAM;QACNC,KAAA,EAAO;MAAA;IAAA;EAAA,GAIb;IACEN,IAAA,EAAM;IACNC,OAAA,EAAS;MACPC,OAAA,EAAS;MACTJ,kBAAA,EAAoBA,kBAAA,WAAAA,kBAAA,GAAsB;IAAA;EAAA,GAG9C;IACEE,IAAA,EAAM;IACNC,OAAA,EAAS;MACPJ,eAAA;MACAU,QAAA,EAAUV;IAAA;EAAA;EAMhB,IAAIH,KAAA,EAAO;IACTK,SAAA,CAAUS,IAAA,CAAK;MACbR,IAAA,EAAM;MACNC,OAAA,EAAS;QACPQ,OAAA,EAASf,KAAA;QAGTQ,OAAA,EAASP,WAAA,WAAAA,WAAA,GAAe;MAAA;IAAA;EAAA;EAK9BI,SAAA,CAAUS,IAAA,CAAK,GAAGf,iBAAA;EAClB,OAAOM,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}