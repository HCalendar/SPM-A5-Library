{"ast":null,"code":"import { defineComponent, computed } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Close } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport { tagProps, tagEmits } from './tag.mjs';\nimport { useSize } from '../../../hooks/use-common-props/index.mjs';\nvar script = defineComponent({\n  name: \"ElTag\",\n  components: {\n    ElIcon,\n    Close\n  },\n  props: tagProps,\n  emits: tagEmits,\n  setup(props, {\n    emit\n  }) {\n    const tagSize = useSize();\n    const classes = computed(() => {\n      const {\n        type,\n        hit,\n        effect\n      } = props;\n      return [\"el-tag\", type ? `el-tag--${type}` : \"\", tagSize.value ? `el-tag--${tagSize.value}` : \"\", effect ? `el-tag--${effect}` : \"\", hit && \"is-hit\"];\n    });\n    const handleClose = event => {\n      event.stopPropagation();\n      emit(\"close\", event);\n    };\n    const handleClick = event => {\n      emit(\"click\", event);\n    };\n    return {\n      classes,\n      handleClose,\n      handleClick\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","components","ElIcon","Close","props","tagProps","emits","tagEmits","setup","emit","tagSize","useSize","classes","computed","type","hit","effect","value","handleClose","event","stopPropagation","handleClick"],"sources":["../../../../../../packages/components/tag/src/tag.vue"],"sourcesContent":["<template>\n  <span\n    v-if=\"!disableTransitions\"\n    :class=\"classes\"\n    :style=\"{ backgroundColor: color }\"\n    @click=\"handleClick\"\n  >\n    <slot></slot>\n    <el-icon v-if=\"closable\" class=\"el-tag__close\" @click=\"handleClose\">\n      <close />\n    </el-icon>\n  </span>\n  <transition v-else name=\"el-zoom-in-center\">\n    <span\n      :class=\"classes\"\n      :style=\"{ backgroundColor: color }\"\n      @click=\"handleClick\"\n    >\n      <slot></slot>\n      <el-icon v-if=\"closable\" class=\"el-tag__close\" @click=\"handleClose\">\n        <close />\n      </el-icon>\n    </span>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { Close } from '@element-plus/icons-vue'\n\nimport { useSize } from '@element-plus/hooks'\nimport { tagProps, tagEmits } from './tag'\n\nexport default defineComponent({\n  name: 'ElTag',\n\n  components: { ElIcon, Close },\n\n  props: tagProps,\n  emits: tagEmits,\n\n  setup(props, { emit }) {\n    const tagSize = useSize()\n    const classes = computed(() => {\n      const { type, hit, effect } = props\n      return [\n        'el-tag',\n        type ? `el-tag--${type}` : '',\n        tagSize.value ? `el-tag--${tagSize.value}` : '',\n        effect ? `el-tag--${effect}` : '',\n        hit && 'is-hit',\n      ]\n    })\n\n    // methods\n    const handleClose = (event: MouseEvent) => {\n      event.stopPropagation()\n      emit('close', event)\n    }\n\n    const handleClick = (event: MouseEvent) => {\n      emit('click', event)\n    }\n\n    return {\n      classes,\n      handleClose,\n      handleClick,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;AAkCA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EAENC,UAAA,EAAY;IAAEC,MAAA;IAAQC;EAAA;EAEtBC,KAAA,EAAOC,QAAA;EACPC,KAAA,EAAOC,QAAA;EAEPC,MAAMJ,KAAA,EAAO;IAAEK;EAAA,GAAQ;IACrB,MAAMC,OAAA,GAAUC,OAAA;IAChB,MAAMC,OAAA,GAAUC,QAAA,CAAS,MAAM;MAC7B,MAAM;QAAEC,IAAA;QAAMC,GAAA;QAAKC;MAAA,IAAWZ,KAAA;MAC9B,OAAO,CACL,UACAU,IAAA,GAAO,WAAWA,IAAA,KAAS,IAC3BJ,OAAA,CAAQO,KAAA,GAAQ,WAAWP,OAAA,CAAQO,KAAA,KAAU,IAC7CD,MAAA,GAAS,WAAWA,MAAA,KAAW,IAC/BD,GAAA,IAAO;IAAA;IAKX,MAAMG,WAAA,GAAeC,KAAA,IAAsB;MACzCA,KAAA,CAAMC,eAAA;MACNX,IAAA,CAAK,SAASU,KAAA;IAAA;IAGhB,MAAME,WAAA,GAAeF,KAAA,IAAsB;MACzCV,IAAA,CAAK,SAASU,KAAA;IAAA;IAGhB,OAAO;MACLP,OAAA;MACAM,WAAA;MACAG;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}