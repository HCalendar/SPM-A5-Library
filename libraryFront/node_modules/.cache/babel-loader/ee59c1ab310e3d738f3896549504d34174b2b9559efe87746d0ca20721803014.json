{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, createElementVNode, normalizeClass, renderSlot, createBlock, withCtx, resolveDynamicComponent, toDisplayString } from 'vue';\nconst _hoisted_1 = {\n  class: \"el-breadcrumb__item\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"el-breadcrumb__separator\",\n  role: \"presentation\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  return openBlock(), createElementBlock(\"span\", _hoisted_1, [createElementVNode(\"span\", {\n    ref: \"link\",\n    class: normalizeClass([\"el-breadcrumb__inner\", _ctx.to ? \"is-link\" : \"\"]),\n    role: \"link\"\n  }, [renderSlot(_ctx.$slots, \"default\")], 2), _ctx.separatorIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    class: \"el-breadcrumb__separator\"\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.separatorIcon)))]),\n    _: 1\n  })) : (openBlock(), createElementBlock(\"span\", _hoisted_2, toDisplayString(_ctx.separator), 1))]);\n}\nexport { render };","map":{"version":3,"names":["class","role","createElementBlock","_hoisted_1","createElementVNode","ref","normalizeClass","_ctx","to","renderSlot","$slots","separatorIcon","openBlock","createBlock","_component_el_icon","resolveDynamicComponent","_hoisted_2","toDisplayString","separator"],"sources":["../../../../../../packages/components/breadcrumb/src/breadcrumb-item.vue?vue&type=template&id=2f37792a&lang.js"],"sourcesContent":["<template>\n  <span class=\"el-breadcrumb__item\">\n    <span\n      ref=\"link\"\n      :class=\"['el-breadcrumb__inner', to ? 'is-link' : '']\"\n      role=\"link\"\n    >\n      <slot></slot>\n    </span>\n    <el-icon v-if=\"separatorIcon\" class=\"el-breadcrumb__separator\">\n      <component :is=\"separatorIcon\" />\n    </el-icon>\n    <span v-else class=\"el-breadcrumb__separator\" role=\"presentation\">\n      {{ separator }}\n    </span>\n  </span>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  inject,\n  ref,\n  onMounted,\n  getCurrentInstance,\n} from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { elBreadcrumbKey } from '@element-plus/tokens'\nimport { breadcrumbItemProps } from './breadcrumb-item'\n\nimport type { Router } from 'vue-router'\n\nconst COMPONENT_NAME = 'ElBreadcrumbItem'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n\n  components: {\n    ElIcon,\n  },\n\n  props: breadcrumbItemProps,\n\n  setup(props) {\n    const instance = getCurrentInstance()!\n    const router = instance.appContext.config.globalProperties.$router as Router\n    const parent = inject(elBreadcrumbKey, undefined)\n\n    const link = ref<HTMLSpanElement>()\n\n    onMounted(() => {\n      link.value!.setAttribute('role', 'link')\n      link.value!.addEventListener('click', () => {\n        if (!props.to || !router) return\n        props.replace ? router.replace(props.to) : router.push(props.to)\n      })\n    })\n\n    return {\n      link,\n      separator: parent?.separator,\n      separatorIcon: parent?.separatorIcon,\n    }\n  },\n})\n</script>\n"],"mappings":";;EACQA,KAAA,EAAM;AAAA;;;EAWGA,KAAA,EAAM;EAA2BC,IAAA,EAAK;AAAA;;;sBAXrDC,kBAAA,SAAAC,UAAA,GACEC,kBAAA;IACEC,GAAA,EAAI;IACHL,KAAA,EAAAM,cAAA,0BAAgCC,IAAA,CAAAC,EAAA;IACjCP,IAAA,EAAK;EAAA,IAELQ,UAAA,CAAAF,IAAA,CAAAG,MAAA,a,MAEaH,IAAA,CAAAI,aAAA,IAAAC,SAAA,IAAfC,WAAA,CAAAC,kBAAA;;IAA8Bd,KAAA,EAAM;EAAA;qBAClC,Q,aAAAa,WAAA,CAAAE,uBAAA,CAAgBR,IAAA,CAAAI,aAAA,I;;sBAElBT,kBAAA,SAAAc,UAAA,EAAAC,eAAA,CACKV,IAAA,CAAAW,SAAA,O","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}