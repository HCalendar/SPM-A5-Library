{"ast":null,"code":"import { buildProps, definePropType } from '../../../utils/props.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../utils/constants.mjs';\nconst calendarProps = buildProps({\n  modelValue: {\n    type: Date\n  },\n  range: {\n    type: definePropType(Array),\n    validator: range => Array.isArray(range) && range.length === 2 && range.every(item => item instanceof Date)\n  }\n});\nconst calendarEmits = {\n  [UPDATE_MODEL_EVENT]: value => value instanceof Date,\n  input: value => value instanceof Date\n};\nexport { calendarEmits, calendarProps };","map":{"version":3,"names":["calendarProps","buildProps","modelValue","type","Date","range","definePropType","Array","validator","isArray","length","every","item","calendarEmits","UPDATE_MODEL_EVENT","value","input"],"sources":["../../../../../../packages/components/calendar/src/calendar.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils/props'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/utils/constants'\nimport type { ExtractPropTypes } from 'vue'\n\nexport const calendarProps = buildProps({\n  modelValue: {\n    type: Date,\n  },\n  range: {\n    type: definePropType<[Date, Date]>(Array),\n    validator: (range: unknown): range is [Date, Date] =>\n      Array.isArray(range) &&\n      range.length === 2 &&\n      range.every((item) => item instanceof Date),\n  },\n} as const)\nexport type CalendarProps = ExtractPropTypes<typeof calendarProps>\n\nexport const calendarEmits = {\n  [UPDATE_MODEL_EVENT]: (value: Date) => value instanceof Date,\n  input: (value: Date) => value instanceof Date,\n}\nexport type CalendarEmits = typeof calendarEmits\n"],"mappings":";;MAIaA,aAAA,GAAgBC,UAAA,CAAW;EACtCC,UAAA,EAAY;IACVC,IAAA,EAAMC;EAAA;EAERC,KAAA,EAAO;IACLF,IAAA,EAAMG,cAAA,CAA6BC,KAAA;IACnCC,SAAA,EAAYH,KAAA,IACVE,KAAA,CAAME,OAAA,CAAQJ,KAAA,KACdA,KAAA,CAAMK,MAAA,KAAW,KACjBL,KAAA,CAAMM,KAAA,CAAOC,IAAA,IAASA,IAAA,YAAgBR,IAAA;EAAA;AAAA;MAK/BS,aAAA,GAAgB;EAAA,CAC1BC,kBAAA,GAAsBC,KAAA,IAAgBA,KAAA,YAAiBX,IAAA;EACxDY,KAAA,EAAQD,KAAA,IAAgBA,KAAA,YAAiBX;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}