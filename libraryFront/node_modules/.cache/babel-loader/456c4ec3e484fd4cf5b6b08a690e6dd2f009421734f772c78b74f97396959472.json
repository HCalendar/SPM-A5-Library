{"ast":null,"code":"import { buildProp, definePropType, buildProps, mutable } from '../../../utils/props.mjs';\nimport { VERTICAL } from './defaults.mjs';\nconst itemSize = buildProp({\n  type: definePropType([Number, Function]),\n  required: true\n});\nconst estimatedItemSize = buildProp({\n  type: Number\n});\nconst cache = buildProp({\n  type: Number,\n  default: 2\n});\nconst direction = buildProp({\n  type: String,\n  values: [\"ltr\", \"rtl\"],\n  default: \"ltr\"\n});\nconst initScrollOffset = buildProp({\n  type: Number,\n  default: 0\n});\nconst total = buildProp({\n  type: Number,\n  required: true\n});\nconst layout = buildProp({\n  type: String,\n  values: [\"horizontal\", \"vertical\"],\n  default: VERTICAL\n});\nconst virtualizedProps = buildProps({\n  className: {\n    type: String,\n    default: \"\"\n  },\n  containerElement: {\n    type: definePropType([String, Object]),\n    default: \"div\"\n  },\n  data: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  direction,\n  height: {\n    type: [String, Number],\n    required: true\n  },\n  innerElement: {\n    type: [String, Object],\n    default: \"div\"\n  },\n  style: {\n    type: definePropType([Object, String, Array])\n  },\n  useIsScrolling: {\n    type: Boolean,\n    default: false\n  },\n  width: {\n    type: [Number, String],\n    required: false\n  },\n  perfMode: {\n    type: Boolean,\n    default: true\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false\n  }\n});\nconst virtualizedListProps = buildProps({\n  cache,\n  estimatedItemSize,\n  layout,\n  initScrollOffset,\n  total,\n  itemSize,\n  ...virtualizedProps\n});\nconst virtualizedGridProps = buildProps({\n  columnCache: cache,\n  columnWidth: itemSize,\n  estimatedColumnWidth: estimatedItemSize,\n  estimatedRowHeight: estimatedItemSize,\n  initScrollLeft: initScrollOffset,\n  initScrollTop: initScrollOffset,\n  rowCache: cache,\n  rowHeight: itemSize,\n  totalColumn: total,\n  totalRow: total,\n  ...virtualizedProps\n});\nconst virtualizedScrollbarProps = buildProps({\n  layout,\n  total,\n  ratio: {\n    type: Number,\n    required: true\n  },\n  clientSize: {\n    type: Number,\n    required: true\n  },\n  scrollFrom: {\n    type: Number,\n    required: true\n  },\n  visible: Boolean\n});\nexport { virtualizedGridProps, virtualizedListProps, virtualizedProps, virtualizedScrollbarProps };","map":{"version":3,"names":["itemSize","buildProp","type","definePropType","Number","Function","required","estimatedItemSize","cache","default","direction","String","values","initScrollOffset","total","layout","VERTICAL","virtualizedProps","buildProps","className","containerElement","Object","data","Array","mutable","height","innerElement","style","useIsScrolling","Boolean","width","perfMode","scrollbarAlwaysOn","virtualizedListProps","virtualizedGridProps","columnCache","columnWidth","estimatedColumnWidth","estimatedRowHeight","initScrollLeft","initScrollTop","rowCache","rowHeight","totalColumn","totalRow","virtualizedScrollbarProps","ratio","clientSize","scrollFrom","visible"],"sources":["../../../../../../packages/components/virtual-list/src/props.ts"],"sourcesContent":["import {\n  buildProp,\n  buildProps,\n  definePropType,\n  mutable,\n} from '@element-plus/utils/props'\nimport { VERTICAL } from './defaults'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type { StyleValue } from '@element-plus/utils/types'\nimport type { ItemSize } from './types'\n\nconst itemSize = buildProp({\n  type: definePropType<number | ItemSize>([Number, Function]),\n  required: true,\n} as const)\n\nconst estimatedItemSize = buildProp({\n  type: Number,\n} as const)\n\nconst cache = buildProp({\n  type: Number,\n  default: 2,\n} as const)\n\nconst direction = buildProp({\n  type: String,\n  values: ['ltr', 'rtl'],\n  default: 'ltr',\n} as const)\n\nconst initScrollOffset = buildProp({\n  type: Number,\n  default: 0,\n} as const)\n\nconst total = buildProp({\n  type: Number,\n  required: true,\n} as const)\n\nconst layout = buildProp({\n  type: String,\n  values: ['horizontal', 'vertical'],\n  default: VERTICAL,\n} as const)\n\nexport const virtualizedProps = buildProps({\n  className: {\n    type: String,\n    default: '',\n  },\n\n  containerElement: {\n    type: definePropType<string | Element>([String, Object]),\n    default: 'div',\n  },\n\n  data: {\n    type: definePropType<any[]>(Array),\n    default: () => mutable([] as const),\n  },\n\n  /**\n   * @description controls the horizontal direction.\n   */\n  direction,\n\n  height: {\n    type: [String, Number],\n    required: true,\n  },\n\n  innerElement: {\n    type: [String, Object],\n    default: 'div',\n  },\n\n  style: {\n    type: definePropType<StyleValue>([Object, String, Array]),\n  },\n\n  useIsScrolling: {\n    type: Boolean,\n    default: false,\n  },\n\n  width: {\n    type: [Number, String],\n    required: false,\n  },\n\n  perfMode: {\n    type: Boolean,\n    default: true,\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\n\nexport const virtualizedListProps = buildProps({\n  /**\n   * @description describes how many items should be pre rendered to the head\n   * and the tail of the window\n   */\n  cache,\n\n  estimatedItemSize,\n\n  /**\n   * @description controls the list's orientation\n   */\n  layout,\n\n  initScrollOffset,\n\n  /**\n   * @description describes the total number of the list.\n   */\n  total,\n\n  itemSize,\n  ...virtualizedProps,\n} as const)\n\nexport const virtualizedGridProps = buildProps({\n  columnCache: cache,\n  columnWidth: itemSize,\n  estimatedColumnWidth: estimatedItemSize,\n  estimatedRowHeight: estimatedItemSize,\n  initScrollLeft: initScrollOffset,\n  initScrollTop: initScrollOffset,\n  rowCache: cache,\n  rowHeight: itemSize,\n  totalColumn: total,\n  totalRow: total,\n  ...virtualizedProps,\n} as const)\n\nexport const virtualizedScrollbarProps = buildProps({\n  layout,\n  total,\n  ratio: {\n    type: Number,\n    required: true,\n  },\n  clientSize: {\n    type: Number,\n    required: true,\n  },\n  scrollFrom: {\n    type: Number,\n    required: true,\n  },\n  visible: Boolean,\n} as const)\n\nexport type VirtualizedProps = ExtractPropTypes<typeof virtualizedProps>\nexport type VirtualizedListProps = ExtractPropTypes<typeof virtualizedListProps>\nexport type VirtualizedGridProps = ExtractPropTypes<typeof virtualizedGridProps>\n\nexport type VirtualizedScrollbarProps = ExtractPropTypes<\n  typeof virtualizedScrollbarProps\n>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}