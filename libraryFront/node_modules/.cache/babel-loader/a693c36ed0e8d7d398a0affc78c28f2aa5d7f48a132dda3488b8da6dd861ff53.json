{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, ref, watch, provide } from 'vue';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../utils/constants.mjs';\nvar script = defineComponent({\n  name: \"ElCollapse\",\n  props: {\n    accordion: Boolean,\n    modelValue: {\n      type: [Array, String, Number],\n      default: () => []\n    }\n  },\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT],\n  setup(props, {\n    emit\n  }) {\n    const activeNames = ref([].concat(props.modelValue));\n    const setActiveNames = _activeNames => {\n      activeNames.value = [].concat(_activeNames);\n      const value = props.accordion ? activeNames.value[0] : activeNames.value;\n      emit(UPDATE_MODEL_EVENT, value);\n      emit(CHANGE_EVENT, value);\n    };\n    const handleItemClick = name => {\n      if (props.accordion) {\n        setActiveNames((activeNames.value[0] || activeNames.value[0] === 0) && activeNames.value[0] === name ? \"\" : name);\n      } else {\n        const _activeNames = activeNames.value.slice(0);\n        const index = _activeNames.indexOf(name);\n        if (index > -1) {\n          _activeNames.splice(index, 1);\n        } else {\n          _activeNames.push(name);\n        }\n        setActiveNames(_activeNames);\n      }\n    };\n    watch(() => props.modelValue, () => {\n      activeNames.value = [].concat(props.modelValue);\n    });\n    provide(\"collapse\", {\n      activeNames,\n      handleItemClick\n    });\n    return {\n      activeNames,\n      setActiveNames,\n      handleItemClick\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","props","accordion","Boolean","modelValue","type","Array","String","Number","default","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","emit","activeNames","ref","concat","setActiveNames","_activeNames","value","handleItemClick","slice","index","indexOf","splice","push","watch","provide"],"sources":["../../../../../../packages/components/collapse/src/collapse.vue"],"sourcesContent":["<template>\n  <div class=\"el-collapse\" role=\"tablist\" aria-multiselectable=\"true\">\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, watch, provide } from 'vue'\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '@element-plus/utils/constants'\nimport type { PropType } from 'vue'\nimport type { CollapseProvider } from './collapse.type'\n\nexport default defineComponent({\n  name: 'ElCollapse',\n  props: {\n    accordion: Boolean,\n    modelValue: {\n      type: [Array, String, Number] as PropType<\n        string | number | Array<string | number>\n      >,\n      default: () => [],\n    },\n  },\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT],\n  setup(props, { emit }) {\n    const activeNames = ref([].concat(props.modelValue))\n\n    const setActiveNames = (_activeNames) => {\n      activeNames.value = [].concat(_activeNames)\n      const value = props.accordion ? activeNames.value[0] : activeNames.value\n      emit(UPDATE_MODEL_EVENT, value)\n      emit(CHANGE_EVENT, value)\n    }\n\n    const handleItemClick = (name) => {\n      if (props.accordion) {\n        setActiveNames(\n          (activeNames.value[0] || activeNames.value[0] === 0) &&\n            activeNames.value[0] === name\n            ? ''\n            : name\n        )\n      } else {\n        const _activeNames = activeNames.value.slice(0)\n        const index = _activeNames.indexOf(name)\n\n        if (index > -1) {\n          _activeNames.splice(index, 1)\n        } else {\n          _activeNames.push(name)\n        }\n        setActiveNames(_activeNames)\n      }\n    }\n\n    watch(\n      () => props.modelValue,\n      () => {\n        activeNames.value = [].concat(props.modelValue)\n      }\n    )\n\n    provide<CollapseProvider>('collapse', {\n      activeNames,\n      handleItemClick,\n    })\n\n    return {\n      activeNames,\n      setActiveNames,\n      handleItemClick,\n    }\n  },\n})\n</script>\n"],"mappings":";;;AAYA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAO;IACLC,SAAA,EAAWC,OAAA;IACXC,UAAA,EAAY;MACVC,IAAA,EAAM,CAACC,KAAA,EAAOC,MAAA,EAAQC,MAAA;MAGtBC,OAAA,EAASA,CAAA,KAAM;IAAA;EAAA;EAGnBC,KAAA,EAAO,CAACC,kBAAA,EAAoBC,YAAA;EAC5BC,MAAMZ,KAAA,EAAO;IAAEa;EAAA,GAAQ;IACrB,MAAMC,WAAA,GAAcC,GAAA,CAAI,GAAGC,MAAA,CAAOhB,KAAA,CAAMG,UAAA;IAExC,MAAMc,cAAA,GAAkBC,YAAA,IAAiB;MACvCJ,WAAA,CAAYK,KAAA,GAAQ,GAAGH,MAAA,CAAOE,YAAA;MAC9B,MAAMC,KAAA,GAAQnB,KAAA,CAAMC,SAAA,GAAYa,WAAA,CAAYK,KAAA,CAAM,KAAKL,WAAA,CAAYK,KAAA;MACnEN,IAAA,CAAKH,kBAAA,EAAoBS,KAAA;MACzBN,IAAA,CAAKF,YAAA,EAAcQ,KAAA;IAAA;IAGrB,MAAMC,eAAA,GAAmBrB,IAAA,IAAS;MAChC,IAAIC,KAAA,CAAMC,SAAA,EAAW;QACnBgB,cAAA,CACG,CAAAH,WAAA,CAAYK,KAAA,CAAM,MAAML,WAAA,CAAYK,KAAA,CAAM,OAAO,MAChDL,WAAA,CAAYK,KAAA,CAAM,OAAOpB,IAAA,GACvB,KACAA,IAAA;MAAA,OAED;QACL,MAAMmB,YAAA,GAAeJ,WAAA,CAAYK,KAAA,CAAME,KAAA,CAAM;QAC7C,MAAMC,KAAA,GAAQJ,YAAA,CAAaK,OAAA,CAAQxB,IAAA;QAEnC,IAAIuB,KAAA,GAAQ,IAAI;UACdJ,YAAA,CAAaM,MAAA,CAAOF,KAAA,EAAO;QAAA,OACtB;UACLJ,YAAA,CAAaO,IAAA,CAAK1B,IAAA;QAAA;QAEpBkB,cAAA,CAAeC,YAAA;MAAA;IAAA;IAInBQ,KAAA,CACE,MAAM1B,KAAA,CAAMG,UAAA,EACZ,MAAM;MACJW,WAAA,CAAYK,KAAA,GAAQ,GAAGH,MAAA,CAAOhB,KAAA,CAAMG,UAAA;IAAA;IAIxCwB,OAAA,CAA0B,YAAY;MACpCb,WAAA;MACAM;IAAA;IAGF,OAAO;MACLN,WAAA;MACAG,cAAA;MACAG;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}