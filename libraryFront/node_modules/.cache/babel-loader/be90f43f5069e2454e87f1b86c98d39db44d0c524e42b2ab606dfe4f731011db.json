{"ast":null,"code":"import \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\nimport { getCurrentInstance } from 'vue';\nexport { isVNode } from 'vue';\nimport { extend, hasOwn, hyphenate, toRawType, isArray, isObject, isString, isFunction } from '@vue/shared';\nexport { camelize, capitalize, extend, hasOwn, isArray, isObject, isString, looseEqual } from '@vue/shared';\nimport isEqualWith from 'lodash/isEqualWith';\nimport isServer from './isServer.mjs';\nimport { throwError, debugWarn } from './error.mjs';\nconst SCOPE = \"Util\";\nfunction toObject(arr) {\n  const res = {};\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res;\n}\nconst getValueByPath = (obj, paths = \"\") => {\n  let ret = obj;\n  paths.split(\".\").map(path => {\n    ret = ret == null ? void 0 : ret[path];\n  });\n  return ret;\n};\nfunction getPropByPath(obj, path, strict) {\n  let tempObj = obj;\n  let key, value;\n  if (obj && hasOwn(obj, path)) {\n    key = path;\n    value = tempObj == null ? void 0 : tempObj[path];\n  } else {\n    path = path.replace(/\\[(\\w+)\\]/g, \".$1\");\n    path = path.replace(/^\\./, \"\");\n    const keyArr = path.split(\".\");\n    let i = 0;\n    for (i; i < keyArr.length - 1; i++) {\n      if (!tempObj && !strict) break;\n      const key2 = keyArr[i];\n      if (key2 in tempObj) {\n        tempObj = tempObj[key2];\n      } else {\n        if (strict) {\n          throwError(SCOPE, \"Please transfer a valid prop path to form item!\");\n        }\n        break;\n      }\n    }\n    key = keyArr[i];\n    value = tempObj == null ? void 0 : tempObj[keyArr[i]];\n  }\n  return {\n    o: tempObj,\n    k: key,\n    v: value\n  };\n}\nconst generateId = () => Math.floor(Math.random() * 1e4);\nconst escapeRegexpString = (value = \"\") => String(value).replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\");\nconst coerceTruthyValueToArray = arr => {\n  if (!arr && arr !== 0) {\n    return [];\n  }\n  return Array.isArray(arr) ? arr : [arr];\n};\nconst isFirefox = function () {\n  return !isServer && !!window.navigator.userAgent.match(/firefox/i);\n};\nconst autoprefixer = function (style) {\n  const rules = [\"transform\", \"transition\", \"animation\"];\n  const prefixes = [\"ms-\", \"webkit-\"];\n  rules.forEach(rule => {\n    const value = style[rule];\n    if (rule && value) {\n      prefixes.forEach(prefix => {\n        style[prefix + rule] = value;\n      });\n    }\n  });\n  return style;\n};\nconst kebabCase = hyphenate;\nconst isBool = val => typeof val === \"boolean\";\nconst isNumber = val => typeof val === \"number\";\nconst isHTMLElement = val => toRawType(val).startsWith(\"HTML\");\nfunction rafThrottle(fn) {\n  let locked = false;\n  return function (...args) {\n    if (locked) return;\n    locked = true;\n    window.requestAnimationFrame(() => {\n      Reflect.apply(fn, this, args);\n      locked = false;\n    });\n  };\n}\nconst clearTimer = timer => {\n  clearTimeout(timer.value);\n  timer.value = null;\n};\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\nfunction isUndefined(val) {\n  return val === void 0;\n}\nfunction useGlobalConfig() {\n  const vm = getCurrentInstance();\n  if (\"$ELEMENT\" in vm.proxy) {\n    return vm.proxy.$ELEMENT;\n  }\n  return {};\n}\nfunction isEmpty(val) {\n  if (!val && val !== 0 || isArray(val) && !val.length || isObject(val) && !Object.keys(val).length) return true;\n  return false;\n}\nfunction arrayFlat(arr) {\n  return arr.reduce((acm, item) => {\n    const val = Array.isArray(item) ? arrayFlat(item) : item;\n    return acm.concat(val);\n  }, []);\n}\nfunction deduplicate(arr) {\n  return Array.from(new Set(arr));\n}\nfunction addUnit(value) {\n  if (isString(value)) {\n    return value;\n  } else if (isNumber(value)) {\n    return `${value}px`;\n  }\n  debugWarn(SCOPE, \"binding value must be a string or number\");\n  return \"\";\n}\nfunction isEqualWithFunction(obj, other) {\n  return isEqualWith(obj, other, (objVal, otherVal) => {\n    return isFunction(objVal) && isFunction(otherVal) ? `${objVal}` === `${otherVal}` : void 0;\n  });\n}\nconst refAttacher = ref => {\n  return val => {\n    ref.value = val;\n  };\n};\nexport { SCOPE, addUnit, arrayFlat, autoprefixer, clearTimer, coerceTruthyValueToArray, deduplicate, escapeRegexpString, generateId, getPropByPath, getRandomInt, getValueByPath, isBool, isEmpty, isEqualWithFunction, isFirefox, isHTMLElement, isNumber, isUndefined, kebabCase, rafThrottle, refAttacher, toObject, useGlobalConfig };","map":{"version":3,"names":["SCOPE","arr","res","i","length","extend","getValueByPath","obj","paths","ret","split","map","path","strict","tempObj","key","value","hasOwn","replace","keyArr","key2","throwError","o","k","v","generateId","Math","floor","random","escapeRegexpString","String","coerceTruthyValueToArray","Array","isArray","isFirefox","isServer","window","navigator","userAgent","match","autoprefixer","style","rules","prefixes","forEach","rule","prefix","kebabCase","hyphenate","isBool","val","isNumber","isHTMLElement","toRawType","startsWith","fn","locked","args","requestAnimationFrame","Reflect","apply","clearTimer","timer","clearTimeout","max","vm","getCurrentInstance","proxy","$ELEMENT","isObject","Object","keys","reduce","acm","item","arrayFlat","concat","from","Set","isString","debugWarn","other","isEqualWith","objVal","otherVal","isFunction","refAttacher","ref"],"sources":["../../../../packages/utils/util.ts"],"sourcesContent":["import { getCurrentInstance } from 'vue'\nimport {\n  camelize,\n  capitalize,\n  extend,\n  hasOwn,\n  hyphenate,\n  isArray,\n  isObject,\n  isString,\n  isFunction,\n  looseEqual,\n  toRawType,\n} from '@vue/shared'\nimport isEqualWith from 'lodash/isEqualWith'\nimport isServer from './isServer'\nimport { debugWarn, throwError } from './error'\n\nimport type { ComponentPublicInstance, CSSProperties, Ref } from 'vue'\nimport type { TimeoutHandle, Nullable, ComponentSize } from './types'\n\nexport const SCOPE = 'Util'\n\nexport function toObject<T>(arr: Array<T>): Record<string, T> {\n  const res = {}\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i])\n    }\n  }\n  return res\n}\n\nexport const getValueByPath = (obj, paths = ''): unknown => {\n  let ret: unknown = obj\n  paths.split('.').map((path) => {\n    ret = ret?.[path]\n  })\n  return ret\n}\n\nexport function getPropByPath(\n  obj: any,\n  path: string,\n  strict: boolean\n): {\n  o: unknown\n  k: string\n  v: Nullable<unknown>\n} {\n  let tempObj = obj\n  let key, value\n\n  if (obj && hasOwn(obj, path)) {\n    key = path\n    value = tempObj?.[path]\n  } else {\n    path = path.replace(/\\[(\\w+)\\]/g, '.$1')\n    path = path.replace(/^\\./, '')\n\n    const keyArr = path.split('.')\n    let i = 0\n    for (i; i < keyArr.length - 1; i++) {\n      if (!tempObj && !strict) break\n      const key = keyArr[i]\n\n      if (key in tempObj) {\n        tempObj = tempObj[key]\n      } else {\n        if (strict) {\n          throwError(SCOPE, 'Please transfer a valid prop path to form item!')\n        }\n        break\n      }\n    }\n    key = keyArr[i]\n    value = tempObj?.[keyArr[i]]\n  }\n  return {\n    o: tempObj,\n    k: key,\n    v: value,\n  }\n}\n\n/**\n * Generate random number in range [0, 1000]\n * Maybe replace with [uuid](https://www.npmjs.com/package/uuid)\n */\nexport const generateId = (): number => Math.floor(Math.random() * 10000)\n\n// use isEqual instead\n// export const valueEquals\n\nexport const escapeRegexpString = (value = ''): string =>\n  String(value).replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\n// Use native Array.find, Array.findIndex instead\n\n// coerce truthy value to array\nexport const coerceTruthyValueToArray = (arr) => {\n  if (!arr && arr !== 0) {\n    return []\n  }\n  return Array.isArray(arr) ? arr : [arr]\n}\n\n// drop IE and (Edge < 79) support\n// export const isIE\n// export const isEdge\n\nexport const isFirefox = function (): boolean {\n  return !isServer && !!window.navigator.userAgent.match(/firefox/i)\n}\n\nexport const autoprefixer = function (style: CSSProperties): CSSProperties {\n  const rules = ['transform', 'transition', 'animation']\n  const prefixes = ['ms-', 'webkit-']\n  rules.forEach((rule) => {\n    const value = style[rule]\n    if (rule && value) {\n      prefixes.forEach((prefix) => {\n        style[prefix + rule] = value\n      })\n    }\n  })\n  return style\n}\n\nexport const kebabCase = hyphenate\n\n// reexport from lodash & vue shared\nexport { isVNode } from 'vue'\nexport {\n  hasOwn,\n  // isEmpty,\n  // isEqual,\n  isObject,\n  isArray,\n  isString,\n  capitalize,\n  camelize,\n  looseEqual,\n  extend,\n}\n\nexport const isBool = (val: unknown): val is boolean => typeof val === 'boolean'\nexport const isNumber = (val: unknown): val is number => typeof val === 'number'\nexport const isHTMLElement = (val: unknown) => toRawType(val).startsWith('HTML')\n\nexport function rafThrottle<T extends (...args: any) => any>(fn: T): T {\n  let locked = false\n  return function (this: ThisParameterType<T>, ...args: any[]) {\n    if (locked) return\n    locked = true\n\n    window.requestAnimationFrame(() => {\n      Reflect.apply(fn, this, args)\n      locked = false\n    })\n  } as T\n}\n\nexport const clearTimer = (timer: Ref<TimeoutHandle>) => {\n  clearTimeout(timer.value)\n  timer.value = null\n}\n\n/**\n * Generating a random int in range (0, max - 1)\n * @param max {number}\n */\nexport function getRandomInt(max: number) {\n  return Math.floor(Math.random() * Math.floor(max))\n}\n\nexport function isUndefined(val: any): val is undefined {\n  return val === undefined\n}\n\n/**\n * @deprecated please use `useGlobalConfig` in hooks.\n */\nexport function useGlobalConfig(): { size?: ComponentSize; zIndex?: number } {\n  const vm: any = getCurrentInstance()\n  if ('$ELEMENT' in vm.proxy) {\n    return vm.proxy.$ELEMENT\n  }\n  return {}\n}\n\nexport function isEmpty(val: unknown) {\n  if (\n    (!val && val !== 0) ||\n    (isArray(val) && !val.length) ||\n    (isObject(val) && !Object.keys(val).length)\n  )\n    return true\n\n  return false\n}\n\nexport function arrayFlat(arr: unknown[]) {\n  return arr.reduce((acm: unknown[], item) => {\n    const val = Array.isArray(item) ? arrayFlat(item) : item\n    return acm.concat(val)\n  }, [])\n}\n\nexport function deduplicate<T>(arr: T[]) {\n  return Array.from(new Set(arr))\n}\n\nexport function addUnit(value: string | number) {\n  if (isString(value)) {\n    return value\n  } else if (isNumber(value)) {\n    return `${value}px`\n  }\n  debugWarn(SCOPE, 'binding value must be a string or number')\n  return ''\n}\n\n/**\n * Enhance `lodash.isEqual` for it always return false even two functions have completely same statements.\n * @param obj The value to compare\n * @param other The other value to compare\n * @returns Returns `true` if the values are equivalent, else `false`.\n * @example\n *  lodash.isEqual(() => 1, () => 1)      // false\n *  isEqualWith(() => 1, () => 1)         // true\n */\nexport function isEqualWithFunction(obj: any, other: any) {\n  return isEqualWith(obj, other, (objVal, otherVal) => {\n    return isFunction(objVal) && isFunction(otherVal)\n      ? `${objVal}` === `${otherVal}`\n      : undefined\n  })\n}\n\n/**\n * Generate function for attach ref for the h renderer\n * @param ref Ref<HTMLElement | ComponentPublicInstance>\n * @returns (val: T) => void\n */\n\nexport const refAttacher = <T extends HTMLElement | ComponentPublicInstance>(\n  ref: Ref<T>\n) => {\n  return (val: T) => {\n    ref.value = val\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}