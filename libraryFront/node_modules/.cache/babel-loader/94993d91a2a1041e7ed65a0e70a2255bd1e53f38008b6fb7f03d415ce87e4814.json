{"ast":null,"code":"const NODE_KEY = \"$treeNodeId\";\nconst markNodeData = function (node, data) {\n  if (!data || data[NODE_KEY]) return;\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false\n  });\n};\nconst getNodeKey = function (key, data) {\n  if (!key) return data[NODE_KEY];\n  return data[key];\n};\nexport { NODE_KEY, getNodeKey, markNodeData };","map":{"version":3,"names":["NODE_KEY","markNodeData","node","data","Object","defineProperty","value","id","enumerable","configurable","writable","getNodeKey","key"],"sources":["../../../../../../../packages/components/tree/src/model/util.ts"],"sourcesContent":["import type Node from './node'\nimport type { TreeKey, TreeNodeData } from '../tree.type'\n\nexport const NODE_KEY = '$treeNodeId'\n\nexport const markNodeData = function (node: Node, data: TreeNodeData): void {\n  if (!data || data[NODE_KEY]) return\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false,\n  })\n}\n\nexport const getNodeKey = function (key: TreeKey, data: TreeNodeData): any {\n  if (!key) return data[NODE_KEY]\n  return data[key]\n}\n"],"mappings":"MAGaA,QAAA,GAAW;MAEXC,YAAA,GAAe,SAAAA,CAAUC,IAAA,EAAYC,IAAA,EAA0B;EAC1E,IAAI,CAACA,IAAA,IAAQA,IAAA,CAAKH,QAAA,GAAW;EAC7BI,MAAA,CAAOC,cAAA,CAAeF,IAAA,EAAMH,QAAA,EAAU;IACpCM,KAAA,EAAOJ,IAAA,CAAKK,EAAA;IACZC,UAAA,EAAY;IACZC,YAAA,EAAc;IACdC,QAAA,EAAU;EAAA;AAAA;MAIDC,UAAA,GAAa,SAAAA,CAAUC,GAAA,EAAcT,IAAA,EAAyB;EACzE,IAAI,CAACS,GAAA,EAAK,OAAOT,IAAA,CAAKH,QAAA;EACtB,OAAOG,IAAA,CAAKS,GAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}