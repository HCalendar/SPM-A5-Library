{"ast":null,"code":"import { defineComponent, ref, computed, nextTick, watch, onMounted } from 'vue';\nimport { isString } from '@vue/shared';\nimport { useThrottleFn, useEventListener } from '@vueuse/core';\nimport '../../../hooks/index.mjs';\nimport { ElImageViewer } from '../../image-viewer/index.mjs';\nimport isServer from '../../../utils/isServer.mjs';\nimport { isInContainer, getScrollContainer } from '../../../utils/dom.mjs';\nimport { imageProps, imageEmits } from './image.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useAttrs } from '../../../hooks/use-attrs/index.mjs';\nconst isHtmlElement = e => e && e.nodeType === Node.ELEMENT_NODE;\nlet prevOverflow = \"\";\nvar script = defineComponent({\n  name: \"ElImage\",\n  components: {\n    ImageViewer: ElImageViewer\n  },\n  inheritAttrs: false,\n  props: imageProps,\n  emits: imageEmits,\n  setup(props, {\n    emit,\n    attrs: rawAttrs\n  }) {\n    const {\n      t\n    } = useLocale();\n    const attrs = useAttrs();\n    const hasLoadError = ref(false);\n    const loading = ref(true);\n    const imgWidth = ref(0);\n    const imgHeight = ref(0);\n    const showViewer = ref(false);\n    const container = ref();\n    const _scrollContainer = ref();\n    let stopScrollListener;\n    let stopWheelListener;\n    const containerStyle = computed(() => rawAttrs.style);\n    const imageStyle = computed(() => {\n      const {\n        fit\n      } = props;\n      if (!isServer && fit) {\n        return {\n          objectFit: fit\n        };\n      }\n      return {};\n    });\n    const preview = computed(() => {\n      const {\n        previewSrcList\n      } = props;\n      return Array.isArray(previewSrcList) && previewSrcList.length > 0;\n    });\n    const imageIndex = computed(() => {\n      const {\n        src,\n        previewSrcList,\n        initialIndex\n      } = props;\n      let previewIndex = initialIndex;\n      const srcIndex = previewSrcList.indexOf(src);\n      if (srcIndex >= 0) {\n        previewIndex = srcIndex;\n      }\n      return previewIndex;\n    });\n    const loadImage = () => {\n      if (isServer) return;\n      loading.value = true;\n      hasLoadError.value = false;\n      const img = new Image();\n      img.addEventListener(\"load\", e => handleLoad(e, img));\n      img.addEventListener(\"error\", handleError);\n      Object.entries(attrs.value).forEach(([key, value]) => {\n        if (key.toLowerCase() === \"onload\") return;\n        img.setAttribute(key, value);\n      });\n      img.src = props.src;\n    };\n    function handleLoad(e, img) {\n      imgWidth.value = img.width;\n      imgHeight.value = img.height;\n      loading.value = false;\n      hasLoadError.value = false;\n    }\n    function handleError(event) {\n      loading.value = false;\n      hasLoadError.value = true;\n      emit(\"error\", event);\n    }\n    function handleLazyLoad() {\n      if (isInContainer(container.value, _scrollContainer.value)) {\n        loadImage();\n        removeLazyLoadListener();\n      }\n    }\n    const lazyLoadHandler = useThrottleFn(handleLazyLoad, 200);\n    async function addLazyLoadListener() {\n      var _a;\n      if (isServer) return;\n      await nextTick();\n      const {\n        scrollContainer\n      } = props;\n      if (isHtmlElement(scrollContainer)) {\n        _scrollContainer.value = scrollContainer;\n      } else if (isString(scrollContainer) && scrollContainer !== \"\") {\n        _scrollContainer.value = (_a = document.querySelector(scrollContainer)) != null ? _a : void 0;\n      } else if (container.value) {\n        _scrollContainer.value = getScrollContainer(container.value);\n      }\n      if (_scrollContainer.value) {\n        stopScrollListener = useEventListener(_scrollContainer, \"scroll\", lazyLoadHandler);\n        setTimeout(() => handleLazyLoad(), 100);\n      }\n    }\n    function removeLazyLoadListener() {\n      if (isServer || !_scrollContainer.value || !lazyLoadHandler) return;\n      stopScrollListener();\n      _scrollContainer.value = void 0;\n    }\n    function wheelHandler(e) {\n      if (!e.ctrlKey) return;\n      if (e.deltaY < 0) {\n        e.preventDefault();\n        return false;\n      } else if (e.deltaY > 0) {\n        e.preventDefault();\n        return false;\n      }\n    }\n    function clickHandler() {\n      if (!preview.value) return;\n      stopWheelListener = useEventListener(\"wheel\", wheelHandler, {\n        passive: false\n      });\n      prevOverflow = document.body.style.overflow;\n      document.body.style.overflow = \"hidden\";\n      showViewer.value = true;\n    }\n    function closeViewer() {\n      stopWheelListener == null ? void 0 : stopWheelListener();\n      document.body.style.overflow = prevOverflow;\n      showViewer.value = false;\n      emit(\"close\");\n    }\n    function switchViewer(val) {\n      emit(\"switch\", val);\n    }\n    watch(() => props.src, () => {\n      if (props.lazy) {\n        loading.value = true;\n        hasLoadError.value = false;\n        removeLazyLoadListener();\n        addLazyLoadListener();\n      } else {\n        loadImage();\n      }\n    });\n    onMounted(() => {\n      if (props.lazy) {\n        addLazyLoadListener();\n      } else {\n        loadImage();\n      }\n    });\n    return {\n      attrs,\n      loading,\n      hasLoadError,\n      showViewer,\n      containerStyle,\n      imageStyle,\n      preview,\n      imageIndex,\n      container,\n      clickHandler,\n      closeViewer,\n      switchViewer,\n      t\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["isHtmlElement","e","nodeType","Node","ELEMENT_NODE","prevOverflow","script","defineComponent","name","components","ImageViewer","ElImageViewer","inheritAttrs","props","imageProps","emits","imageEmits","setup","emit","attrs","rawAttrs","t","useLocale","useAttrs","hasLoadError","ref","loading","imgWidth","imgHeight","showViewer","container","_scrollContainer","stopScrollListener","stopWheelListener","containerStyle","computed","style","imageStyle","fit","isServer","objectFit","preview","previewSrcList","Array","isArray","length","imageIndex","src","initialIndex","previewIndex","srcIndex","indexOf","loadImage","value","img","Image","addEventListener","handleLoad","handleError","Object","entries","forEach","key","toLowerCase","setAttribute","width","height","event","handleLazyLoad","isInContainer","removeLazyLoadListener","lazyLoadHandler","useThrottleFn","addLazyLoadListener","nextTick","scrollContainer","isString","_a","document","querySelector","getScrollContainer","useEventListener","setTimeout","wheelHandler","ctrlKey","deltaY","preventDefault","clickHandler","passive","body","overflow","closeViewer","switchViewer","val","watch","lazy","onMounted"],"sources":["../../../../../../packages/components/image/src/image.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"container\"\n    :class=\"['el-image', $attrs.class]\"\n    :style=\"containerStyle\"\n  >\n    <slot v-if=\"loading\" name=\"placeholder\">\n      <div class=\"el-image__placeholder\"></div>\n    </slot>\n    <slot v-else-if=\"hasLoadError\" name=\"error\">\n      <div class=\"el-image__error\">{{ t('el.image.error') }}</div>\n    </slot>\n    <img\n      v-else\n      class=\"el-image__inner\"\n      v-bind=\"attrs\"\n      :src=\"src\"\n      :style=\"imageStyle\"\n      :class=\"{\n        'el-image__preview': preview,\n      }\"\n      @click=\"clickHandler\"\n    />\n    <teleport to=\"body\" :disabled=\"!appendToBody\">\n      <template v-if=\"preview\">\n        <image-viewer\n          v-if=\"showViewer\"\n          :z-index=\"zIndex\"\n          :initial-index=\"imageIndex\"\n          :url-list=\"previewSrcList\"\n          :hide-on-click-modal=\"hideOnClickModal\"\n          @close=\"closeViewer\"\n          @switch=\"switchViewer\"\n        >\n          <div v-if=\"$slots.viewer\">\n            <slot name=\"viewer\" />\n          </div>\n        </image-viewer>\n      </template>\n    </teleport>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, onMounted, watch, nextTick } from 'vue'\nimport { isString } from '@vue/shared'\nimport { useEventListener, useThrottleFn } from '@vueuse/core'\nimport { useAttrs, useLocale } from '@element-plus/hooks'\nimport ImageViewer from '@element-plus/components/image-viewer'\nimport isServer from '@element-plus/utils/isServer'\nimport { getScrollContainer, isInContainer } from '@element-plus/utils/dom'\nimport { imageEmits, imageProps } from './image'\n\nimport type { CSSProperties, StyleValue } from 'vue'\n\nconst isHtmlElement = (e: any): e is Element =>\n  e && e.nodeType === Node.ELEMENT_NODE\n\nlet prevOverflow = ''\n\nexport default defineComponent({\n  name: 'ElImage',\n  components: {\n    ImageViewer,\n  },\n  inheritAttrs: false,\n\n  props: imageProps,\n  emits: imageEmits,\n\n  setup(props, { emit, attrs: rawAttrs }) {\n    const { t } = useLocale()\n\n    const attrs = useAttrs()\n    const hasLoadError = ref(false)\n    const loading = ref(true)\n    const imgWidth = ref(0)\n    const imgHeight = ref(0)\n    const showViewer = ref(false)\n    const container = ref<HTMLElement>()\n\n    const _scrollContainer = ref<HTMLElement | Window>()\n    let stopScrollListener: () => void\n    let stopWheelListener: () => void\n\n    const containerStyle = computed(() => rawAttrs.style as StyleValue)\n\n    const imageStyle = computed<CSSProperties>(() => {\n      const { fit } = props\n      if (!isServer && fit) {\n        return { objectFit: fit }\n      }\n      return {}\n    })\n\n    const preview = computed(() => {\n      const { previewSrcList } = props\n      return Array.isArray(previewSrcList) && previewSrcList.length > 0\n    })\n\n    const imageIndex = computed(() => {\n      const { src, previewSrcList, initialIndex } = props\n      let previewIndex = initialIndex\n      const srcIndex = previewSrcList.indexOf(src)\n      if (srcIndex >= 0) {\n        previewIndex = srcIndex\n      }\n      return previewIndex\n    })\n\n    const loadImage = () => {\n      if (isServer) return\n\n      // reset status\n      loading.value = true\n      hasLoadError.value = false\n\n      const img = new Image()\n      img.addEventListener('load', (e) => handleLoad(e, img))\n      img.addEventListener('error', handleError)\n\n      // bind html attrs\n      // so it can behave consistently\n      Object.entries(attrs.value).forEach(([key, value]) => {\n        // avoid onload to be overwritten\n        if (key.toLowerCase() === 'onload') return\n        img.setAttribute(key, value as string)\n      })\n      img.src = props.src\n    }\n\n    function handleLoad(e: Event, img: HTMLImageElement) {\n      imgWidth.value = img.width\n      imgHeight.value = img.height\n      loading.value = false\n      hasLoadError.value = false\n    }\n\n    function handleError(event: Event) {\n      loading.value = false\n      hasLoadError.value = true\n      emit('error', event)\n    }\n\n    function handleLazyLoad() {\n      if (isInContainer(container.value, _scrollContainer.value)) {\n        loadImage()\n        removeLazyLoadListener()\n      }\n    }\n    const lazyLoadHandler = useThrottleFn(handleLazyLoad, 200)\n\n    async function addLazyLoadListener() {\n      if (isServer) return\n\n      await nextTick()\n\n      const { scrollContainer } = props\n      if (isHtmlElement(scrollContainer)) {\n        _scrollContainer.value = scrollContainer\n      } else if (isString(scrollContainer) && scrollContainer !== '') {\n        _scrollContainer.value =\n          document.querySelector<HTMLElement>(scrollContainer) ?? undefined\n      } else if (container.value) {\n        _scrollContainer.value = getScrollContainer(container.value)\n      }\n\n      if (_scrollContainer.value) {\n        stopScrollListener = useEventListener(\n          _scrollContainer,\n          'scroll',\n          lazyLoadHandler\n        )\n        setTimeout(() => handleLazyLoad(), 100)\n      }\n    }\n\n    function removeLazyLoadListener() {\n      if (isServer || !_scrollContainer.value || !lazyLoadHandler) return\n\n      stopScrollListener()\n      _scrollContainer.value = undefined\n    }\n\n    function wheelHandler(e: WheelEvent) {\n      if (!e.ctrlKey) return\n\n      if (e.deltaY < 0) {\n        e.preventDefault()\n        return false\n      } else if (e.deltaY > 0) {\n        e.preventDefault()\n        return false\n      }\n    }\n\n    function clickHandler() {\n      // don't show viewer when preview is false\n      if (!preview.value) return\n\n      stopWheelListener = useEventListener('wheel', wheelHandler, {\n        passive: false,\n      })\n\n      // prevent body scroll\n      prevOverflow = document.body.style.overflow\n      document.body.style.overflow = 'hidden'\n      showViewer.value = true\n    }\n\n    function closeViewer() {\n      stopWheelListener?.()\n      document.body.style.overflow = prevOverflow\n      showViewer.value = false\n      emit('close')\n    }\n\n    function switchViewer(val: number) {\n      emit('switch', val)\n    }\n\n    watch(\n      () => props.src,\n      () => {\n        if (props.lazy) {\n          // reset status\n          loading.value = true\n          hasLoadError.value = false\n          removeLazyLoadListener()\n          addLazyLoadListener()\n        } else {\n          loadImage()\n        }\n      }\n    )\n\n    onMounted(() => {\n      if (props.lazy) {\n        addLazyLoadListener()\n      } else {\n        loadImage()\n      }\n    })\n\n    return {\n      attrs,\n      loading,\n      hasLoadError,\n      showViewer,\n      containerStyle,\n      imageStyle,\n      preview,\n      imageIndex,\n      container,\n\n      clickHandler,\n      closeViewer,\n      switchViewer,\n      t,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}