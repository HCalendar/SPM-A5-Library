{"ast":null,"code":"import { defineComponent } from 'vue';\nimport { UPDATE_MODEL_EVENT } from '../../../utils/constants.mjs';\nimport { isValidComponentSize } from '../../../utils/validators.mjs';\nimport { useCheckbox } from './useCheckbox.mjs';\nvar script = defineComponent({\n  name: \"ElCheckbox\",\n  props: {\n    modelValue: {\n      type: [Boolean, Number, String],\n      default: () => void 0\n    },\n    label: {\n      type: [String, Boolean, Number, Object]\n    },\n    indeterminate: Boolean,\n    disabled: Boolean,\n    checked: Boolean,\n    name: {\n      type: String,\n      default: void 0\n    },\n    trueLabel: {\n      type: [String, Number],\n      default: void 0\n    },\n    falseLabel: {\n      type: [String, Number],\n      default: void 0\n    },\n    id: {\n      type: String,\n      default: void 0\n    },\n    controls: {\n      type: String,\n      default: void 0\n    },\n    border: Boolean,\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    tabindex: [String, Number]\n  },\n  emits: [UPDATE_MODEL_EVENT, \"change\"],\n  setup(props) {\n    return useCheckbox(props);\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","props","modelValue","type","Boolean","Number","String","default","label","Object","indeterminate","disabled","checked","trueLabel","falseLabel","id","controls","border","size","validator","isValidComponentSize","tabindex","emits","UPDATE_MODEL_EVENT","setup","useCheckbox"],"sources":["../../../../../../packages/components/checkbox/src/checkbox.vue"],"sourcesContent":["<template>\n  <label\n    :id=\"id\"\n    class=\"el-checkbox\"\n    :class=\"[\n      checkboxSize ? 'el-checkbox--' + checkboxSize : '',\n      { 'is-disabled': isDisabled },\n      { 'is-bordered': border },\n      { 'is-checked': isChecked },\n    ]\"\n    :aria-controls=\"indeterminate ? controls : null\"\n  >\n    <span\n      class=\"el-checkbox__input\"\n      :class=\"{\n        'is-disabled': isDisabled,\n        'is-checked': isChecked,\n        'is-indeterminate': indeterminate,\n        'is-focus': focus,\n      }\"\n      :tabindex=\"indeterminate ? 0 : undefined\"\n      :role=\"indeterminate ? 'checkbox' : undefined\"\n      :aria-checked=\"indeterminate ? 'mixed' : false\"\n    >\n      <span class=\"el-checkbox__inner\"></span>\n      <input\n        v-if=\"trueLabel || falseLabel\"\n        v-model=\"model\"\n        class=\"el-checkbox__original\"\n        type=\"checkbox\"\n        :aria-hidden=\"indeterminate ? 'true' : 'false'\"\n        :name=\"name\"\n        :tabindex=\"tabindex\"\n        :disabled=\"isDisabled\"\n        :true-value=\"trueLabel\"\n        :false-value=\"falseLabel\"\n        @change=\"handleChange\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n      />\n      <input\n        v-else\n        v-model=\"model\"\n        class=\"el-checkbox__original\"\n        type=\"checkbox\"\n        :aria-hidden=\"indeterminate ? 'true' : 'false'\"\n        :disabled=\"isDisabled\"\n        :value=\"label\"\n        :name=\"name\"\n        :tabindex=\"tabindex\"\n        @change=\"handleChange\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n      />\n    </span>\n    <span v-if=\"$slots.default || label\" class=\"el-checkbox__label\">\n      <slot></slot>\n      <template v-if=\"!$slots.default\">{{ label }}</template>\n    </span>\n  </label>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/utils/constants'\nimport { isValidComponentSize } from '@element-plus/utils/validators'\nimport { useCheckbox } from './useCheckbox'\n\nimport type { PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/utils/types'\n\nexport default defineComponent({\n  name: 'ElCheckbox',\n  props: {\n    modelValue: {\n      type: [Boolean, Number, String],\n      default: () => undefined,\n    },\n    label: {\n      type: [String, Boolean, Number, Object],\n    },\n    indeterminate: Boolean,\n    disabled: Boolean,\n    checked: Boolean,\n    name: {\n      type: String,\n      default: undefined,\n    },\n    trueLabel: {\n      type: [String, Number],\n      default: undefined,\n    },\n    falseLabel: {\n      type: [String, Number],\n      default: undefined,\n    },\n    id: {\n      type: String,\n      default: undefined,\n    },\n    controls: {\n      type: String,\n      default: undefined,\n    },\n    border: Boolean,\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    tabindex: [String, Number],\n  },\n  emits: [UPDATE_MODEL_EVENT, 'change'],\n  setup(props) {\n    return useCheckbox(props)\n  },\n})\n</script>\n"],"mappings":";;;;AAsEA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAO;IACLC,UAAA,EAAY;MACVC,IAAA,EAAM,CAACC,OAAA,EAASC,MAAA,EAAQC,MAAA;MACxBC,OAAA,EAASA,CAAA,KAAM;IAAA;IAEjBC,KAAA,EAAO;MACLL,IAAA,EAAM,CAACG,MAAA,EAAQF,OAAA,EAASC,MAAA,EAAQI,MAAA;IAAA;IAElCC,aAAA,EAAeN,OAAA;IACfO,QAAA,EAAUP,OAAA;IACVQ,OAAA,EAASR,OAAA;IACTJ,IAAA,EAAM;MACJG,IAAA,EAAMG,MAAA;MACNC,OAAA,EAAS;IAAA;IAEXM,SAAA,EAAW;MACTV,IAAA,EAAM,CAACG,MAAA,EAAQD,MAAA;MACfE,OAAA,EAAS;IAAA;IAEXO,UAAA,EAAY;MACVX,IAAA,EAAM,CAACG,MAAA,EAAQD,MAAA;MACfE,OAAA,EAAS;IAAA;IAEXQ,EAAA,EAAI;MACFZ,IAAA,EAAMG,MAAA;MACNC,OAAA,EAAS;IAAA;IAEXS,QAAA,EAAU;MACRb,IAAA,EAAMG,MAAA;MACNC,OAAA,EAAS;IAAA;IAEXU,MAAA,EAAQb,OAAA;IACRc,IAAA,EAAM;MACJf,IAAA,EAAMG,MAAA;MACNa,SAAA,EAAWC;IAAA;IAEbC,QAAA,EAAU,CAACf,MAAA,EAAQD,MAAA;EAAA;EAErBiB,KAAA,EAAO,CAACC,kBAAA,EAAoB;EAC5BC,MAAMvB,KAAA,EAAO;IACX,OAAOwB,WAAA,CAAYxB,KAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}