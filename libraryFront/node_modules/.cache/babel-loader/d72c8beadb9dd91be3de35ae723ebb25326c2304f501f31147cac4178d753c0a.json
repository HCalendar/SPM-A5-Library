{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, Fragment, renderList, normalizeStyle, createVNode, normalizeClass, withCtx, createBlock, resolveDynamicComponent, createCommentVNode, toDisplayString } from 'vue';\nconst _hoisted_1 = [\"aria-valuenow\", \"aria-valuetext\", \"aria-valuemax\"];\nconst _hoisted_2 = [\"onMousemove\", \"onClick\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: \"el-rate\",\n    role: \"slider\",\n    \"aria-valuenow\": _ctx.currentValue,\n    \"aria-valuetext\": _ctx.text,\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": _ctx.max,\n    tabindex: \"0\",\n    onKeydown: _cache[1] || (_cache[1] = (...args) => _ctx.handleKey && _ctx.handleKey(...args))\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.max, (item, key) => {\n    return openBlock(), createElementBlock(\"span\", {\n      key,\n      class: \"el-rate__item\",\n      style: normalizeStyle({\n        cursor: _ctx.rateDisabled ? \"auto\" : \"pointer\"\n      }),\n      onMousemove: $event => _ctx.setCurrentValue(item, $event),\n      onMouseleave: _cache[0] || (_cache[0] = (...args) => _ctx.resetCurrentValue && _ctx.resetCurrentValue(...args)),\n      onClick: $event => _ctx.selectValue(item)\n    }, [createVNode(_component_el_icon, {\n      class: normalizeClass([[{\n        hover: _ctx.hoverIndex === item\n      }], \"el-rate__icon\"]),\n      style: normalizeStyle(_ctx.getIconStyle(item))\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponents[item - 1]))), _ctx.showDecimalIcon(item) ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        style: normalizeStyle(_ctx.decimalStyle),\n        class: \"el-rate__icon el-rate__decimal\"\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.decimalIconComponent)))]),\n        _: 1\n      }, 8, [\"style\"])) : createCommentVNode(\"v-if\", true)]),\n      _: 2\n    }, 1032, [\"class\", \"style\"])], 44, _hoisted_2);\n  }), 128)), _ctx.showText || _ctx.showScore ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: \"el-rate__text\",\n    style: normalizeStyle({\n      color: _ctx.textColor\n    })\n  }, toDisplayString(_ctx.text), 5)) : createCommentVNode(\"v-if\", true)], 40, _hoisted_1);\n}\nexport { render };","map":{"version":3,"names":["createElementBlock","class","role","_ctx","currentValue","text","max","tabindex","onKeydown","_cache","args","handleKey","Fragment","renderList","item","key","style","normalizeStyle","cursor","rateDisabled","onMousemove","$event","setCurrentValue","onMouseleave","resetCurrentValue","onClick","selectValue","createVNode","_component_el_icon","normalizeClass","hover","hoverIndex","getIconStyle","createBlock","resolveDynamicComponent","iconComponents","showDecimalIcon","openBlock","decimalStyle","decimalIconComponent","showText","showScore","color","textColor","createCommentVNode"],"sources":["../../../../../../packages/components/rate/src/rate.vue?vue&type=template&id=38c42df6&lang.js"],"sourcesContent":["<template>\n  <div\n    class=\"el-rate\"\n    role=\"slider\"\n    :aria-valuenow=\"currentValue\"\n    :aria-valuetext=\"text\"\n    aria-valuemin=\"0\"\n    :aria-valuemax=\"max\"\n    tabindex=\"0\"\n    @keydown=\"handleKey\"\n  >\n    <span\n      v-for=\"(item, key) in max\"\n      :key=\"key\"\n      class=\"el-rate__item\"\n      :style=\"{ cursor: rateDisabled ? 'auto' : 'pointer' }\"\n      @mousemove=\"setCurrentValue(item, $event)\"\n      @mouseleave=\"resetCurrentValue\"\n      @click=\"selectValue(item)\"\n    >\n      <el-icon\n        :class=\"[{ hover: hoverIndex === item }]\"\n        class=\"el-rate__icon\"\n        :style=\"getIconStyle(item)\"\n      >\n        <component :is=\"iconComponents[item - 1]\" />\n        <el-icon\n          v-if=\"showDecimalIcon(item)\"\n          :style=\"decimalStyle\"\n          class=\"el-rate__icon el-rate__decimal\"\n        >\n          <component :is=\"decimalIconComponent\" />\n        </el-icon>\n      </el-icon>\n    </span>\n    <span\n      v-if=\"showText || showScore\"\n      class=\"el-rate__text\"\n      :style=\"{ color: textColor }\"\n    >\n      {{ text }}\n    </span>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, inject, computed, ref, watch } from 'vue'\nimport { isObject, isArray } from '@vue/shared'\nimport { elFormKey } from '@element-plus/tokens'\nimport { hasClass } from '@element-plus/utils/dom'\nimport { EVENT_CODE } from '@element-plus/utils/aria'\n\nimport { UPDATE_MODEL_EVENT } from '@element-plus/utils/constants'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { StarFilled, Star } from '@element-plus/icons-vue'\nimport { rateProps, rateEmits } from './rate'\nimport type { ElFormContext } from '@element-plus/tokens'\n\nfunction getValueFromMap<T>(\n  value: number,\n  map: Record<string, T | { excluded?: boolean; value: T }>\n) {\n  const isExcludedObject = (\n    val: unknown\n  ): val is { excluded?: boolean } & Record<any, unknown> => isObject(val)\n\n  const matchedKeys = Object.keys(map)\n    .map((key) => +key)\n    .filter((key) => {\n      const val = map[key]\n      const excluded = isExcludedObject(val) ? val.excluded : false\n      return excluded ? value < key : value <= key\n    })\n    .sort((a, b) => a - b)\n  const matchedValue = map[matchedKeys[0]]\n  return (isExcludedObject(matchedValue) && matchedValue.value) || matchedValue\n}\n\nexport default defineComponent({\n  name: 'ElRate',\n  components: {\n    ElIcon,\n    StarFilled,\n    Star,\n  },\n  props: rateProps,\n  emits: rateEmits,\n\n  setup(props, { emit }) {\n    const elForm = inject(elFormKey, {} as ElFormContext)\n\n    const currentValue = ref(props.modelValue)\n    const hoverIndex = ref(-1)\n    const pointerAtLeftHalf = ref(true)\n\n    const rateDisabled = computed(() => props.disabled || elForm.disabled)\n    const text = computed(() => {\n      let result = ''\n      if (props.showScore) {\n        result = props.scoreTemplate.replace(\n          /\\{\\s*value\\s*\\}/,\n          rateDisabled.value ? `${props.modelValue}` : `${currentValue.value}`\n        )\n      } else if (props.showText) {\n        result = props.texts[Math.ceil(currentValue.value) - 1]\n      }\n      return result\n    })\n    const valueDecimal = computed(\n      () => props.modelValue * 100 - Math.floor(props.modelValue) * 100\n    )\n    const colorMap = computed(() =>\n      isArray(props.colors)\n        ? {\n            [props.lowThreshold]: props.colors[0],\n            [props.highThreshold]: { value: props.colors[1], excluded: true },\n            [props.max]: props.colors[2],\n          }\n        : props.colors\n    )\n    const activeColor = computed(() =>\n      getValueFromMap(currentValue.value, colorMap.value)\n    )\n    const decimalStyle = computed(() => {\n      let width = ''\n      if (rateDisabled.value) {\n        width = `${valueDecimal.value}%`\n      } else if (props.allowHalf) {\n        width = '50%'\n      }\n      return {\n        color: activeColor.value,\n        width,\n      }\n    })\n    const componentMap = computed(() =>\n      isArray(props.icons)\n        ? {\n            [props.lowThreshold]: props.icons[0],\n            [props.highThreshold]: {\n              value: props.icons[1],\n              excluded: true,\n            },\n            [props.max]: props.icons[2],\n          }\n        : props.icons\n    )\n    const decimalIconComponent = computed(() =>\n      getValueFromMap(props.modelValue, componentMap.value)\n    )\n    const voidComponent = computed(() =>\n      rateDisabled.value ? props.disabledvoidIcon : props.voidIcon\n    )\n    const activeComponent = computed(() =>\n      getValueFromMap(currentValue.value, componentMap.value)\n    )\n    const iconComponents = computed(() => {\n      const result = Array(props.max)\n      const threshold = currentValue.value\n      result.fill(activeComponent.value, 0, threshold)\n      result.fill(voidComponent.value, threshold, props.max)\n      return result\n    })\n\n    function showDecimalIcon(item: number) {\n      const showWhenDisabled =\n        rateDisabled.value &&\n        valueDecimal.value > 0 &&\n        item - 1 < props.modelValue &&\n        item > props.modelValue\n      const showWhenAllowHalf =\n        props.allowHalf &&\n        pointerAtLeftHalf.value &&\n        item - 0.5 <= currentValue.value &&\n        item > currentValue.value\n      return showWhenDisabled || showWhenAllowHalf\n    }\n\n    function getIconStyle(item: number) {\n      const voidColor = rateDisabled.value\n        ? props.disabledVoidColor\n        : props.voidColor\n      return {\n        color: item <= currentValue.value ? activeColor.value : voidColor,\n      }\n    }\n\n    function selectValue(value: number) {\n      if (rateDisabled.value) {\n        return\n      }\n      if (props.allowHalf && pointerAtLeftHalf.value) {\n        emit(UPDATE_MODEL_EVENT, currentValue.value)\n        if (props.modelValue !== currentValue.value) {\n          emit('change', currentValue.value)\n        }\n      } else {\n        emit(UPDATE_MODEL_EVENT, value)\n        if (props.modelValue !== value) {\n          emit('change', value)\n        }\n      }\n    }\n\n    function handleKey(e: KeyboardEvent) {\n      if (rateDisabled.value) {\n        return\n      }\n      let _currentValue = currentValue.value\n      const code = e.code\n      if (code === EVENT_CODE.up || code === EVENT_CODE.right) {\n        if (props.allowHalf) {\n          _currentValue += 0.5\n        } else {\n          _currentValue += 1\n        }\n        e.stopPropagation()\n        e.preventDefault()\n      } else if (code === EVENT_CODE.left || code === EVENT_CODE.down) {\n        if (props.allowHalf) {\n          _currentValue -= 0.5\n        } else {\n          _currentValue -= 1\n        }\n        e.stopPropagation()\n        e.preventDefault()\n      }\n      _currentValue = _currentValue < 0 ? 0 : _currentValue\n      _currentValue = _currentValue > props.max ? props.max : _currentValue\n      emit(UPDATE_MODEL_EVENT, _currentValue)\n      emit('change', _currentValue)\n      return _currentValue\n    }\n\n    function setCurrentValue(value: number, event: MouseEvent) {\n      if (rateDisabled.value) {\n        return\n      }\n      if (props.allowHalf) {\n        let target = event.target as HTMLElement\n        if (hasClass(target, 'el-rate__item')) {\n          target = target.querySelector('.el-rate__icon')!\n        }\n        if (target.clientWidth === 0 || hasClass(target, 'el-rate__decimal')) {\n          target = target.parentNode as HTMLElement\n        }\n        pointerAtLeftHalf.value = event.offsetX * 2 <= target.clientWidth\n        currentValue.value = pointerAtLeftHalf.value ? value - 0.5 : value\n      } else {\n        currentValue.value = value\n      }\n      hoverIndex.value = value\n    }\n\n    function resetCurrentValue() {\n      if (rateDisabled.value) {\n        return\n      }\n      if (props.allowHalf) {\n        pointerAtLeftHalf.value =\n          props.modelValue !== Math.floor(props.modelValue)\n      }\n      currentValue.value = props.modelValue\n      hoverIndex.value = -1\n    }\n\n    watch(\n      () => props.modelValue,\n      (val) => {\n        currentValue.value = val\n        pointerAtLeftHalf.value =\n          props.modelValue !== Math.floor(props.modelValue)\n      }\n    )\n\n    if (!props.modelValue) {\n      emit(UPDATE_MODEL_EVENT, 0)\n    }\n\n    return {\n      hoverIndex,\n      currentValue,\n      rateDisabled,\n      text,\n      decimalStyle,\n      decimalIconComponent,\n      iconComponents,\n\n      showDecimalIcon,\n      getIconStyle,\n      selectValue,\n      handleKey,\n      setCurrentValue,\n      resetCurrentValue,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;sBACEA,kBAAA;IACEC,KAAA,EAAM;IACNC,IAAA,EAAK;IACJ,iBAAeC,IAAA,CAAAC,YAAA;IACf,kBAAgBD,IAAA,CAAAE,IAAA;IACjB,iBAAc;IACb,iBAAeF,IAAA,CAAAG,GAAA;IAChBC,QAAA,EAAS;IACRC,SAAA,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAASP,IAAA,CAAAQ,SAAA,IAAAR,IAAA,CAAAQ,SAAA,IAAAD,IAAA;wBAEVV,kBAAA,CAAAY,QAAA,QAAAC,UAAA,CACwBV,IAAA,CAAAG,GAAA,GAAdQ,IAAA,EAAMC,GAAA;wBADhBf,kBAAA;MAEGe,GAAA;MACDd,KAAA,EAAM;MACLe,KAAA,EAAAC,cAAA;QAAAC,MAAA,EAAiBf,IAAA,CAAAgB,YAAA;MAAA;MACjBC,WAAA,EAAAC,MAAA,IAAWlB,IAAA,CAAAmB,eAAA,CAAgBR,IAAA,EAAMO,MAAA;MACjCE,YAAA,EAAAd,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAYP,IAAA,CAAAqB,iBAAA,IAAArB,IAAA,CAAAqB,iBAAA,IAAAd,IAAA;MACZe,OAAA,EAAAJ,MAAA,IAAOlB,IAAA,CAAAuB,WAAA,CAAYZ,IAAA;IAAA,IAEpBa,WAAA,CAAAC,kBAAA;MACG3B,KAAA,EAAA4B,cAAA;QAAAC,KAAA,EAAiB3B,IAAA,CAAA4B,UAAA,KAAejB;MAAA,IAC3B;MACLE,KAAA,EAAAC,cAAA,CAAOd,IAAA,CAAA6B,YAAA,CAAalB,IAAA;IAAA;uBAErB,Q,aAAAmB,WAAA,CAAAC,uBAAA,CAAgB/B,IAAA,CAAAgC,cAAA,CAAerB,IAAA,UAEvBX,IAAA,CAAAiC,eAAA,CAAgBtB,IAAA,KAAAuB,SAAA,IADxBJ,WAAA,CAAAL,kBAAA;;QAEGZ,KAAA,EAAAC,cAAA,CAAOd,IAAA,CAAAmC,YAAA;QACRrC,KAAA,EAAM;MAAA;yBAEN,Q,aAAAgC,WAAA,CAAAC,uBAAA,CAAgB/B,IAAA,CAAAoC,oBAAA,I;;;;;aAKdpC,IAAA,CAAAqC,QAAA,IAAYrC,IAAA,CAAAsC,SAAA,IAAAJ,SAAA,IADpBrC,kBAAA;;IAEEC,KAAA,EAAM;IACLe,KAAA,EAAAC,cAAA;MAAAyB,KAAA,EAAgBvC,IAAA,CAAAwC;IAAA;qBAEdxC,IAAA,CAAAE,IAAA,SAAAuC,kBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}