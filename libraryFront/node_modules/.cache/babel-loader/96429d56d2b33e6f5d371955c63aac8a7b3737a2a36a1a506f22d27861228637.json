{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, ref, computed } from 'vue';\nimport { ElSelect } from '../../select/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Clock, CircleClose } from '@element-plus/icons-vue';\nconst {\n  Option: ElOption\n} = ElSelect;\nconst parseTime = time => {\n  const values = (time || \"\").split(\":\");\n  if (values.length >= 2) {\n    const hours = parseInt(values[0], 10);\n    const minutes = parseInt(values[1], 10);\n    return {\n      hours,\n      minutes\n    };\n  }\n  return null;\n};\nconst compareTime = (time1, time2) => {\n  const value1 = parseTime(time1);\n  const value2 = parseTime(time2);\n  const minutes1 = value1.minutes + value1.hours * 60;\n  const minutes2 = value2.minutes + value2.hours * 60;\n  if (minutes1 === minutes2) {\n    return 0;\n  }\n  return minutes1 > minutes2 ? 1 : -1;\n};\nconst formatTime = time => {\n  return `${time.hours < 10 ? `0${time.hours}` : time.hours}:${time.minutes < 10 ? `0${time.minutes}` : time.minutes}`;\n};\nconst nextTime = (time, step) => {\n  const timeValue = parseTime(time);\n  const stepValue = parseTime(step);\n  const next = {\n    hours: timeValue.hours,\n    minutes: timeValue.minutes\n  };\n  next.minutes += stepValue.minutes;\n  next.hours += stepValue.hours;\n  next.hours += Math.floor(next.minutes / 60);\n  next.minutes = next.minutes % 60;\n  return formatTime(next);\n};\nvar script = defineComponent({\n  name: \"ElTimeSelect\",\n  components: {\n    ElSelect,\n    ElOption,\n    ElIcon\n  },\n  model: {\n    prop: \"value\",\n    event: \"change\"\n  },\n  props: {\n    modelValue: String,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    editable: {\n      type: Boolean,\n      default: true\n    },\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    size: {\n      type: String,\n      default: \"\",\n      validator: value => !value || [\"medium\", \"small\", \"mini\"].indexOf(value) !== -1\n    },\n    placeholder: {\n      type: String,\n      default: \"\"\n    },\n    start: {\n      type: String,\n      default: \"09:00\"\n    },\n    end: {\n      type: String,\n      default: \"18:00\"\n    },\n    step: {\n      type: String,\n      default: \"00:30\"\n    },\n    minTime: {\n      type: String,\n      default: \"\"\n    },\n    maxTime: {\n      type: String,\n      default: \"\"\n    },\n    name: {\n      type: String,\n      default: \"\"\n    },\n    prefixIcon: {\n      type: [String, Object],\n      default: Clock\n    },\n    clearIcon: {\n      type: [String, Object],\n      default: CircleClose\n    }\n  },\n  emits: [\"change\", \"blur\", \"focus\", \"update:modelValue\"],\n  setup(props) {\n    const select = ref(null);\n    const value = computed(() => props.modelValue);\n    const items = computed(() => {\n      const result = [];\n      if (props.start && props.end && props.step) {\n        let current = props.start;\n        while (compareTime(current, props.end) <= 0) {\n          result.push({\n            value: current,\n            disabled: compareTime(current, props.minTime || \"-1:-1\") <= 0 || compareTime(current, props.maxTime || \"100:100\") >= 0\n          });\n          current = nextTime(current, props.step);\n        }\n      }\n      return result;\n    });\n    const blur = () => {\n      var _a, _b;\n      (_b = (_a = select.value) == null ? void 0 : _a.blur) == null ? void 0 : _b.call(_a);\n    };\n    const focus = () => {\n      var _a, _b;\n      (_b = (_a = select.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    };\n    return {\n      select,\n      value,\n      items,\n      blur,\n      focus\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["Option","ElOption","ElSelect","parseTime","time","values","split","length","hours","parseInt","minutes","compareTime","time1","time2","value1","value2","minutes1","minutes2","formatTime","nextTime","step","timeValue","stepValue","next","Math","floor","script","defineComponent","name","components","ElIcon","model","prop","event","props","modelValue","String","disabled","type","Boolean","default","editable","clearable","size","validator","value","indexOf","placeholder","start","end","minTime","maxTime","prefixIcon","Object","Clock","clearIcon","CircleClose","emits","setup","select","ref","computed","items","result","current","push","blur","_b","_a","call","focus"],"sources":["../../../../../../packages/components/time-select/src/time-select.vue"],"sourcesContent":["<template>\n  <el-select\n    ref=\"select\"\n    :model-value=\"value\"\n    :disabled=\"disabled\"\n    :clearable=\"clearable\"\n    :clear-icon=\"clearIcon\"\n    :size=\"size\"\n    :placeholder=\"placeholder\"\n    default-first-option\n    :filterable=\"editable\"\n    @update:model-value=\"(event) => $emit('update:modelValue', event)\"\n    @change=\"(event) => $emit('change', event)\"\n    @blur=\"(event) => $emit('blur', event)\"\n    @focus=\"(event) => $emit('focus', event)\"\n  >\n    <el-option\n      v-for=\"item in items\"\n      :key=\"item.value\"\n      :label=\"item.value\"\n      :value=\"item.value\"\n      :disabled=\"item.disabled\"\n    />\n    <template #prefix>\n      <el-icon v-if=\"prefixIcon\" class=\"el-input__prefix-icon\">\n        <component :is=\"prefixIcon\" />\n      </el-icon>\n    </template>\n  </el-select>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue'\nimport ElSelect from '@element-plus/components/select'\nimport ElIcon from '@element-plus/components/icon'\nimport { CircleClose, Clock } from '@element-plus/icons-vue'\n\nimport type { PropType, Component } from 'vue'\nimport type { ComponentSize } from '@element-plus/utils/types'\n\nconst { Option: ElOption } = ElSelect\n\ninterface Time {\n  hours: number\n  minutes: number\n}\n\nconst parseTime = (time: string): null | Time => {\n  const values = (time || '').split(':')\n  if (values.length >= 2) {\n    const hours = parseInt(values[0], 10)\n    const minutes = parseInt(values[1], 10)\n    return {\n      hours,\n      minutes,\n    }\n  }\n  return null\n}\nconst compareTime = (time1: string, time2: string): number => {\n  const value1 = parseTime(time1)\n  const value2 = parseTime(time2)\n  const minutes1 = value1.minutes + value1.hours * 60\n  const minutes2 = value2.minutes + value2.hours * 60\n  if (minutes1 === minutes2) {\n    return 0\n  }\n  return minutes1 > minutes2 ? 1 : -1\n}\nconst formatTime = (time: Time): string => {\n  return `${time.hours < 10 ? `0${time.hours}` : time.hours}:${\n    time.minutes < 10 ? `0${time.minutes}` : time.minutes\n  }`\n}\nconst nextTime = (time: string, step: string): string => {\n  const timeValue = parseTime(time)\n  const stepValue = parseTime(step)\n  const next = {\n    hours: timeValue.hours,\n    minutes: timeValue.minutes,\n  }\n  next.minutes += stepValue.minutes\n  next.hours += stepValue.hours\n  next.hours += Math.floor(next.minutes / 60)\n  next.minutes = next.minutes % 60\n  return formatTime(next)\n}\n\nexport default defineComponent({\n  name: 'ElTimeSelect',\n  components: { ElSelect, ElOption, ElIcon },\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  props: {\n    modelValue: String,\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    editable: {\n      type: Boolean,\n      default: true,\n    },\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    size: {\n      type: String as PropType<ComponentSize>,\n      default: '',\n      validator: (value: string) =>\n        !value || ['medium', 'small', 'mini'].indexOf(value) !== -1,\n    },\n    placeholder: {\n      type: String,\n      default: '',\n    },\n    start: {\n      type: String,\n      default: '09:00',\n    },\n    end: {\n      type: String,\n      default: '18:00',\n    },\n    step: {\n      type: String,\n      default: '00:30',\n    },\n    minTime: {\n      type: String,\n      default: '',\n    },\n    maxTime: {\n      type: String,\n      default: '',\n    },\n    name: {\n      type: String,\n      default: '',\n    },\n    prefixIcon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: Clock,\n    },\n    clearIcon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: CircleClose,\n    },\n  },\n  emits: ['change', 'blur', 'focus', 'update:modelValue'],\n  setup(props) {\n    // computed\n    const select = ref(null)\n    const value = computed(() => props.modelValue)\n    const items = computed(() => {\n      const result = []\n      if (props.start && props.end && props.step) {\n        let current = props.start\n        while (compareTime(current, props.end) <= 0) {\n          result.push({\n            value: current,\n            disabled:\n              compareTime(current, props.minTime || '-1:-1') <= 0 ||\n              compareTime(current, props.maxTime || '100:100') >= 0,\n          })\n          current = nextTime(current, props.step)\n        }\n      }\n      return result\n    })\n    const blur = () => {\n      select.value?.blur?.()\n    }\n    const focus = () => {\n      select.value?.focus?.()\n    }\n\n    return {\n      select,\n      value,\n      items,\n      blur,\n      focus,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}