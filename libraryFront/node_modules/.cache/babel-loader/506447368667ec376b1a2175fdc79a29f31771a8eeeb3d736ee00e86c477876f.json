{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, renderSlot } from 'vue';\nconst _hoisted_1 = [\"href\"];\nconst _hoisted_2 = {\n  key: 1,\n  class: \"el-link--inner\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  return openBlock(), createElementBlock(\"a\", {\n    class: normalizeClass([\"el-link\", _ctx.type ? `el-link--${_ctx.type}` : \"\", _ctx.disabled && \"is-disabled\", _ctx.underline && !_ctx.disabled && \"is-underline\"]),\n    href: _ctx.disabled || !_ctx.href ? void 0 : _ctx.href,\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, [_ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), _ctx.$slots.default ? (openBlock(), createElementBlock(\"span\", _hoisted_2, [renderSlot(_ctx.$slots, \"default\")])) : createCommentVNode(\"v-if\", true), _ctx.$slots.icon ? renderSlot(_ctx.$slots, \"icon\", {\n    key: 2\n  }) : createCommentVNode(\"v-if\", true)], 10, _hoisted_1);\n}\nexport { render };","map":{"version":3,"names":["class","createElementBlock","normalizeClass","href","_ctx","disabled","onClick","_cache","args","handleClick","icon","openBlock","createBlock","_component_el_icon","key","resolveDynamicComponent","$slots","default","_hoisted_2","renderSlot","createCommentVNode"],"sources":["../../../../../../packages/components/link/src/link.vue?vue&type=template&id=6a422645&lang.js"],"sourcesContent":["<template>\n  <a\n    :class=\"[\n      'el-link',\n      type ? `el-link--${type}` : '',\n      disabled && 'is-disabled',\n      underline && !disabled && 'is-underline',\n    ]\"\n    :href=\"disabled || !href ? undefined : href\"\n    @click=\"handleClick\"\n  >\n    <el-icon v-if=\"icon\"><component :is=\"icon\" /></el-icon>\n    <span v-if=\"$slots.default\" class=\"el-link--inner\">\n      <slot></slot>\n    </span>\n\n    <slot v-if=\"$slots.icon\" name=\"icon\"></slot>\n  </a>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { linkProps, linkEmits } from './link'\n\nexport default defineComponent({\n  name: 'ElLink',\n\n  components: { ElIcon },\n\n  props: linkProps,\n  emits: linkEmits,\n\n  setup(props, { emit }) {\n    function handleClick(event: MouseEvent) {\n      if (!props.disabled) emit('click', event)\n    }\n\n    return {\n      handleClick,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;EAYgCA,KAAA,EAAM;AAAA;;;sBAXpCC,kBAAA;IACGD,KAAA,EAAAE,cAAA,E;IAMAC,IAAA,EAAMC,IAAA,CAAAC,QAAA,KAAaD,IAAA,CAAAD,IAAA,GAAO,SAAYC,IAAA,CAAAD,IAAA;IACtCG,OAAA,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAOJ,IAAA,CAAAK,WAAA,IAAAL,IAAA,CAAAK,WAAA,IAAAD,IAAA;MAEOJ,IAAA,CAAAM,IAAA,IAAAC,SAAA,IAAfC,WAAA,CAAAC,kBAAA;IAAAC,GAAA;EAAA;qBAAqB,Q,aAAAF,WAAA,CAAwBG,uBAAA,CAARX,IAAA,CAAAM,IAAA,I;;0CACzBN,IAAA,CAAAY,MAAA,CAAOC,OAAA,IAAAN,SAAA,IAAnBV,kBAAA,SAAAiB,UAAA,GACEC,UAAA,CAAAf,IAAA,CAAAY,MAAA,a,uCAGUZ,IAAA,CAAAY,MAAA,CAAON,IAAA,GAAnBS,UAAA,CAAAf,IAAA,CAAAY,MAAA;IAAAF,GAAA;EAAA,KAAAM,kBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}