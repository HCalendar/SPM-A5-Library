{"ast":null,"code":"import { buildProps, definePropType } from '../../../utils/props.mjs';\nimport { isNumber } from '../../../utils/util.mjs';\nconst scrollbarProps = buildProps({\n  height: {\n    type: [String, Number],\n    default: \"\"\n  },\n  maxHeight: {\n    type: [String, Number],\n    default: \"\"\n  },\n  native: {\n    type: Boolean,\n    default: false\n  },\n  wrapStyle: {\n    type: definePropType([String, Object, Array]),\n    default: \"\"\n  },\n  wrapClass: {\n    type: [String, Array],\n    default: \"\"\n  },\n  viewClass: {\n    type: [String, Array],\n    default: \"\"\n  },\n  viewStyle: {\n    type: [String, Array],\n    default: \"\"\n  },\n  noresize: Boolean,\n  tag: {\n    type: String,\n    default: \"div\"\n  },\n  always: {\n    type: Boolean,\n    default: false\n  },\n  minSize: {\n    type: Number,\n    default: 20\n  }\n});\nconst scrollbarEmits = {\n  scroll: ({\n    scrollTop,\n    scrollLeft\n  }) => isNumber(scrollTop) && isNumber(scrollLeft)\n};\nexport { scrollbarEmits, scrollbarProps };","map":{"version":3,"names":["scrollbarProps","buildProps","height","type","String","Number","default","maxHeight","native","Boolean","wrapStyle","definePropType","Object","Array","wrapClass","viewClass","viewStyle","noresize","tag","always","minSize","scrollbarEmits","scroll","scrollTop","scrollLeft","isNumber"],"sources":["../../../../../../packages/components/scrollbar/src/scrollbar.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils/props'\nimport { isNumber } from '@element-plus/utils/util'\nimport type { StyleValue, ExtractPropTypes } from 'vue'\n\nexport const scrollbarProps = buildProps({\n  height: {\n    type: [String, Number],\n    default: '',\n  },\n  maxHeight: {\n    type: [String, Number],\n    default: '',\n  },\n  native: {\n    type: Boolean,\n    default: false,\n  },\n  wrapStyle: {\n    type: definePropType<StyleValue>([String, Object, Array]),\n    default: '',\n  },\n  wrapClass: {\n    type: [String, Array],\n    default: '',\n  },\n  viewClass: {\n    type: [String, Array],\n    default: '',\n  },\n  viewStyle: {\n    type: [String, Array],\n    default: '',\n  },\n  noresize: Boolean, // 如果 container 尺寸不会发生变化，最好设置它可以优化性能\n  tag: {\n    type: String,\n    default: 'div',\n  },\n  always: {\n    type: Boolean,\n    default: false,\n  },\n  minSize: {\n    type: Number,\n    default: 20,\n  },\n} as const)\n\nexport type ScrollbarProps = ExtractPropTypes<typeof scrollbarProps>\n\nexport const scrollbarEmits = {\n  scroll: ({\n    scrollTop,\n    scrollLeft,\n  }: {\n    scrollTop: number\n    scrollLeft: number\n  }) => isNumber(scrollTop) && isNumber(scrollLeft),\n}\nexport type ScrollbarEmits = typeof scrollbarEmits\n"],"mappings":";;MAIaA,cAAA,GAAiBC,UAAA,CAAW;EACvCC,MAAA,EAAQ;IACNC,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAA;IACfC,OAAA,EAAS;EAAA;EAEXC,SAAA,EAAW;IACTJ,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAA;IACfC,OAAA,EAAS;EAAA;EAEXE,MAAA,EAAQ;IACNL,IAAA,EAAMM,OAAA;IACNH,OAAA,EAAS;EAAA;EAEXI,SAAA,EAAW;IACTP,IAAA,EAAMQ,cAAA,CAA2B,CAACP,MAAA,EAAQQ,MAAA,EAAQC,KAAA;IAClDP,OAAA,EAAS;EAAA;EAEXQ,SAAA,EAAW;IACTX,IAAA,EAAM,CAACC,MAAA,EAAQS,KAAA;IACfP,OAAA,EAAS;EAAA;EAEXS,SAAA,EAAW;IACTZ,IAAA,EAAM,CAACC,MAAA,EAAQS,KAAA;IACfP,OAAA,EAAS;EAAA;EAEXU,SAAA,EAAW;IACTb,IAAA,EAAM,CAACC,MAAA,EAAQS,KAAA;IACfP,OAAA,EAAS;EAAA;EAEXW,QAAA,EAAUR,OAAA;EACVS,GAAA,EAAK;IACHf,IAAA,EAAMC,MAAA;IACNE,OAAA,EAAS;EAAA;EAEXa,MAAA,EAAQ;IACNhB,IAAA,EAAMM,OAAA;IACNH,OAAA,EAAS;EAAA;EAEXc,OAAA,EAAS;IACPjB,IAAA,EAAME,MAAA;IACNC,OAAA,EAAS;EAAA;AAAA;MAMAe,cAAA,GAAiB;EAC5BC,MAAA,EAAQA,CAAC;IACPC,SAAA;IACAC;EAAA,MAIIC,QAAA,CAASF,SAAA,KAAcE,QAAA,CAASD,UAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}