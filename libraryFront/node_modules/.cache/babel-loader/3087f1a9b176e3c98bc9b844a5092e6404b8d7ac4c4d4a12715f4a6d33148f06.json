{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, withKeys, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, toDisplayString, normalizeStyle, Fragment, createVNode } from 'vue';\nconst _hoisted_1 = [\"aria-checked\", \"aria-disabled\"];\nconst _hoisted_2 = [\"id\", \"name\", \"true-value\", \"false-value\", \"disabled\"];\nconst _hoisted_3 = [\"aria-hidden\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"el-switch__inner\"\n};\nconst _hoisted_5 = [\"aria-hidden\"];\nconst _hoisted_6 = [\"aria-hidden\"];\nconst _hoisted_7 = {\n  class: \"el-switch__action\"\n};\nconst _hoisted_8 = [\"aria-hidden\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_loading = resolveComponent(\"loading\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"el-switch\", {\n      \"is-disabled\": _ctx.switchDisabled,\n      \"is-checked\": _ctx.checked\n    }]),\n    role: \"switch\",\n    \"aria-checked\": _ctx.checked,\n    \"aria-disabled\": _ctx.switchDisabled,\n    onClick: _cache[2] || (_cache[2] = withModifiers((...args) => _ctx.switchValue && _ctx.switchValue(...args), [\"prevent\"]))\n  }, [createElementVNode(\"input\", {\n    id: _ctx.id,\n    ref: \"input\",\n    class: \"el-switch__input\",\n    type: \"checkbox\",\n    name: _ctx.name,\n    \"true-value\": _ctx.activeValue,\n    \"false-value\": _ctx.inactiveValue,\n    disabled: _ctx.switchDisabled,\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n    onKeydown: _cache[1] || (_cache[1] = withKeys((...args) => _ctx.switchValue && _ctx.switchValue(...args), [\"enter\"]))\n  }, null, 40, _hoisted_2), !_ctx.inlinePrompt && (_ctx.inactiveIcon || _ctx.inactiveText) ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass([\"el-switch__label\", \"el-switch__label--left\", !_ctx.checked ? \"is-active\" : \"\"])\n  }, [_ctx.inactiveIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.inactiveIcon)))]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), !_ctx.inactiveIcon && _ctx.inactiveText ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    \"aria-hidden\": _ctx.checked\n  }, toDisplayString(_ctx.inactiveText), 9, _hoisted_3)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"span\", {\n    ref: \"core\",\n    class: \"el-switch__core\",\n    style: normalizeStyle({\n      width: (_ctx.width || 40) + \"px\"\n    })\n  }, [_ctx.inlinePrompt ? (openBlock(), createElementBlock(\"div\", _hoisted_4, [_ctx.activeIcon || _ctx.inactiveIcon ? (openBlock(), createElementBlock(Fragment, {\n    key: 0\n  }, [_ctx.activeIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    class: normalizeClass([\"is-icon\", _ctx.checked ? \"is-show\" : \"is-hide\"])\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.activeIcon)))]),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), _ctx.inactiveIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 1,\n    class: normalizeClass([\"is-icon\", !_ctx.checked ? \"is-show\" : \"is-hide\"])\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.inactiveIcon)))]),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 64)) : _ctx.activeText || _ctx.inactiveIcon ? (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [_ctx.activeText ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass([\"is-text\", _ctx.checked ? \"is-show\" : \"is-hide\"]),\n    \"aria-hidden\": !_ctx.checked\n  }, toDisplayString(_ctx.activeText.substr(0, 1)), 11, _hoisted_5)) : createCommentVNode(\"v-if\", true), _ctx.inactiveText ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    class: normalizeClass([\"is-text\", !_ctx.checked ? \"is-show\" : \"is-hide\"]),\n    \"aria-hidden\": _ctx.checked\n  }, toDisplayString(_ctx.inactiveText.substr(0, 1)), 11, _hoisted_6)) : createCommentVNode(\"v-if\", true)], 64)) : createCommentVNode(\"v-if\", true)])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", _hoisted_7, [_ctx.loading ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    class: \"is-loading\"\n  }, {\n    default: withCtx(() => [createVNode(_component_loading)]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true)])], 4), !_ctx.inlinePrompt && (_ctx.activeIcon || _ctx.activeText) ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    class: normalizeClass([\"el-switch__label\", \"el-switch__label--right\", _ctx.checked ? \"is-active\" : \"\"])\n  }, [_ctx.activeIcon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.activeIcon)))]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), !_ctx.activeIcon && _ctx.activeText ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    \"aria-hidden\": !_ctx.checked\n  }, toDisplayString(_ctx.activeText), 9, _hoisted_8)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)], 10, _hoisted_1);\n}\nexport { render };","map":{"version":3,"names":["class","createElementBlock","normalizeClass","_ctx","switchDisabled","checked","role","onClick","_cache","withModifiers","args","switchValue","createElementVNode","id","ref","type","name","activeValue","inactiveValue","disabled","onChange","handleChange","onKeydown","withKeys","inlinePrompt","inactiveIcon","inactiveText","openBlock","createBlock","_component_el_icon","key","resolveDynamicComponent","_hoisted_3","createCommentVNode","style","normalizeStyle","width","_hoisted_4","activeIcon","Fragment","activeText","substr","_hoisted_5","_hoisted_6","_hoisted_7","loading","createVNode","_component_loading","_","_hoisted_8"],"sources":["../../../../../../packages/components/switch/src/switch.vue?vue&type=template&id=538fbc85&lang.js"],"sourcesContent":["<template>\n  <div\n    class=\"el-switch\"\n    :class=\"{ 'is-disabled': switchDisabled, 'is-checked': checked }\"\n    role=\"switch\"\n    :aria-checked=\"checked\"\n    :aria-disabled=\"switchDisabled\"\n    @click.prevent=\"switchValue\"\n  >\n    <input\n      :id=\"id\"\n      ref=\"input\"\n      class=\"el-switch__input\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :true-value=\"activeValue\"\n      :false-value=\"inactiveValue\"\n      :disabled=\"switchDisabled\"\n      @change=\"handleChange\"\n      @keydown.enter=\"switchValue\"\n    />\n    <span\n      v-if=\"!inlinePrompt && (inactiveIcon || inactiveText)\"\n      :class=\"[\n        'el-switch__label',\n        'el-switch__label--left',\n        !checked ? 'is-active' : '',\n      ]\"\n    >\n      <el-icon v-if=\"inactiveIcon\"><component :is=\"inactiveIcon\" /></el-icon>\n      <span v-if=\"!inactiveIcon && inactiveText\" :aria-hidden=\"checked\">{{\n        inactiveText\n      }}</span>\n    </span>\n    <span\n      ref=\"core\"\n      class=\"el-switch__core\"\n      :style=\"{ width: (width || 40) + 'px' }\"\n    >\n      <div v-if=\"inlinePrompt\" class=\"el-switch__inner\">\n        <template v-if=\"activeIcon || inactiveIcon\">\n          <el-icon\n            v-if=\"activeIcon\"\n            class=\"is-icon\"\n            :class=\"checked ? 'is-show' : 'is-hide'\"\n          >\n            <component :is=\"activeIcon\" />\n          </el-icon>\n          <el-icon\n            v-if=\"inactiveIcon\"\n            class=\"is-icon\"\n            :class=\"!checked ? 'is-show' : 'is-hide'\"\n          >\n            <component :is=\"inactiveIcon\" />\n          </el-icon>\n        </template>\n        <template v-else-if=\"activeText || inactiveIcon\">\n          <span\n            v-if=\"activeText\"\n            class=\"is-text\"\n            :class=\"checked ? 'is-show' : 'is-hide'\"\n            :aria-hidden=\"!checked\"\n          >\n            {{ activeText.substr(0, 1) }}\n          </span>\n          <span\n            v-if=\"inactiveText\"\n            class=\"is-text\"\n            :class=\"!checked ? 'is-show' : 'is-hide'\"\n            :aria-hidden=\"checked\"\n          >\n            {{ inactiveText.substr(0, 1) }}\n          </span>\n        </template>\n      </div>\n      <div class=\"el-switch__action\">\n        <el-icon v-if=\"loading\" class=\"is-loading\"><loading /></el-icon>\n      </div>\n    </span>\n    <span\n      v-if=\"!inlinePrompt && (activeIcon || activeText)\"\n      :class=\"[\n        'el-switch__label',\n        'el-switch__label--right',\n        checked ? 'is-active' : '',\n      ]\"\n    >\n      <el-icon v-if=\"activeIcon\"><component :is=\"activeIcon\" /></el-icon>\n      <span v-if=\"!activeIcon && activeText\" :aria-hidden=\"!checked\">{{\n        activeText\n      }}</span>\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, onMounted, ref, nextTick, watch } from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { isBool } from '@element-plus/utils/util'\nimport { throwError, debugWarn } from '@element-plus/utils/error'\nimport ElIcon from '@element-plus/components/icon'\nimport { Loading } from '@element-plus/icons-vue'\nimport {\n  UPDATE_MODEL_EVENT,\n  CHANGE_EVENT,\n  INPUT_EVENT,\n} from '@element-plus/utils/constants'\nimport { useDisabled, useFormItem } from '@element-plus/hooks'\nimport { switchProps, switchEmits } from './switch'\n\nconst COMPONENT_NAME = 'ElSwitch'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  components: { ElIcon, Loading },\n\n  props: switchProps,\n  emits: switchEmits,\n\n  setup(props, { emit }) {\n    const { formItem } = useFormItem()\n    const switchDisabled = useDisabled(computed(() => props.loading))\n\n    const isModelValue = ref(props.modelValue !== false)\n    const input = ref<HTMLInputElement>()\n    const core = ref<HTMLSpanElement>()\n\n    watch(\n      () => props.modelValue,\n      () => {\n        isModelValue.value = true\n      }\n    )\n\n    watch(\n      () => props.value,\n      () => {\n        isModelValue.value = false\n      }\n    )\n\n    const actualValue = computed(() => {\n      return isModelValue.value ? props.modelValue : props.value\n    })\n\n    const checked = computed(() => actualValue.value === props.activeValue)\n\n    if (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n      emit(UPDATE_MODEL_EVENT, props.inactiveValue)\n      emit(CHANGE_EVENT, props.inactiveValue)\n      emit(INPUT_EVENT, props.inactiveValue)\n    }\n\n    watch(checked, () => {\n      input.value!.checked = checked.value\n\n      if (props.activeColor || props.inactiveColor) {\n        setBackgroundColor()\n      }\n\n      if (props.validateEvent) {\n        formItem?.validate?.('change')\n      }\n    })\n\n    const handleChange = (): void => {\n      const val = checked.value ? props.inactiveValue : props.activeValue\n      emit(UPDATE_MODEL_EVENT, val)\n      emit(CHANGE_EVENT, val)\n      emit(INPUT_EVENT, val)\n      nextTick(() => {\n        input.value!.checked = checked.value\n      })\n    }\n\n    const switchValue = (): void => {\n      if (switchDisabled.value) return\n\n      const { beforeChange } = props\n      if (!beforeChange) {\n        handleChange()\n        return\n      }\n\n      const shouldChange = beforeChange()\n\n      const isExpectType = [isPromise(shouldChange), isBool(shouldChange)].some(\n        (i) => i\n      )\n      if (!isExpectType) {\n        throwError(\n          COMPONENT_NAME,\n          'beforeChange must return type `Promise<boolean>` or `boolean`'\n        )\n      }\n\n      if (isPromise(shouldChange)) {\n        shouldChange\n          .then((result) => {\n            if (result) {\n              handleChange()\n            }\n          })\n          .catch((e) => {\n            debugWarn(COMPONENT_NAME, `some error occurred: ${e}`)\n          })\n      } else if (shouldChange) {\n        handleChange()\n      }\n    }\n\n    const setBackgroundColor = (): void => {\n      const newColor = checked.value ? props.activeColor : props.inactiveColor\n      const coreEl = core.value\n      if (props.borderColor) coreEl!.style.borderColor = props.borderColor\n      else if (!props.borderColor) coreEl!.style.borderColor = newColor\n      coreEl!.style.backgroundColor = newColor\n      ;(coreEl!.children[0] as HTMLDivElement).style.color = newColor\n    }\n\n    const focus = (): void => {\n      input.value?.focus?.()\n    }\n\n    onMounted(() => {\n      if (props.activeColor || props.inactiveColor || props.borderColor) {\n        setBackgroundColor()\n      }\n\n      input.value!.checked = checked.value\n    })\n\n    return {\n      input,\n      core,\n      switchDisabled,\n      checked,\n      handleChange,\n      switchValue,\n      focus,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}