{"ast":null,"code":"import { getCurrentInstance, computed } from 'vue';\nimport fromPairs from 'lodash/fromPairs';\nimport { debugWarn } from '../../utils/error.mjs';\nconst DEFAULT_EXCLUDE_KEYS = [\"class\", \"style\"];\nconst LISTENER_PREFIX = /^on[A-Z]/;\nconst useAttrs = (params = {}) => {\n  const {\n    excludeListeners = false,\n    excludeKeys = []\n  } = params;\n  const allExcludeKeys = excludeKeys.concat(DEFAULT_EXCLUDE_KEYS);\n  const instance = getCurrentInstance();\n  if (!instance) {\n    debugWarn(\"use-attrs\", \"getCurrentInstance() returned null. useAttrs() must be called at the top of a setup function\");\n    return computed(() => ({}));\n  }\n  return computed(() => {\n    var _a;\n    return fromPairs(Object.entries((_a = instance.proxy) == null ? void 0 : _a.$attrs).filter(([key]) => !allExcludeKeys.includes(key) && !(excludeListeners && LISTENER_PREFIX.test(key))));\n  });\n};\nexport { useAttrs };","map":{"version":3,"names":["DEFAULT_EXCLUDE_KEYS","LISTENER_PREFIX","useAttrs","params","excludeListeners","excludeKeys","allExcludeKeys","concat","instance","getCurrentInstance","debugWarn","computed","_a","fromPairs","Object","entries","proxy","$attrs","filter","key","includes","test"],"sources":["../../../../../packages/hooks/use-attrs/index.ts"],"sourcesContent":["import { getCurrentInstance, computed } from 'vue'\nimport fromPairs from 'lodash/fromPairs'\nimport { debugWarn } from '@element-plus/utils/error'\n\nimport type { ComputedRef } from 'vue'\n\ninterface Params {\n  excludeListeners?: boolean\n  excludeKeys?: string[]\n}\n\nconst DEFAULT_EXCLUDE_KEYS = ['class', 'style']\nconst LISTENER_PREFIX = /^on[A-Z]/\n\nexport const useAttrs = (\n  params: Params = {}\n): ComputedRef<Record<string, unknown>> => {\n  const { excludeListeners = false, excludeKeys = [] } = params\n  const allExcludeKeys = excludeKeys.concat(DEFAULT_EXCLUDE_KEYS)\n\n  const instance = getCurrentInstance()\n  if (!instance) {\n    debugWarn(\n      'use-attrs',\n      'getCurrentInstance() returned null. useAttrs() must be called at the top of a setup function'\n    )\n    return computed(() => ({}))\n  }\n\n  return computed(() =>\n    fromPairs(\n      Object.entries(instance.proxy?.$attrs!).filter(\n        ([key]) =>\n          !allExcludeKeys.includes(key) &&\n          !(excludeListeners && LISTENER_PREFIX.test(key))\n      )\n    )\n  )\n}\n"],"mappings":";;;AAWA,MAAMA,oBAAA,GAAuB,CAAC,SAAS;AACvC,MAAMC,eAAA,GAAkB;MAEXC,QAAA,GAAWA,CACtBC,MAAA,GAAiB,OACwB;EACzC,MAAM;IAAEC,gBAAA,GAAmB;IAAOC,WAAA,GAAc;EAAA,IAAOF,MAAA;EACvD,MAAMG,cAAA,GAAiBD,WAAA,CAAYE,MAAA,CAAOP,oBAAA;EAE1C,MAAMQ,QAAA,GAAWC,kBAAA;EACjB,IAAI,CAACD,QAAA,EAAU;IACbE,SAAA,CACE,aACA;IAEF,OAAOC,QAAA,CAAS;EAAO;EAGzB,OAAOA,QAAA,CAAS,MAAG;IA7BrB,IAAAC,EAAA;IA8BI,OAAAC,SAAA,CACEC,MAAA,CAAOC,OAAA,CAAQ,CAAAH,EAAA,GAAAJ,QAAA,CAASQ,KAAA,KAAT,gBAAAJ,EAAA,CAAgBK,MAAA,EAASC,MAAA,CACtC,CAAC,CAACC,GAAA,MACA,CAACb,cAAA,CAAec,QAAA,CAASD,GAAA,KACzB,EAAAf,gBAAA,IAAsBH,eAAA,CAAgBoB,IAAA,CAAKF,GAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}