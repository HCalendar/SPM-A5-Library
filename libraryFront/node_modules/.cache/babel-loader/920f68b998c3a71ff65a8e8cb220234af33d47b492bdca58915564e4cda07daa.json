{"ast":null,"code":"import { getCurrentInstance, ref, unref } from 'vue';\nimport { getRowIdentity } from '../util.mjs';\nfunction useCurrent(watcherData) {\n  const instance = getCurrentInstance();\n  const _currentRowKey = ref(null);\n  const currentRow = ref(null);\n  const setCurrentRowKey = key => {\n    instance.store.assertRowKey();\n    _currentRowKey.value = key;\n    setCurrentRowByKey(key);\n  };\n  const restoreCurrentRowKey = () => {\n    _currentRowKey.value = null;\n  };\n  const setCurrentRowByKey = key => {\n    const {\n      data,\n      rowKey\n    } = watcherData;\n    let _currentRow = null;\n    if (rowKey.value) {\n      _currentRow = (unref(data) || []).find(item => getRowIdentity(item, rowKey.value) === key);\n    }\n    currentRow.value = _currentRow;\n  };\n  const updateCurrentRow = _currentRow => {\n    const oldCurrentRow = currentRow.value;\n    if (_currentRow && _currentRow !== oldCurrentRow) {\n      currentRow.value = _currentRow;\n      instance.emit(\"current-change\", currentRow.value, oldCurrentRow);\n      return;\n    }\n    if (!_currentRow && oldCurrentRow) {\n      currentRow.value = null;\n      instance.emit(\"current-change\", null, oldCurrentRow);\n    }\n  };\n  const updateCurrentRowData = () => {\n    const rowKey = watcherData.rowKey.value;\n    const data = watcherData.data.value || [];\n    const oldCurrentRow = currentRow.value;\n    if (data.indexOf(oldCurrentRow) === -1 && oldCurrentRow) {\n      if (rowKey) {\n        const currentRowKey = getRowIdentity(oldCurrentRow, rowKey);\n        setCurrentRowByKey(currentRowKey);\n      } else {\n        currentRow.value = null;\n      }\n      if (currentRow.value === null) {\n        instance.emit(\"current-change\", null, oldCurrentRow);\n      }\n    } else if (_currentRowKey.value) {\n      setCurrentRowByKey(_currentRowKey.value);\n      restoreCurrentRowKey();\n    }\n  };\n  return {\n    setCurrentRowKey,\n    restoreCurrentRowKey,\n    setCurrentRowByKey,\n    updateCurrentRow,\n    updateCurrentRowData,\n    states: {\n      _currentRowKey,\n      currentRow\n    }\n  };\n}\nexport { useCurrent as default };","map":{"version":3,"names":["useCurrent","watcherData","instance","getCurrentInstance","_currentRowKey","ref","currentRow","setCurrentRowKey","key","store","assertRowKey","value","setCurrentRowByKey","restoreCurrentRowKey","data","rowKey","_currentRow","unref","find","item","getRowIdentity","updateCurrentRow","oldCurrentRow","emit","updateCurrentRowData","indexOf","currentRowKey","states"],"sources":["../../../../../../../packages/components/table/src/store/current.ts"],"sourcesContent":["import { ref, getCurrentInstance, unref } from 'vue'\nimport { getRowIdentity } from '../util'\n\nimport type { Ref } from 'vue'\nimport type { Table } from '../table/defaults'\nimport type { WatcherPropsData } from './index'\n\nfunction useCurrent<T>(watcherData: WatcherPropsData<T>) {\n  const instance = getCurrentInstance() as Table<T>\n  const _currentRowKey = ref<string>(null)\n  const currentRow: Ref<T> = ref(null)\n\n  const setCurrentRowKey = (key: string) => {\n    instance.store.assertRowKey()\n    _currentRowKey.value = key\n    setCurrentRowByKey(key)\n  }\n\n  const restoreCurrentRowKey = () => {\n    _currentRowKey.value = null\n  }\n\n  const setCurrentRowByKey = (key: string) => {\n    const { data, rowKey } = watcherData\n    let _currentRow = null\n    if (rowKey.value) {\n      _currentRow = (unref(data) || []).find(\n        (item) => getRowIdentity(item, rowKey.value) === key\n      )\n    }\n    currentRow.value = _currentRow\n  }\n\n  const updateCurrentRow = (_currentRow: T) => {\n    const oldCurrentRow = currentRow.value\n    if (_currentRow && _currentRow !== oldCurrentRow) {\n      currentRow.value = _currentRow\n      instance.emit('current-change', currentRow.value, oldCurrentRow)\n      return\n    }\n    if (!_currentRow && oldCurrentRow) {\n      currentRow.value = null\n      instance.emit('current-change', null, oldCurrentRow)\n    }\n  }\n\n  const updateCurrentRowData = () => {\n    const rowKey = watcherData.rowKey.value\n    // data 为 null 时，解构时的默认值会被忽略\n    const data = watcherData.data.value || []\n    const oldCurrentRow = currentRow.value\n    // 当 currentRow 不在 data 中时尝试更新数据\n    if (data.indexOf(oldCurrentRow) === -1 && oldCurrentRow) {\n      if (rowKey) {\n        const currentRowKey = getRowIdentity(oldCurrentRow, rowKey)\n        setCurrentRowByKey(currentRowKey)\n      } else {\n        currentRow.value = null\n      }\n      if (currentRow.value === null) {\n        instance.emit('current-change', null, oldCurrentRow)\n      }\n    } else if (_currentRowKey.value) {\n      // 把初始时下设置的 rowKey 转化成 rowData\n      setCurrentRowByKey(_currentRowKey.value)\n      restoreCurrentRowKey()\n    }\n  }\n\n  return {\n    setCurrentRowKey,\n    restoreCurrentRowKey,\n    setCurrentRowByKey,\n    updateCurrentRow,\n    updateCurrentRowData,\n    states: {\n      _currentRowKey,\n      currentRow,\n    },\n  }\n}\n\nexport default useCurrent\n"],"mappings":";;AAOA,SAAAA,WAAuBC,WAAA,EAAkC;EACvD,MAAMC,QAAA,GAAWC,kBAAA;EACjB,MAAMC,cAAA,GAAiBC,GAAA,CAAY;EACnC,MAAMC,UAAA,GAAqBD,GAAA,CAAI;EAE/B,MAAME,gBAAA,GAAoBC,GAAA,IAAgB;IACxCN,QAAA,CAASO,KAAA,CAAMC,YAAA;IACfN,cAAA,CAAeO,KAAA,GAAQH,GAAA;IACvBI,kBAAA,CAAmBJ,GAAA;EAAA;EAGrB,MAAMK,oBAAA,GAAuBA,CAAA,KAAM;IACjCT,cAAA,CAAeO,KAAA,GAAQ;EAAA;EAGzB,MAAMC,kBAAA,GAAsBJ,GAAA,IAAgB;IAC1C,MAAM;MAAEM,IAAA;MAAMC;IAAA,IAAWd,WAAA;IACzB,IAAIe,WAAA,GAAc;IAClB,IAAID,MAAA,CAAOJ,KAAA,EAAO;MAChBK,WAAA,GAAe,CAAAC,KAAA,CAAMH,IAAA,KAAS,IAAII,IAAA,CAC/BC,IAAA,IAASC,cAAA,CAAeD,IAAA,EAAMJ,MAAA,CAAOJ,KAAA,MAAWH,GAAA;IAAA;IAGrDF,UAAA,CAAWK,KAAA,GAAQK,WAAA;EAAA;EAGrB,MAAMK,gBAAA,GAAoBL,WAAA,IAAmB;IAC3C,MAAMM,aAAA,GAAgBhB,UAAA,CAAWK,KAAA;IACjC,IAAIK,WAAA,IAAeA,WAAA,KAAgBM,aAAA,EAAe;MAChDhB,UAAA,CAAWK,KAAA,GAAQK,WAAA;MACnBd,QAAA,CAASqB,IAAA,CAAK,kBAAkBjB,UAAA,CAAWK,KAAA,EAAOW,aAAA;MAClD;IAAA;IAEF,IAAI,CAACN,WAAA,IAAeM,aAAA,EAAe;MACjChB,UAAA,CAAWK,KAAA,GAAQ;MACnBT,QAAA,CAASqB,IAAA,CAAK,kBAAkB,MAAMD,aAAA;IAAA;EAAA;EAI1C,MAAME,oBAAA,GAAuBA,CAAA,KAAM;IACjC,MAAMT,MAAA,GAASd,WAAA,CAAYc,MAAA,CAAOJ,KAAA;IAElC,MAAMG,IAAA,GAAOb,WAAA,CAAYa,IAAA,CAAKH,KAAA,IAAS;IACvC,MAAMW,aAAA,GAAgBhB,UAAA,CAAWK,KAAA;IAEjC,IAAIG,IAAA,CAAKW,OAAA,CAAQH,aAAA,MAAmB,MAAMA,aAAA,EAAe;MACvD,IAAIP,MAAA,EAAQ;QACV,MAAMW,aAAA,GAAgBN,cAAA,CAAeE,aAAA,EAAeP,MAAA;QACpDH,kBAAA,CAAmBc,aAAA;MAAA,OACd;QACLpB,UAAA,CAAWK,KAAA,GAAQ;MAAA;MAErB,IAAIL,UAAA,CAAWK,KAAA,KAAU,MAAM;QAC7BT,QAAA,CAASqB,IAAA,CAAK,kBAAkB,MAAMD,aAAA;MAAA;IAAA,WAE/BlB,cAAA,CAAeO,KAAA,EAAO;MAE/BC,kBAAA,CAAmBR,cAAA,CAAeO,KAAA;MAClCE,oBAAA;IAAA;EAAA;EAIJ,OAAO;IACLN,gBAAA;IACAM,oBAAA;IACAD,kBAAA;IACAS,gBAAA;IACAG,oBAAA;IACAG,MAAA,EAAQ;MACNvB,cAAA;MACAE;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}