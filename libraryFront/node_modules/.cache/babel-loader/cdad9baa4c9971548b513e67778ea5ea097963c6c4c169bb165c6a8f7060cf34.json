{"ast":null,"code":"const useFocus = el => {\n  return {\n    focus: () => {\n      var _a, _b;\n      (_b = (_a = el.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    }\n  };\n};\nexport { useFocus };","map":{"version":3,"names":["useFocus","el","focus","_a","_b","value","call"],"sources":["../../../../../packages/hooks/use-focus/index.ts"],"sourcesContent":["import type { Ref } from 'vue'\n\nexport const useFocus = (el: Ref<HTMLElement>) => {\n  return {\n    focus: () => {\n      el.value?.focus?.()\n    },\n  }\n}\n"],"mappings":"MAEaA,QAAA,GAAYC,EAAA,IAAyB;EAChD,OAAO;IACLC,KAAA,EAAOA,CAAA,KAAM;MAJjB,IAAAC,EAAA,EAAAC,EAAA;MAKM,CAAAA,EAAA,IAAAD,EAAA,GAAAF,EAAA,CAAGI,KAAA,KAAH,gBAAAF,EAAA,CAAUD,KAAA,KAAV,gBAAAE,EAAA,CAAAE,IAAA,CAAAH,EAAA;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}