{"ast":null,"code":"var defaultProps = {\n  type: {\n    type: String,\n    default: \"default\"\n  },\n  label: String,\n  className: String,\n  labelClassName: String,\n  property: String,\n  prop: String,\n  width: {\n    type: [String, Number],\n    default: \"\"\n  },\n  minWidth: {\n    type: [String, Number],\n    default: \"\"\n  },\n  renderHeader: Function,\n  sortable: {\n    type: [Boolean, String],\n    default: false\n  },\n  sortMethod: Function,\n  sortBy: [String, Function, Array],\n  resizable: {\n    type: Boolean,\n    default: true\n  },\n  columnKey: String,\n  align: String,\n  headerAlign: String,\n  showTooltipWhenOverflow: Boolean,\n  showOverflowTooltip: Boolean,\n  fixed: [Boolean, String],\n  formatter: Function,\n  selectable: Function,\n  reserveSelection: Boolean,\n  filterMethod: Function,\n  filteredValue: Array,\n  filters: Array,\n  filterPlacement: String,\n  filterMultiple: {\n    type: Boolean,\n    default: true\n  },\n  index: [Number, Function],\n  sortOrders: {\n    type: Array,\n    default: () => {\n      return [\"ascending\", \"descending\", null];\n    },\n    validator: val => {\n      return val.every(order => [\"ascending\", \"descending\", null].indexOf(order) > -1);\n    }\n  }\n};\nexport { defaultProps as default };","map":{"version":3,"names":["defaultProps","type","String","default","label","className","labelClassName","property","prop","width","Number","minWidth","renderHeader","Function","sortable","Boolean","sortMethod","sortBy","Array","resizable","columnKey","align","headerAlign","showTooltipWhenOverflow","showOverflowTooltip","fixed","formatter","selectable","reserveSelection","filterMethod","filteredValue","filters","filterPlacement","filterMultiple","index","sortOrders","validator","val","every","order","indexOf"],"sources":["../../../../../../../packages/components/table/src/table-column/defaults.ts"],"sourcesContent":["import type { PropType, ComponentInternalInstance, Ref, VNode } from 'vue'\nimport type { DefaultRow, Table } from '../table/defaults'\n\ntype CI<T> = { column: TableColumnCtx<T>; $index: number }\n\ntype Filters = {\n  text: string\n  value: string\n}[]\n\ntype FilterMethods<T> = (value, row: T, column: TableColumnCtx<T>) => void\n\ntype ValueOf<T> = T[keyof T]\n\ninterface TableColumnCtx<T> {\n  id: string\n  realWidth: number\n  type: string\n  label: string\n  className: string\n  labelClassName: string\n  property: string\n  prop: string\n  width: string | number\n  minWidth: string | number\n  renderHeader: (data: CI<T>) => VNode\n  sortable: boolean | string\n  sortMethod: (a: T, b: T) => number\n  sortBy: string | ((row: T, index: number) => string) | string[]\n  resizable: boolean\n  columnKey: string\n  rawColumnKey: string\n  align: string\n  headerAlign: string\n  showTooltipWhenOverflow: boolean\n  showOverflowTooltip: boolean\n  fixed: boolean | string\n  formatter: (\n    row: T,\n    column: TableColumnCtx<T>,\n    cellValue,\n    index: number\n  ) => VNode | string\n  selectable: (row: T, index: number) => boolean\n  reserveSelection: boolean\n  filterMethod: FilterMethods<T>\n  filteredValue: string[]\n  filters: Filters\n  filterPlacement: string\n  filterMultiple: boolean\n  index: number | ((index: number) => number)\n  sortOrders: ('ascending' | 'descending' | null)[]\n  renderCell: (data: any) => void\n  colSpan: number\n  rowSpan: number\n  children: TableColumnCtx<T>[]\n  level: number\n  filterable: boolean | FilterMethods<T> | Filters\n  order: string\n  isColumnGroup: boolean\n  columns: TableColumnCtx<T>[]\n  getColumnIndex: () => number\n  no: number\n  filterOpened?: boolean\n}\n\ninterface TableColumn<T> extends ComponentInternalInstance {\n  vnode: {\n    vParent: TableColumn<T> | Table<T>\n  } & VNode\n  vParent: TableColumn<T> | Table<T>\n  columnId: string\n  columnConfig: Ref<Partial<TableColumnCtx<T>>>\n}\n\nexport type { Filters, FilterMethods, TableColumnCtx, TableColumn, ValueOf }\n\nexport default {\n  type: {\n    type: String,\n    default: 'default',\n  },\n  label: String,\n  className: String,\n  labelClassName: String,\n  property: String,\n  prop: String,\n  width: {\n    type: [String, Number],\n    default: '',\n  },\n  minWidth: {\n    type: [String, Number],\n    default: '',\n  },\n  renderHeader: Function as PropType<\n    TableColumnCtx<DefaultRow>['renderHeader']\n  >,\n  sortable: {\n    type: [Boolean, String],\n    default: false,\n  },\n  sortMethod: Function as PropType<TableColumnCtx<DefaultRow>['sortMethod']>,\n  sortBy: [String, Function, Array] as PropType<\n    TableColumnCtx<DefaultRow>['sortBy']\n  >,\n  resizable: {\n    type: Boolean,\n    default: true,\n  },\n  columnKey: String,\n  align: String,\n  headerAlign: String,\n  showTooltipWhenOverflow: Boolean,\n  showOverflowTooltip: Boolean,\n  fixed: [Boolean, String],\n  formatter: Function as PropType<TableColumnCtx<DefaultRow>['formatter']>,\n  selectable: Function as PropType<TableColumnCtx<DefaultRow>['selectable']>,\n  reserveSelection: Boolean,\n  filterMethod: Function as PropType<\n    TableColumnCtx<DefaultRow>['filterMethod']\n  >,\n  filteredValue: Array as PropType<TableColumnCtx<DefaultRow>['filteredValue']>,\n  filters: Array as PropType<TableColumnCtx<DefaultRow>['filters']>,\n  filterPlacement: String,\n  filterMultiple: {\n    type: Boolean,\n    default: true,\n  },\n  index: [Number, Function] as PropType<TableColumnCtx<DefaultRow>['index']>,\n  sortOrders: {\n    type: Array as PropType<TableColumnCtx<DefaultRow>['sortOrders']>,\n    default: () => {\n      return ['ascending', 'descending', null]\n    },\n    validator: (val: TableColumnCtx<unknown>['sortOrders']) => {\n      return val.every(\n        (order: string) => ['ascending', 'descending', null].indexOf(order) > -1\n      )\n    },\n  },\n}\n"],"mappings":"AA6EA,IAAAA,YAAA,GAAe;EACbC,IAAA,EAAM;IACJA,IAAA,EAAMC,MAAA;IACNC,OAAA,EAAS;EAAA;EAEXC,KAAA,EAAOF,MAAA;EACPG,SAAA,EAAWH,MAAA;EACXI,cAAA,EAAgBJ,MAAA;EAChBK,QAAA,EAAUL,MAAA;EACVM,IAAA,EAAMN,MAAA;EACNO,KAAA,EAAO;IACLR,IAAA,EAAM,CAACC,MAAA,EAAQQ,MAAA;IACfP,OAAA,EAAS;EAAA;EAEXQ,QAAA,EAAU;IACRV,IAAA,EAAM,CAACC,MAAA,EAAQQ,MAAA;IACfP,OAAA,EAAS;EAAA;EAEXS,YAAA,EAAcC,QAAA;EAGdC,QAAA,EAAU;IACRb,IAAA,EAAM,CAACc,OAAA,EAASb,MAAA;IAChBC,OAAA,EAAS;EAAA;EAEXa,UAAA,EAAYH,QAAA;EACZI,MAAA,EAAQ,CAACf,MAAA,EAAQW,QAAA,EAAUK,KAAA;EAG3BC,SAAA,EAAW;IACTlB,IAAA,EAAMc,OAAA;IACNZ,OAAA,EAAS;EAAA;EAEXiB,SAAA,EAAWlB,MAAA;EACXmB,KAAA,EAAOnB,MAAA;EACPoB,WAAA,EAAapB,MAAA;EACbqB,uBAAA,EAAyBR,OAAA;EACzBS,mBAAA,EAAqBT,OAAA;EACrBU,KAAA,EAAO,CAACV,OAAA,EAASb,MAAA;EACjBwB,SAAA,EAAWb,QAAA;EACXc,UAAA,EAAYd,QAAA;EACZe,gBAAA,EAAkBb,OAAA;EAClBc,YAAA,EAAchB,QAAA;EAGdiB,aAAA,EAAeZ,KAAA;EACfa,OAAA,EAASb,KAAA;EACTc,eAAA,EAAiB9B,MAAA;EACjB+B,cAAA,EAAgB;IACdhC,IAAA,EAAMc,OAAA;IACNZ,OAAA,EAAS;EAAA;EAEX+B,KAAA,EAAO,CAACxB,MAAA,EAAQG,QAAA;EAChBsB,UAAA,EAAY;IACVlC,IAAA,EAAMiB,KAAA;IACNf,OAAA,EAASA,CAAA,KAAM;MACb,OAAO,CAAC,aAAa,cAAc;IAAA;IAErCiC,SAAA,EAAYC,GAAA,IAA+C;MACzD,OAAOA,GAAA,CAAIC,KAAA,CACRC,KAAA,IAAkB,CAAC,aAAa,cAAc,MAAMC,OAAA,CAAQD,KAAA,IAAS;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}