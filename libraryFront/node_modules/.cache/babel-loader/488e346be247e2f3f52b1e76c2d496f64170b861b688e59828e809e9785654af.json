{"ast":null,"code":"import { inject, computed, ref } from 'vue';\nimport { generateId } from '../../../utils/util.mjs';\nimport { EVENT_CODE } from '../../../utils/aria.mjs';\nimport { addClass, on } from '../../../utils/dom.mjs';\nconst useDropdown = () => {\n  const elDropdown = inject(\"elDropdown\", {});\n  const _elDropdownSize = computed(() => elDropdown == null ? void 0 : elDropdown.dropdownSize);\n  return {\n    elDropdown,\n    _elDropdownSize\n  };\n};\nconst initDropdownDomEvent = (dropdownChildren, triggerElm, _instance) => {\n  const menuItems = ref(null);\n  const menuItemsArray = ref(null);\n  const dropdownElm = ref(null);\n  const listId = ref(`dropdown-menu-${generateId()}`);\n  dropdownElm.value = dropdownChildren == null ? void 0 : dropdownChildren.subTree.el;\n  function removeTabindex() {\n    var _a;\n    triggerElm.setAttribute(\"tabindex\", \"-1\");\n    (_a = menuItemsArray.value) == null ? void 0 : _a.forEach(item => {\n      item.setAttribute(\"tabindex\", \"-1\");\n    });\n  }\n  function resetTabindex(ele) {\n    removeTabindex();\n    ele == null ? void 0 : ele.setAttribute(\"tabindex\", \"0\");\n  }\n  function handleTriggerKeyDown(ev) {\n    const code = ev.code;\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      removeTabindex();\n      resetTabindex(menuItems.value[0]);\n      menuItems.value[0].focus();\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (code === EVENT_CODE.enter) {\n      _instance.handleClick();\n    } else if ([EVENT_CODE.tab, EVENT_CODE.esc].includes(code)) {\n      _instance.hide();\n    }\n  }\n  function handleItemKeyDown(ev) {\n    const code = ev.code;\n    const target = ev.target;\n    const currentIndex = menuItemsArray.value.indexOf(target);\n    const max = menuItemsArray.value.length - 1;\n    let nextIndex;\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      if (code === EVENT_CODE.up) {\n        nextIndex = currentIndex !== 0 ? currentIndex - 1 : 0;\n      } else {\n        nextIndex = currentIndex < max ? currentIndex + 1 : max;\n      }\n      removeTabindex();\n      resetTabindex(menuItems.value[nextIndex]);\n      menuItems.value[nextIndex].focus();\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else if (code === EVENT_CODE.enter) {\n      triggerElmFocus();\n      target.click();\n      if (_instance.props.hideOnClick) {\n        _instance.hide();\n      }\n    } else if ([EVENT_CODE.tab, EVENT_CODE.esc].includes(code)) {\n      _instance.hide();\n      triggerElmFocus();\n    }\n  }\n  function initAria() {\n    dropdownElm.value.setAttribute(\"id\", listId.value);\n    triggerElm.setAttribute(\"aria-haspopup\", \"list\");\n    triggerElm.setAttribute(\"aria-controls\", listId.value);\n    if (!_instance.props.splitButton) {\n      triggerElm.setAttribute(\"role\", \"button\");\n      triggerElm.setAttribute(\"tabindex\", _instance.props.tabindex);\n      addClass(triggerElm, \"el-dropdown-selfdefine\");\n    }\n  }\n  function initEvent() {\n    on(triggerElm, \"keydown\", handleTriggerKeyDown);\n    on(dropdownElm.value, \"keydown\", handleItemKeyDown, true);\n  }\n  function initDomOperation() {\n    menuItems.value = dropdownElm.value.querySelectorAll(\"[tabindex='-1']\");\n    menuItemsArray.value = [].slice.call(menuItems.value);\n    initEvent();\n    initAria();\n  }\n  function triggerElmFocus() {\n    triggerElm.focus();\n  }\n  initDomOperation();\n};\nexport { initDropdownDomEvent, useDropdown };","map":{"version":3,"names":["useDropdown","elDropdown","inject","_elDropdownSize","computed","dropdownSize","initDropdownDomEvent","dropdownChildren","triggerElm","_instance","menuItems","ref","menuItemsArray","dropdownElm","listId","generateId","value","subTree","el","removeTabindex","_a","setAttribute","forEach","item","resetTabindex","ele","handleTriggerKeyDown","ev","code","EVENT_CODE","up","down","includes","focus","preventDefault","stopPropagation","enter","handleClick","tab","esc","hide","handleItemKeyDown","target","currentIndex","indexOf","max","length","nextIndex","triggerElmFocus","click","props","hideOnClick","initAria","splitButton","tabindex","addClass","initEvent","on","initDomOperation","querySelectorAll","slice","call"],"sources":["../../../../../../packages/components/dropdown/src/useDropdown.ts"],"sourcesContent":["import { inject, computed, ref } from 'vue'\nimport { generateId } from '@element-plus/utils/util'\nimport { EVENT_CODE } from '@element-plus/utils/aria'\nimport { on, addClass } from '@element-plus/utils/dom'\n\nimport type { Nullable } from '@element-plus/utils/types'\nimport type { IElDropdownInstance } from './dropdown'\n\nexport const useDropdown = () => {\n  const elDropdown = inject<IElDropdownInstance>('elDropdown', {})\n  const _elDropdownSize = computed(() => elDropdown?.dropdownSize)\n\n  return {\n    elDropdown,\n    _elDropdownSize,\n  }\n}\n\nexport const initDropdownDomEvent = (\n  dropdownChildren,\n  triggerElm,\n  _instance\n) => {\n  const menuItems = ref<Nullable<HTMLButtonElement[]>>(null)\n  const menuItemsArray = ref<Nullable<HTMLElement[]>>(null)\n  const dropdownElm = ref<Nullable<HTMLElement>>(null)\n  const listId = ref(`dropdown-menu-${generateId()}`)\n  dropdownElm.value = dropdownChildren?.subTree.el\n\n  function removeTabindex() {\n    triggerElm.setAttribute('tabindex', '-1')\n    menuItemsArray.value?.forEach((item) => {\n      item.setAttribute('tabindex', '-1')\n    })\n  }\n\n  function resetTabindex(ele) {\n    removeTabindex()\n    ele?.setAttribute('tabindex', '0')\n  }\n\n  function handleTriggerKeyDown(ev: KeyboardEvent) {\n    const code = ev.code\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      removeTabindex()\n      resetTabindex(menuItems.value[0])\n      menuItems.value[0].focus()\n      ev.preventDefault()\n      ev.stopPropagation()\n    } else if (code === EVENT_CODE.enter) {\n      _instance.handleClick()\n    } else if ([EVENT_CODE.tab, EVENT_CODE.esc].includes(code)) {\n      _instance.hide()\n    }\n  }\n\n  function handleItemKeyDown(ev) {\n    const code = ev.code\n    const target = ev.target\n    const currentIndex = menuItemsArray.value.indexOf(target)\n    const max = menuItemsArray.value.length - 1\n    let nextIndex\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      if (code === EVENT_CODE.up) {\n        nextIndex = currentIndex !== 0 ? currentIndex - 1 : 0\n      } else {\n        nextIndex = currentIndex < max ? currentIndex + 1 : max\n      }\n      removeTabindex()\n      resetTabindex(menuItems.value[nextIndex])\n      menuItems.value[nextIndex].focus()\n      ev.preventDefault()\n      ev.stopPropagation()\n    } else if (code === EVENT_CODE.enter) {\n      triggerElmFocus()\n      target.click()\n      if (_instance.props.hideOnClick) {\n        _instance.hide()\n      }\n    } else if ([EVENT_CODE.tab, EVENT_CODE.esc].includes(code)) {\n      _instance.hide()\n      triggerElmFocus()\n    }\n  }\n\n  function initAria() {\n    dropdownElm.value.setAttribute('id', listId.value)\n    triggerElm.setAttribute('aria-haspopup', 'list')\n    triggerElm.setAttribute('aria-controls', listId.value)\n    if (!_instance.props.splitButton) {\n      triggerElm.setAttribute('role', 'button')\n      triggerElm.setAttribute('tabindex', _instance.props.tabindex)\n      addClass(triggerElm, 'el-dropdown-selfdefine')\n    }\n  }\n\n  function initEvent() {\n    on(triggerElm, 'keydown', handleTriggerKeyDown)\n    on(dropdownElm.value, 'keydown', handleItemKeyDown, true)\n  }\n\n  function initDomOperation() {\n    menuItems.value = dropdownElm.value.querySelectorAll(\n      \"[tabindex='-1']\"\n    ) as unknown as HTMLButtonElement[]\n    menuItemsArray.value = [].slice.call(menuItems.value)\n\n    initEvent()\n    initAria()\n  }\n\n  function triggerElmFocus() {\n    triggerElm.focus()\n  }\n\n  initDomOperation()\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}