{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createBlock, withCtx, renderSlot, createElementVNode, Fragment } from 'vue';\nconst _hoisted_1 = {\n  style: {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    height: \"100%\",\n    width: \"100%\",\n    display: \"inline-block\",\n    boxSizing: \"border-box\",\n    padding: \"0 20px\"\n  }\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  return openBlock(), createElementBlock(\"li\", {\n    class: normalizeClass([\"el-menu-item\", {\n      \"is-active\": _ctx.active,\n      \"is-disabled\": _ctx.disabled\n    }]),\n    role: \"menuitem\",\n    tabindex: \"-1\",\n    style: normalizeStyle(_ctx.paddingStyle),\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, [_ctx.parentMenu.type.name === \"ElMenu\" && _ctx.rootMenu.props.collapse && _ctx.$slots.title ? (openBlock(), createBlock(_component_el_tooltip, {\n    key: 0,\n    effect: _ctx.Effect.DARK,\n    placement: \"right\"\n  }, {\n    content: withCtx(() => [renderSlot(_ctx.$slots, \"title\")]),\n    default: withCtx(() => [createElementVNode(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"default\")])]),\n    _: 3\n  }, 8, [\"effect\"])) : (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [renderSlot(_ctx.$slots, \"default\"), renderSlot(_ctx.$slots, \"title\")], 64))], 6);\n}\nexport { render };","map":{"version":3,"names":["style","position","createElementBlock","class","normalizeClass","role","tabindex","normalizeStyle","_ctx","paddingStyle","onClick","_cache","args","handleClick","createBlock","_component_el_tooltip","effect","Effect","DARK","placement","content","withCtx","renderSlot","$slots","createElementVNode","_hoisted_1","Fragment","key"],"sources":["../../../../../../packages/components/menu/src/menu-item.vue?vue&type=template&id=aa755baa&lang.js"],"sourcesContent":["<template>\n  <li\n    class=\"el-menu-item\"\n    role=\"menuitem\"\n    tabindex=\"-1\"\n    :style=\"paddingStyle\"\n    :class=\"{\n      'is-active': active,\n      'is-disabled': disabled,\n    }\"\n    @click=\"handleClick\"\n  >\n    <el-tooltip\n      v-if=\"\n        parentMenu.type.name === 'ElMenu' &&\n        rootMenu.props.collapse &&\n        $slots.title\n      \"\n      :effect=\"Effect.DARK\"\n      placement=\"right\"\n    >\n      <template #content>\n        <slot name=\"title\" />\n      </template>\n      <div\n        :style=\"{\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          height: '100%',\n          width: '100%',\n          display: 'inline-block',\n          boxSizing: 'border-box',\n          padding: '0 20px',\n        }\"\n      >\n        <slot />\n      </div>\n    </el-tooltip>\n    <template v-else>\n      <slot />\n      <slot name=\"title\" />\n    </template>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  computed,\n  onMounted,\n  onBeforeUnmount,\n  inject,\n  getCurrentInstance,\n  toRef,\n  reactive,\n} from 'vue'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { Effect } from '@element-plus/components/popper'\nimport { throwError } from '@element-plus/utils/error'\nimport useMenu from './use-menu'\nimport { menuItemEmits, menuItemProps } from './menu-item'\n\nimport type { MenuItemRegistered, MenuProvider, SubMenuProvider } from './types'\n\nconst COMPONENT_NAME = 'ElMenuItem'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  components: {\n    ElTooltip,\n  },\n\n  props: menuItemProps,\n  emits: menuItemEmits,\n\n  setup(props, { emit }) {\n    const instance = getCurrentInstance()!\n    const rootMenu = inject<MenuProvider>('rootMenu')\n    if (!rootMenu) throwError(COMPONENT_NAME, 'can not inject root menu')\n\n    const { parentMenu, paddingStyle, indexPath } = useMenu(\n      instance,\n      toRef(props, 'index')\n    )\n\n    const subMenu = inject<SubMenuProvider>(`subMenu:${parentMenu.value.uid}`)\n    if (!subMenu) throwError(COMPONENT_NAME, 'can not inject sub menu')\n\n    const active = computed(() => props.index === rootMenu.activeIndex)\n    const item: MenuItemRegistered = reactive({\n      index: props.index,\n      indexPath,\n      active,\n    })\n\n    const handleClick = () => {\n      if (!props.disabled) {\n        rootMenu.handleMenuItemClick({\n          index: props.index,\n          indexPath: indexPath.value,\n          route: props.route,\n        })\n        emit('click', item)\n      }\n    }\n\n    onMounted(() => {\n      subMenu.addSubMenu(item)\n      rootMenu.addMenuItem(item)\n    })\n\n    onBeforeUnmount(() => {\n      subMenu.removeSubMenu(item)\n      rootMenu.removeMenuItem(item)\n    })\n\n    return {\n      Effect,\n      parentMenu,\n      rootMenu,\n      paddingStyle,\n      active,\n\n      handleClick,\n    }\n  },\n})\n</script>\n"],"mappings":";;EAyBSA,KAAA,EAAO;IAAAC,QAAA;;;;;;;;;;;;sBAxBdC,kBAAA;IACEC,KAAA,EAAAC,cAAA,EAAM;;;;IACNC,IAAA,EAAK;IACLC,QAAA,EAAS;IACRN,KAAA,EAAAO,cAAA,CAAOC,IAAA,CAAAC,YAAA;IAKPC,OAAA,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAOJ,IAAA,CAAAK,WAAA,IAAAL,IAAA,CAAAK,WAAA,IAAAD,IAAA;kHAERE,WAAA,CAAAC,qBAAA;;IAMGC,MAAA,EAAQR,IAAA,CAAAS,MAAA,CAAOC,IAAA;IAChBC,SAAA,EAAU;EAAA;IAECC,OAAA,EAAAC,OAAA,CACT,OAAAC,UAAA,CAAAd,IAAA,CAAAe,MAAA,W;qBAEF,OAAAC,kBAAA,QAAAC,UAAA,GAYEH,UAAA,CAAAd,IAAA,CAAAe,MAAA,a;;qCAGJrB,kBAAA,CAAAwB,QAAA;IAAAC,GAAA;EAAA,IACEL,UAAA,CAAAd,IAAA,CAAAe,MAAA,cACAD,UAAA,CAAAd,IAAA,CAAAe,MAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}