{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getCurrentInstance, ref, computed, toRef, nextTick, h, Transition, renderSlot, toDisplayString, cloneVNode, Fragment, withDirectives } from 'vue';\nimport { isString, NOOP } from '@vue/shared';\nimport { createPopper } from '@popperjs/core';\nimport '../../directives/index.mjs';\nimport { generateId, isHTMLElement, refAttacher } from '../../utils/util.mjs';\nimport { getFirstValidNode } from '../../utils/vnode.mjs';\nimport { stop } from '../../utils/dom.mjs';\nimport PopupManager from '../../utils/popup-manager.mjs';\nimport { throwError } from '../../utils/error.mjs';\nimport { useTeleport } from '../use-teleport/index.mjs';\nimport { useTimeout } from '../use-timeout/index.mjs';\nimport { useModelToggle } from '../use-model-toggle/index.mjs';\nimport { useTransitionFallthrough } from '../use-transition-fallthrough/index.mjs';\nimport { defaultPopperOptions, defaultModifiers } from './use-popper-options.mjs';\nimport { DEFAULT_TRIGGER, useTargetEvents } from './use-target-events.mjs';\nimport ClickOutside from '../../directives/click-outside/index.mjs';\nconst DARK_EFFECT = \"dark\";\nconst LIGHT_EFFECT = \"light\";\nconst usePopperControlProps = {\n  appendToBody: {\n    type: Boolean,\n    default: true\n  },\n  arrowOffset: {\n    type: Number\n  },\n  popperOptions: defaultPopperOptions,\n  popperClass: {\n    type: String,\n    default: \"\"\n  }\n};\nconst usePopperProps = {\n  ...usePopperControlProps,\n  autoClose: {\n    type: Number,\n    default: 0\n  },\n  content: {\n    type: String,\n    default: \"\"\n  },\n  class: String,\n  style: Object,\n  hideAfter: {\n    type: Number,\n    default: 200\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  effect: {\n    type: String,\n    default: DARK_EFFECT\n  },\n  enterable: {\n    type: Boolean,\n    default: true\n  },\n  manualMode: {\n    type: Boolean,\n    default: false\n  },\n  showAfter: {\n    type: Number,\n    default: 0\n  },\n  pure: {\n    type: Boolean,\n    default: false\n  },\n  showArrow: {\n    type: Boolean,\n    default: true\n  },\n  transition: {\n    type: String,\n    default: \"el-fade-in-linear\"\n  },\n  trigger: {\n    type: [String, Array],\n    default: DEFAULT_TRIGGER\n  },\n  visible: {\n    type: Boolean,\n    default: void 0\n  },\n  stopPopperMouseEvent: {\n    type: Boolean,\n    default: true\n  }\n};\nconst usePopperHook = () => {\n  var _a;\n  const vm = getCurrentInstance();\n  const props = (_a = vm.proxy) == null ? void 0 : _a.$props;\n  const {\n    slots\n  } = vm;\n  const arrowRef = ref(null);\n  const triggerRef = ref(null);\n  const popperRef = ref(null);\n  const popperStyle = ref({\n    zIndex: PopupManager.nextZIndex()\n  });\n  const visible = ref(false);\n  const isManual = computed(() => props.manualMode || props.trigger === \"manual\");\n  const popperId = `el-popper-${generateId()}`;\n  let popperInstance = null;\n  const {\n    renderTeleport,\n    showTeleport,\n    hideTeleport\n  } = useTeleport(popupRenderer, toRef(props, \"appendToBody\"));\n  const {\n    show,\n    hide\n  } = useModelToggle({\n    indicator: visible,\n    onShow,\n    onHide\n  });\n  const {\n    registerTimeout,\n    cancelTimeout\n  } = useTimeout();\n  function onShow() {\n    popperStyle.value.zIndex = PopupManager.nextZIndex();\n    nextTick(initializePopper);\n  }\n  function onHide() {\n    hideTeleport();\n    nextTick(detachPopper);\n  }\n  function delayShow() {\n    if (isManual.value || props.disabled) return;\n    showTeleport();\n    registerTimeout(show, props.showAfter);\n  }\n  function delayHide() {\n    if (isManual.value) return;\n    registerTimeout(hide, props.hideAfter);\n  }\n  function onToggle() {\n    if (visible.value) {\n      delayShow();\n    } else {\n      delayHide();\n    }\n  }\n  function detachPopper() {\n    var _a2;\n    (_a2 = popperInstance == null ? void 0 : popperInstance.destroy) == null ? void 0 : _a2.call(popperInstance);\n    popperInstance = null;\n  }\n  function onPopperMouseEnter() {\n    if (props.enterable && props.trigger !== \"click\") {\n      cancelTimeout();\n    }\n  }\n  function onPopperMouseLeave() {\n    const {\n      trigger\n    } = props;\n    const shouldPrevent = isString(trigger) && (trigger === \"click\" || trigger === \"focus\") || trigger.length === 1 && (trigger[0] === \"click\" || trigger[0] === \"focus\");\n    if (shouldPrevent) return;\n    delayHide();\n  }\n  function initializePopper() {\n    if (!visible.value || popperInstance !== null) {\n      return;\n    }\n    const unwrappedTrigger = triggerRef.value;\n    const $el = isHTMLElement(unwrappedTrigger) ? unwrappedTrigger : unwrappedTrigger.$el;\n    popperInstance = createPopper($el, popperRef.value, buildPopperOptions());\n    popperInstance.update();\n  }\n  function buildPopperOptions() {\n    const modifiers = [...defaultModifiers, ...props.popperOptions.modifiers];\n    if (props.showArrow) {\n      modifiers.push({\n        name: \"arrow\",\n        options: {\n          padding: props.arrowOffset || 5,\n          element: arrowRef.value\n        }\n      });\n    }\n    return {\n      ...props.popperOptions,\n      modifiers\n    };\n  }\n  const {\n    onAfterEnter,\n    onAfterLeave,\n    onBeforeEnter,\n    onBeforeLeave\n  } = useTransitionFallthrough();\n  const events = useTargetEvents(delayShow, delayHide, onToggle);\n  const arrowRefAttacher = refAttacher(arrowRef);\n  const popperRefAttacher = refAttacher(popperRef);\n  const triggerRefAttacher = refAttacher(triggerRef);\n  function popupRenderer() {\n    const mouseUpAndDown = props.stopPopperMouseEvent ? stop : NOOP;\n    return h(Transition, {\n      name: props.transition,\n      onAfterEnter,\n      onAfterLeave,\n      onBeforeEnter,\n      onBeforeLeave\n    }, {\n      default: () => () => visible.value ? h(\"div\", {\n        \"aria-hidden\": false,\n        class: [props.popperClass, \"el-popper\", `is-${props.effect}`, props.pure ? \"is-pure\" : \"\"],\n        style: popperStyle.value,\n        id: popperId,\n        ref: popperRefAttacher,\n        role: \"tooltip\",\n        onMouseenter: onPopperMouseEnter,\n        onMouseleave: onPopperMouseLeave,\n        onClick: stop,\n        onMousedown: mouseUpAndDown,\n        onMouseup: mouseUpAndDown\n      }, [renderSlot(slots, \"default\", {}, () => [toDisplayString(props.content)]), arrowRenderer()]) : null\n    });\n  }\n  function arrowRenderer() {\n    return props.showArrow ? h(\"div\", {\n      ref: arrowRefAttacher,\n      class: \"el-popper__arrow\",\n      \"data-popper-arrow\": \"\"\n    }, null) : null;\n  }\n  function triggerRenderer(triggerProps) {\n    var _a2;\n    const trigger = (_a2 = slots.trigger) == null ? void 0 : _a2.call(slots);\n    const firstElement = getFirstValidNode(trigger, 1);\n    if (!firstElement) throwError(\"renderTrigger\", \"trigger expects single rooted node\");\n    return cloneVNode(firstElement, triggerProps, true);\n  }\n  function render() {\n    const trigger = triggerRenderer({\n      \"aria-describedby\": popperId,\n      class: props.class,\n      style: props.style,\n      ref: triggerRefAttacher,\n      ...events\n    });\n    return h(Fragment, null, [isManual.value ? trigger : withDirectives(trigger, [[ClickOutside, delayHide]]), renderTeleport()]);\n  }\n  return {\n    render\n  };\n};\nexport { DARK_EFFECT, LIGHT_EFFECT, usePopperControlProps, usePopperHook, usePopperProps };","map":{"version":3,"names":["DARK_EFFECT","LIGHT_EFFECT","usePopperControlProps","appendToBody","type","Boolean","default","arrowOffset","Number","popperOptions","defaultPopperOptions","popperClass","String","usePopperProps","autoClose","content","class","style","Object","hideAfter","disabled","effect","enterable","manualMode","showAfter","pure","showArrow","transition","trigger","Array","DEFAULT_TRIGGER","visible","stopPopperMouseEvent","usePopperHook","_a","vm","getCurrentInstance","props","proxy","$props","slots","arrowRef","ref","triggerRef","popperRef","popperStyle","zIndex","PopupManager","nextZIndex","isManual","computed","popperId","generateId","popperInstance","renderTeleport","showTeleport","hideTeleport","useTeleport","popupRenderer","toRef","show","hide","useModelToggle","indicator","onShow","onHide","registerTimeout","cancelTimeout","useTimeout","value","nextTick","initializePopper","detachPopper","delayShow","delayHide","onToggle","_a2","destroy","call","onPopperMouseEnter","onPopperMouseLeave","shouldPrevent","isString","length","unwrappedTrigger","$el","isHTMLElement","createPopper","buildPopperOptions","update","modifiers","defaultModifiers","push","name","options","padding","element","onAfterEnter","onAfterLeave","onBeforeEnter","onBeforeLeave","useTransitionFallthrough","events","useTargetEvents","arrowRefAttacher","refAttacher","popperRefAttacher","triggerRefAttacher","mouseUpAndDown","stop","NOOP","h","Transition","id","role","onMouseenter","onMouseleave","onClick","onMousedown","onMouseup","renderSlot","toDisplayString","arrowRenderer","triggerRenderer","triggerProps","firstElement","getFirstValidNode","throwError","cloneVNode","render","Fragment","withDirectives","ClickOutside"],"sources":["../../../../../packages/hooks/use-popper/index.ts"],"sourcesContent":["import {\n  cloneVNode,\n  computed,\n  Fragment,\n  getCurrentInstance,\n  h,\n  nextTick,\n  toDisplayString,\n  toRef,\n  Transition,\n  ref,\n  renderSlot,\n  withDirectives,\n} from 'vue'\nimport { NOOP } from '@vue/shared'\nimport { createPopper } from '@popperjs/core'\nimport { ClickOutside } from '@element-plus/directives'\nimport {\n  generateId,\n  isHTMLElement,\n  isString,\n  refAttacher,\n} from '@element-plus/utils/util'\nimport { getFirstValidNode } from '@element-plus/utils/vnode'\nimport { stop } from '@element-plus/utils/dom'\nimport PopupManager from '@element-plus/utils/popup-manager'\nimport { throwError } from '@element-plus/utils/error'\n\nimport { useTeleport } from '../use-teleport'\nimport { useTimeout } from '../use-timeout'\nimport { useModelToggle } from '../use-model-toggle'\nimport { useTransitionFallthrough } from '../use-transition-fallthrough'\nimport { defaultPopperOptions, defaultModifiers } from './use-popper-options'\nimport { useTargetEvents, DEFAULT_TRIGGER } from './use-target-events'\n\nimport type {\n  CSSProperties,\n  ComponentPublicInstance,\n  ExtractPropTypes,\n  PropType,\n} from 'vue'\nimport type {\n  Instance as PopperInstance,\n  StrictModifiers,\n} from '@popperjs/core'\nimport type { RefElement, Nullable } from '@element-plus/utils/types'\nimport type { Trigger } from './use-target-events'\n\nexport type PopperEffect = 'light' | 'dark'\nexport type Offset = [number, number] | number\n\ntype ElementType = ComponentPublicInstance | HTMLElement\n\nexport const DARK_EFFECT = 'dark'\nexport const LIGHT_EFFECT = 'light'\n\nexport const usePopperControlProps = {\n  appendToBody: {\n    type: Boolean,\n    default: true,\n  },\n  arrowOffset: {\n    type: Number,\n  },\n  popperOptions: defaultPopperOptions,\n  popperClass: {\n    type: String,\n    default: '',\n  },\n}\n\nexport const usePopperProps = {\n  ...usePopperControlProps,\n  // the arrow size is an equailateral triangle with 10px side length, the 3rd side length ~ 14.1px\n  // adding a offset to the ceil of 4.1 should be 5 this resolves the problem of arrow overflowing out of popper.\n  autoClose: {\n    type: Number,\n    default: 0,\n  },\n  content: {\n    type: String,\n    default: '',\n  },\n  class: String,\n  style: Object,\n  hideAfter: {\n    type: Number,\n    default: 200,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  effect: {\n    type: String as PropType<PopperEffect>,\n    default: DARK_EFFECT,\n  },\n  enterable: {\n    type: Boolean,\n    default: true,\n  },\n  manualMode: {\n    type: Boolean,\n    default: false,\n  },\n  showAfter: {\n    type: Number,\n    default: 0,\n  },\n  pure: {\n    type: Boolean,\n    default: false,\n  },\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n  transition: {\n    type: String,\n    default: 'el-fade-in-linear',\n  },\n  trigger: {\n    type: [String, Array] as PropType<Trigger>,\n    default: DEFAULT_TRIGGER,\n  },\n  visible: {\n    type: Boolean,\n    default: undefined,\n  },\n  stopPopperMouseEvent: {\n    type: Boolean,\n    default: true,\n  },\n}\n\nexport const usePopperHook = () => {\n  const vm = getCurrentInstance()!\n  const props: ExtractPropTypes<typeof usePopperProps> = vm.proxy?.$props as any\n  const { slots } = vm\n\n  const arrowRef = ref<RefElement>(null)\n  const triggerRef = ref<ElementType>(null)\n  const popperRef = ref<RefElement>(null)\n\n  const popperStyle = ref<CSSProperties>({ zIndex: PopupManager.nextZIndex() })\n  const visible = ref(false)\n  const isManual = computed(\n    () => props.manualMode || props.trigger === 'manual'\n  )\n\n  const popperId = `el-popper-${generateId()}`\n  let popperInstance: Nullable<PopperInstance> = null\n\n  const { renderTeleport, showTeleport, hideTeleport } = useTeleport(\n    popupRenderer,\n    toRef(props, 'appendToBody')\n  )\n\n  const { show, hide } = useModelToggle({\n    indicator: visible,\n    onShow,\n    onHide,\n  })\n\n  const { registerTimeout, cancelTimeout } = useTimeout()\n\n  // event handlers\n\n  function onShow() {\n    popperStyle.value.zIndex = PopupManager.nextZIndex()\n    nextTick(initializePopper)\n  }\n\n  function onHide() {\n    hideTeleport()\n    nextTick(detachPopper)\n  }\n\n  /**\n   * The calling mechanism here is:\n   * when the visibility gets changed, let's say we change it to true\n   * the delayShow gets called which initializes a global root node for the popper content\n   * to insert in, then it register a timer for calling the show method, which changes the flag to\n   * true, then calls onShow method.\n   * So the order of invocation is: delayedShow -> timer(show) -> set the indicator to true -> onShow\n   */\n\n  function delayShow() {\n    if (isManual.value || props.disabled) return\n    // renders out the teleport element root.\n    showTeleport()\n    registerTimeout(show, props.showAfter)\n  }\n\n  function delayHide() {\n    if (isManual.value) return\n    registerTimeout(hide, props.hideAfter)\n  }\n\n  function onToggle() {\n    if (visible.value) {\n      delayShow()\n    } else {\n      delayHide()\n    }\n  }\n\n  function detachPopper() {\n    popperInstance?.destroy?.()\n    popperInstance = null\n  }\n\n  function onPopperMouseEnter() {\n    // if trigger is click, user won't be able to close popper when\n    // user tries to move the mouse over popper contents\n    if (props.enterable && props.trigger !== 'click') {\n      cancelTimeout()\n    }\n  }\n\n  function onPopperMouseLeave() {\n    const { trigger } = props\n    const shouldPrevent =\n      (isString(trigger) && (trigger === 'click' || trigger === 'focus')) ||\n      // we'd like to test array type trigger here, but the only case we need to cover is trigger === 'click' or\n      // trigger === 'focus', because that when trigger is string\n      // trigger.length === 1 and trigger[0] === 5 chars string is mutually exclusive.\n      // so there will be no need to test if trigger is array type.\n      (trigger.length === 1 &&\n        (trigger[0] === 'click' || trigger[0] === 'focus'))\n    if (shouldPrevent) return\n    delayHide()\n  }\n\n  function initializePopper() {\n    if (!visible.value || popperInstance !== null) {\n      return\n    }\n    const unwrappedTrigger = triggerRef.value\n    const $el = isHTMLElement(unwrappedTrigger)\n      ? unwrappedTrigger\n      : (unwrappedTrigger as ComponentPublicInstance).$el\n\n    popperInstance = createPopper($el, popperRef.value, buildPopperOptions())\n    popperInstance.update()\n  }\n\n  function buildPopperOptions() {\n    const modifiers = [...defaultModifiers, ...props.popperOptions.modifiers]\n\n    if (props.showArrow) {\n      modifiers.push({\n        name: 'arrow',\n        options: {\n          padding: props.arrowOffset || 5,\n          element: arrowRef.value,\n        },\n      } as StrictModifiers)\n    }\n\n    return {\n      ...props.popperOptions,\n      modifiers,\n    }\n  }\n\n  const { onAfterEnter, onAfterLeave, onBeforeEnter, onBeforeLeave } =\n    useTransitionFallthrough()\n\n  const events = useTargetEvents(delayShow, delayHide, onToggle)\n\n  const arrowRefAttacher = refAttacher(arrowRef)\n  const popperRefAttacher = refAttacher(popperRef)\n  const triggerRefAttacher = refAttacher(triggerRef)\n\n  // renderers\n  function popupRenderer() {\n    const mouseUpAndDown = props.stopPopperMouseEvent ? stop : NOOP\n    return h(\n      Transition as any,\n      {\n        name: props.transition,\n        onAfterEnter,\n        onAfterLeave,\n        onBeforeEnter,\n        onBeforeLeave,\n      },\n      {\n        default: () => () =>\n          visible.value\n            ? h(\n                'div',\n                {\n                  'aria-hidden': false,\n                  class: [\n                    props.popperClass,\n                    'el-popper',\n                    `is-${props.effect}`,\n                    props.pure ? 'is-pure' : '',\n                  ],\n                  style: popperStyle.value,\n                  id: popperId,\n                  ref: popperRefAttacher,\n                  role: 'tooltip',\n                  onMouseenter: onPopperMouseEnter,\n                  onMouseleave: onPopperMouseLeave,\n                  onClick: stop,\n                  onMousedown: mouseUpAndDown,\n                  onMouseup: mouseUpAndDown,\n                },\n                [\n                  renderSlot(slots, 'default', {}, () => [\n                    toDisplayString(props.content),\n                  ]),\n                  arrowRenderer(),\n                ]\n              )\n            : null,\n      }\n    )\n  }\n\n  function arrowRenderer() {\n    return props.showArrow\n      ? h(\n          'div',\n          {\n            ref: arrowRefAttacher,\n            class: 'el-popper__arrow',\n            'data-popper-arrow': '',\n          },\n          null\n        )\n      : null\n  }\n\n  function triggerRenderer(triggerProps) {\n    const trigger = slots.trigger?.()\n    const firstElement = getFirstValidNode(trigger, 1)\n    if (!firstElement)\n      throwError('renderTrigger', 'trigger expects single rooted node')\n    return cloneVNode(firstElement, triggerProps, true)\n  }\n\n  function render() {\n    const trigger = triggerRenderer({\n      'aria-describedby': popperId,\n      class: props.class,\n      style: props.style,\n      ref: triggerRefAttacher,\n      ...events,\n    })\n    return h(Fragment, null, [\n      isManual.value\n        ? trigger\n        : withDirectives(trigger, [[ClickOutside, delayHide]]),\n      renderTeleport(),\n    ])\n  }\n\n  return {\n    render,\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}