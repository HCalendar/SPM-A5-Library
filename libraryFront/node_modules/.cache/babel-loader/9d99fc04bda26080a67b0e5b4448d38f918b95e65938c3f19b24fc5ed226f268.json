{"ast":null,"code":"import { defineComponent, getCurrentInstance, computed, inject, ref, reactive, watch, provide, onMounted, onBeforeUnmount, h, Fragment, withDirectives, vShow } from 'vue';\nimport { useTimeoutFn } from '@vueuse/core';\nimport _CollapseTransition from '../../collapse-transition/index.mjs';\nimport _Popper from '../../popper/index.mjs';\nimport { buildProps } from '../../../utils/props.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { ArrowDown, ArrowRight } from '@element-plus/icons-vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport useMenu from './use-menu.mjs';\nimport { useMenuCssVar } from './use-menu-css-var.mjs';\nconst subMenuProps = buildProps({\n  index: {\n    type: String,\n    required: true\n  },\n  showTimeout: {\n    type: Number,\n    default: 300\n  },\n  hideTimeout: {\n    type: Number,\n    default: 300\n  },\n  popperClass: String,\n  disabled: Boolean,\n  popperAppendToBody: {\n    type: Boolean,\n    default: void 0\n  }\n});\nconst COMPONENT_NAME = \"ElSubMenu\";\nvar SubMenu = defineComponent({\n  name: COMPONENT_NAME,\n  props: subMenuProps,\n  setup(props, {\n    slots,\n    expose\n  }) {\n    const instance = getCurrentInstance();\n    const {\n      paddingStyle,\n      indexPath,\n      parentMenu\n    } = useMenu(instance, computed(() => props.index));\n    const rootMenu = inject(\"rootMenu\");\n    if (!rootMenu) throwError(COMPONENT_NAME, \"can not inject root menu\");\n    const subMenu = inject(`subMenu:${parentMenu.value.uid}`);\n    if (!subMenu) throwError(COMPONENT_NAME, \"can not inject sub menu\");\n    const items = ref({});\n    const subMenus = ref({});\n    let timeout;\n    const currentPlacement = ref(\"\");\n    const mouseInChild = ref(false);\n    const verticalTitleRef = ref();\n    const vPopper = ref();\n    const subMenuTitleIcon = computed(() => {\n      return mode.value === \"horizontal\" && isFirstLevel.value || mode.value === \"vertical\" && !rootMenu.props.collapse ? ArrowDown : ArrowRight;\n    });\n    const isFirstLevel = computed(() => {\n      let isFirstLevel2 = true;\n      let parent = instance.parent;\n      while (parent && parent.type.name !== \"ElMenu\") {\n        if ([\"ElSubMenu\", \"ElMenuItemGroup\"].includes(parent.type.name)) {\n          isFirstLevel2 = false;\n          break;\n        } else {\n          parent = parent.parent;\n        }\n      }\n      return isFirstLevel2;\n    });\n    const appendToBody = computed(() => {\n      return props.popperAppendToBody === void 0 ? isFirstLevel.value : Boolean(props.popperAppendToBody);\n    });\n    const menuTransitionName = computed(() => rootMenu.props.collapse ? \"el-zoom-in-left\" : \"el-zoom-in-top\");\n    const fallbackPlacements = computed(() => mode.value === \"horizontal\" && isFirstLevel.value ? [\"bottom-start\", \"bottom-end\", \"top-start\", \"top-end\", \"right-start\", \"left-start\"] : [\"right-start\", \"left-start\", \"bottom-start\", \"bottom-end\", \"top-start\", \"top-end\"]);\n    const opened = computed(() => rootMenu.openedMenus.includes(props.index));\n    const active = computed(() => {\n      let isActive = false;\n      Object.values(items.value).forEach(item2 => {\n        if (item2.active) {\n          isActive = true;\n        }\n      });\n      Object.values(subMenus.value).forEach(subItem => {\n        if (subItem.active) {\n          isActive = true;\n        }\n      });\n      return isActive;\n    });\n    const backgroundColor = computed(() => rootMenu.props.backgroundColor || \"\");\n    const activeTextColor = computed(() => rootMenu.props.activeTextColor || \"\");\n    const textColor = computed(() => rootMenu.props.textColor || \"\");\n    const mode = computed(() => rootMenu.props.mode);\n    const item = reactive({\n      index: props.index,\n      indexPath,\n      active\n    });\n    const titleStyle = computed(() => {\n      if (mode.value !== \"horizontal\") {\n        return {\n          color: textColor.value\n        };\n      }\n      return {\n        borderBottomColor: active.value ? rootMenu.props.activeTextColor ? activeTextColor.value : \"\" : \"transparent\",\n        color: active.value ? activeTextColor.value : textColor.value\n      };\n    });\n    const doDestroy = () => {\n      var _a;\n      return (_a = vPopper.value) == null ? void 0 : _a.doDestroy();\n    };\n    const handleCollapseToggle = value => {\n      if (value) {\n        updatePlacement();\n      } else {\n        doDestroy();\n      }\n    };\n    const handleClick = () => {\n      if (rootMenu.props.menuTrigger === \"hover\" && rootMenu.props.mode === \"horizontal\" || rootMenu.props.collapse && rootMenu.props.mode === \"vertical\" || props.disabled) return;\n      rootMenu.handleSubMenuClick({\n        index: props.index,\n        indexPath: indexPath.value,\n        active: active.value\n      });\n    };\n    const handleMouseenter = (event, showTimeout = props.showTimeout) => {\n      var _a;\n      if (event.type === \"focus\" && !event.relatedTarget) {\n        return;\n      }\n      if (rootMenu.props.menuTrigger === \"click\" && rootMenu.props.mode === \"horizontal\" || !rootMenu.props.collapse && rootMenu.props.mode === \"vertical\" || props.disabled) {\n        return;\n      }\n      mouseInChild.value = true;\n      timeout == null ? void 0 : timeout();\n      ({\n        stop: timeout\n      } = useTimeoutFn(() => rootMenu.openMenu(props.index, indexPath.value), showTimeout));\n      if (appendToBody.value) {\n        (_a = parentMenu.value.vnode.el) == null ? void 0 : _a.dispatchEvent(new MouseEvent(\"mouseenter\"));\n      }\n    };\n    const handleMouseleave = (deepDispatch = false) => {\n      var _a, _b;\n      if (rootMenu.props.menuTrigger === \"click\" && rootMenu.props.mode === \"horizontal\" || !rootMenu.props.collapse && rootMenu.props.mode === \"vertical\") {\n        return;\n      }\n      mouseInChild.value = false;\n      timeout == null ? void 0 : timeout();\n      ({\n        stop: timeout\n      } = useTimeoutFn(() => !mouseInChild.value && rootMenu.closeMenu(props.index, indexPath.value), props.hideTimeout));\n      if (appendToBody.value && deepDispatch) {\n        if (((_a = instance.parent) == null ? void 0 : _a.type.name) === \"ElSubMenu\") {\n          (_b = subMenu.handleMouseleave) == null ? void 0 : _b.call(subMenu, true);\n        }\n      }\n    };\n    const updatePlacement = () => {\n      currentPlacement.value = mode.value === \"horizontal\" && isFirstLevel.value ? \"bottom-start\" : \"right-start\";\n    };\n    watch(() => rootMenu.props.collapse, value => handleCollapseToggle(Boolean(value)));\n    {\n      const addSubMenu = item2 => {\n        subMenus.value[item2.index] = item2;\n      };\n      const removeSubMenu = item2 => {\n        delete subMenus.value[item2.index];\n      };\n      provide(`subMenu:${instance.uid}`, {\n        addSubMenu,\n        removeSubMenu,\n        handleMouseleave\n      });\n    }\n    expose({\n      opened\n    });\n    onMounted(() => {\n      rootMenu.addSubMenu(item);\n      subMenu.addSubMenu(item);\n      updatePlacement();\n    });\n    onBeforeUnmount(() => {\n      subMenu.removeSubMenu(item);\n      rootMenu.removeSubMenu(item);\n    });\n    return () => {\n      var _a;\n      const titleTag = [(_a = slots.title) == null ? void 0 : _a.call(slots), h(ElIcon, {\n        class: [\"el-sub-menu__icon-arrow\"]\n      }, {\n        default: () => h(subMenuTitleIcon.value)\n      })];\n      const ulStyle = useMenuCssVar(rootMenu.props);\n      const child = rootMenu.isMenuPopup ? h(_Popper, {\n        ref: vPopper,\n        manualMode: true,\n        visible: opened.value,\n        effect: \"light\",\n        pure: true,\n        offset: 6,\n        showArrow: false,\n        popperClass: props.popperClass,\n        placement: currentPlacement.value,\n        appendToBody: appendToBody.value,\n        fallbackPlacements: fallbackPlacements.value,\n        transition: menuTransitionName.value,\n        gpuAcceleration: false\n      }, {\n        default: () => {\n          var _a2;\n          return h(\"div\", {\n            class: [`el-menu--${mode.value}`, props.popperClass],\n            onMouseenter: evt => handleMouseenter(evt, 100),\n            onMouseleave: () => handleMouseleave(true),\n            onFocus: evt => handleMouseenter(evt, 100)\n          }, [h(\"ul\", {\n            class: [\"el-menu el-menu--popup\", `el-menu--popup-${currentPlacement.value}`],\n            style: ulStyle.value\n          }, [(_a2 = slots.default) == null ? void 0 : _a2.call(slots)])]);\n        },\n        trigger: () => h(\"div\", {\n          class: \"el-sub-menu__title\",\n          style: [paddingStyle.value, titleStyle.value, {\n            backgroundColor: backgroundColor.value\n          }],\n          onClick: handleClick\n        }, titleTag)\n      }) : h(Fragment, {}, [h(\"div\", {\n        class: \"el-sub-menu__title\",\n        style: [paddingStyle.value, titleStyle.value, {\n          backgroundColor: backgroundColor.value\n        }],\n        ref: verticalTitleRef,\n        onClick: handleClick\n      }, titleTag), h(_CollapseTransition, {}, {\n        default: () => {\n          var _a2;\n          return withDirectives(h(\"ul\", {\n            role: \"menu\",\n            class: \"el-menu el-menu--inline\",\n            style: ulStyle.value\n          }, [(_a2 = slots.default) == null ? void 0 : _a2.call(slots)]), [[vShow, opened.value]]);\n        }\n      })]);\n      return h(\"li\", {\n        class: [\"el-sub-menu\", {\n          \"is-active\": active.value,\n          \"is-opened\": opened.value,\n          \"is-disabled\": props.disabled\n        }],\n        role: \"menuitem\",\n        ariaHaspopup: true,\n        ariaExpanded: opened.value,\n        onMouseenter: handleMouseenter,\n        onMouseleave: () => handleMouseleave(true),\n        onFocus: handleMouseenter\n      }, [child]);\n    };\n  }\n});\nexport { SubMenu as default, subMenuProps };","map":{"version":3,"names":["subMenuProps","buildProps","index","type","String","required","showTimeout","Number","default","hideTimeout","popperClass","disabled","Boolean","popperAppendToBody","COMPONENT_NAME","SubMenu","defineComponent","name","props","setup","slots","expose","instance","getCurrentInstance","paddingStyle","indexPath","parentMenu","useMenu","computed","rootMenu","inject","throwError","subMenu","value","uid","items","ref","subMenus","timeout","currentPlacement","mouseInChild","verticalTitleRef","vPopper","subMenuTitleIcon","mode","isFirstLevel","collapse","ArrowDown","ArrowRight","isFirstLevel2","parent","includes","appendToBody","menuTransitionName","fallbackPlacements","opened","openedMenus","active","isActive","Object","values","forEach","item2","subItem","backgroundColor","activeTextColor","textColor","item","reactive","titleStyle","color","borderBottomColor","doDestroy","_a","handleCollapseToggle","updatePlacement","handleClick","menuTrigger","handleSubMenuClick","handleMouseenter","event","relatedTarget","stop","useTimeoutFn","openMenu","vnode","el","dispatchEvent","MouseEvent","handleMouseleave","deepDispatch","_b","closeMenu","call","watch","addSubMenu","removeSubMenu","provide","onMounted","onBeforeUnmount","titleTag","title","h","ElIcon","class","ulStyle","useMenuCssVar","child","isMenuPopup","_Popper","manualMode","visible","effect","pure","offset","showArrow","placement","transition","gpuAcceleration","_a2","onMouseenter","evt","onMouseleave","onFocus","style","trigger","onClick","Fragment","_CollapseTransition","withDirectives","role","vShow","ariaHaspopup","ariaExpanded"],"sources":["../../../../../../packages/components/menu/src/sub-menu.ts"],"sourcesContent":["import {\n  defineComponent,\n  computed,\n  ref,\n  provide,\n  inject,\n  getCurrentInstance,\n  watch,\n  onMounted,\n  onBeforeUnmount,\n  withDirectives,\n  Fragment,\n  vShow,\n  h,\n  reactive,\n} from 'vue'\nimport { useTimeoutFn } from '@vueuse/core'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElPopper from '@element-plus/components/popper'\nimport { buildProps } from '@element-plus/utils/props'\nimport { throwError } from '@element-plus/utils/error'\nimport { ArrowDown, ArrowRight } from '@element-plus/icons-vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport useMenu from './use-menu'\nimport { useMenuCssVar } from './use-menu-css-var'\n\nimport type { Placement } from '@element-plus/components/popper'\nimport type { ExtractPropTypes, VNodeArrayChildren, CSSProperties } from 'vue'\nimport type { MenuProvider, SubMenuProvider } from './types'\n\nexport const subMenuProps = buildProps({\n  index: {\n    type: String,\n    required: true,\n  },\n  showTimeout: {\n    type: Number,\n    default: 300,\n  },\n  hideTimeout: {\n    type: Number,\n    default: 300,\n  },\n  popperClass: String,\n  disabled: Boolean,\n  popperAppendToBody: {\n    type: Boolean,\n    default: undefined,\n  },\n} as const)\nexport type SubMenuProps = ExtractPropTypes<typeof subMenuProps>\n\nconst COMPONENT_NAME = 'ElSubMenu'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  props: subMenuProps,\n\n  setup(props, { slots, expose }) {\n    const instance = getCurrentInstance()!\n    const { paddingStyle, indexPath, parentMenu } = useMenu(\n      instance,\n      computed(() => props.index)\n    )\n\n    // inject\n    const rootMenu = inject<MenuProvider>('rootMenu')\n    if (!rootMenu) throwError(COMPONENT_NAME, 'can not inject root menu')\n\n    const subMenu = inject<SubMenuProvider>(`subMenu:${parentMenu.value!.uid}`)\n    if (!subMenu) throwError(COMPONENT_NAME, 'can not inject sub menu')\n\n    const items = ref<MenuProvider['items']>({})\n    const subMenus = ref<MenuProvider['subMenus']>({})\n\n    let timeout: (() => void) | undefined\n    const currentPlacement = ref<Placement | ''>('')\n    const mouseInChild = ref(false)\n    const verticalTitleRef = ref<HTMLDivElement>()\n    const vPopper = ref()\n\n    // computed\n    const subMenuTitleIcon = computed(() => {\n      return (mode.value === 'horizontal' && isFirstLevel.value) ||\n        (mode.value === 'vertical' && !rootMenu.props.collapse)\n        ? ArrowDown\n        : ArrowRight\n    })\n    const isFirstLevel = computed(() => {\n      let isFirstLevel = true\n      let parent = instance.parent\n      while (parent && parent.type.name !== 'ElMenu') {\n        if (['ElSubMenu', 'ElMenuItemGroup'].includes(parent.type.name!)) {\n          isFirstLevel = false\n          break\n        } else {\n          parent = parent.parent\n        }\n      }\n      return isFirstLevel\n    })\n    const appendToBody = computed(() => {\n      return props.popperAppendToBody === undefined\n        ? isFirstLevel.value\n        : Boolean(props.popperAppendToBody)\n    })\n    const menuTransitionName = computed(() =>\n      rootMenu.props.collapse ? 'el-zoom-in-left' : 'el-zoom-in-top'\n    )\n    const fallbackPlacements = computed<Placement[]>(() =>\n      mode.value === 'horizontal' && isFirstLevel.value\n        ? [\n            'bottom-start',\n            'bottom-end',\n            'top-start',\n            'top-end',\n            'right-start',\n            'left-start',\n          ]\n        : [\n            'right-start',\n            'left-start',\n            'bottom-start',\n            'bottom-end',\n            'top-start',\n            'top-end',\n          ]\n    )\n    const opened = computed(() => rootMenu.openedMenus.includes(props.index))\n    const active = computed(() => {\n      let isActive = false\n\n      Object.values(items.value).forEach((item) => {\n        if (item.active) {\n          isActive = true\n        }\n      })\n\n      Object.values(subMenus.value).forEach((subItem) => {\n        if (subItem.active) {\n          isActive = true\n        }\n      })\n\n      return isActive\n    })\n\n    const backgroundColor = computed(() => rootMenu.props.backgroundColor || '')\n    const activeTextColor = computed(() => rootMenu.props.activeTextColor || '')\n    const textColor = computed(() => rootMenu.props.textColor || '')\n    const mode = computed(() => rootMenu.props.mode)\n    const item = reactive({\n      index: props.index,\n      indexPath,\n      active,\n    })\n\n    const titleStyle = computed<CSSProperties>(() => {\n      if (mode.value !== 'horizontal') {\n        return {\n          color: textColor.value,\n        }\n      }\n      return {\n        borderBottomColor: active.value\n          ? rootMenu.props.activeTextColor\n            ? activeTextColor.value\n            : ''\n          : 'transparent',\n        color: active.value ? activeTextColor.value : textColor.value,\n      }\n    })\n\n    // methods\n    const doDestroy = () => vPopper.value?.doDestroy()\n\n    const handleCollapseToggle = (value: boolean) => {\n      if (value) {\n        updatePlacement()\n      } else {\n        doDestroy()\n      }\n    }\n\n    const handleClick = () => {\n      if (\n        (rootMenu.props.menuTrigger === 'hover' &&\n          rootMenu.props.mode === 'horizontal') ||\n        (rootMenu.props.collapse && rootMenu.props.mode === 'vertical') ||\n        props.disabled\n      )\n        return\n\n      rootMenu.handleSubMenuClick({\n        index: props.index,\n        indexPath: indexPath.value,\n        active: active.value,\n      })\n    }\n\n    const handleMouseenter = (\n      event: MouseEvent | FocusEvent,\n      showTimeout = props.showTimeout\n    ) => {\n      if (event.type === 'focus' && !event.relatedTarget) {\n        return\n      }\n      if (\n        (rootMenu.props.menuTrigger === 'click' &&\n          rootMenu.props.mode === 'horizontal') ||\n        (!rootMenu.props.collapse && rootMenu.props.mode === 'vertical') ||\n        props.disabled\n      ) {\n        return\n      }\n      mouseInChild.value = true\n\n      timeout?.()\n      ;({ stop: timeout } = useTimeoutFn(\n        () => rootMenu.openMenu(props.index, indexPath.value),\n        showTimeout\n      ))\n\n      if (appendToBody.value) {\n        parentMenu.value.vnode.el?.dispatchEvent(new MouseEvent('mouseenter'))\n      }\n    }\n\n    const handleMouseleave = (deepDispatch = false) => {\n      if (\n        (rootMenu.props.menuTrigger === 'click' &&\n          rootMenu.props.mode === 'horizontal') ||\n        (!rootMenu.props.collapse && rootMenu.props.mode === 'vertical')\n      ) {\n        return\n      }\n      mouseInChild.value = false\n      timeout?.()\n      ;({ stop: timeout } = useTimeoutFn(\n        () =>\n          !mouseInChild.value &&\n          rootMenu.closeMenu(props.index, indexPath.value),\n        props.hideTimeout\n      ))\n\n      if (appendToBody.value && deepDispatch) {\n        if (instance.parent?.type.name === 'ElSubMenu') {\n          subMenu.handleMouseleave?.(true)\n        }\n      }\n    }\n\n    const updatePlacement = () => {\n      currentPlacement.value =\n        mode.value === 'horizontal' && isFirstLevel.value\n          ? 'bottom-start'\n          : 'right-start'\n    }\n\n    watch(\n      () => rootMenu.props.collapse,\n      (value) => handleCollapseToggle(Boolean(value))\n    )\n\n    // provide\n    {\n      const addSubMenu: SubMenuProvider['addSubMenu'] = (item) => {\n        subMenus.value[item.index] = item\n      }\n      const removeSubMenu: SubMenuProvider['removeSubMenu'] = (item) => {\n        delete subMenus.value[item.index]\n      }\n      provide<SubMenuProvider>(`subMenu:${instance.uid}`, {\n        addSubMenu,\n        removeSubMenu,\n        handleMouseleave,\n      })\n    }\n\n    // expose\n    expose({\n      opened,\n    })\n\n    // lifecycle\n    onMounted(() => {\n      rootMenu.addSubMenu(item)\n      subMenu.addSubMenu(item)\n      updatePlacement()\n    })\n\n    onBeforeUnmount(() => {\n      subMenu.removeSubMenu(item)\n      rootMenu.removeSubMenu(item)\n    })\n\n    return () => {\n      const titleTag: VNodeArrayChildren = [\n        slots.title?.(),\n        h(\n          ElIcon,\n          {\n            class: ['el-sub-menu__icon-arrow'],\n          },\n          { default: () => h(subMenuTitleIcon.value) }\n        ),\n      ]\n\n      const ulStyle = useMenuCssVar(rootMenu.props)\n\n      // this render function is only used for bypass `Vue`'s compiler caused patching issue.\n      // temporarily mark ElPopper as any due to type inconsistency.\n      const child = rootMenu.isMenuPopup\n        ? h(\n            // TODO: correct popper's type.\n            ElPopper as any,\n            {\n              ref: vPopper,\n              manualMode: true,\n              visible: opened.value,\n              effect: 'light',\n              pure: true,\n              offset: 6,\n              showArrow: false,\n              popperClass: props.popperClass,\n              placement: currentPlacement.value,\n              appendToBody: appendToBody.value,\n              fallbackPlacements: fallbackPlacements.value,\n              transition: menuTransitionName.value,\n              gpuAcceleration: false,\n            },\n            {\n              default: () =>\n                h(\n                  'div',\n                  {\n                    class: [`el-menu--${mode.value}`, props.popperClass],\n                    onMouseenter: (evt: MouseEvent) =>\n                      handleMouseenter(evt, 100),\n                    onMouseleave: () => handleMouseleave(true),\n                    onFocus: (evt: FocusEvent) => handleMouseenter(evt, 100),\n                  },\n                  [\n                    h(\n                      'ul',\n                      {\n                        class: [\n                          'el-menu el-menu--popup',\n                          `el-menu--popup-${currentPlacement.value}`,\n                        ],\n                        style: ulStyle.value,\n                      },\n                      [slots.default?.()]\n                    ),\n                  ]\n                ),\n              trigger: () =>\n                h(\n                  'div',\n                  {\n                    class: 'el-sub-menu__title',\n                    style: [\n                      paddingStyle.value,\n                      titleStyle.value,\n                      { backgroundColor: backgroundColor.value },\n                    ],\n                    onClick: handleClick,\n                  },\n                  titleTag\n                ),\n            }\n          )\n        : h(Fragment, {}, [\n            h(\n              'div',\n              {\n                class: 'el-sub-menu__title',\n                style: [\n                  paddingStyle.value,\n                  titleStyle.value,\n                  { backgroundColor: backgroundColor.value },\n                ],\n                ref: verticalTitleRef,\n                onClick: handleClick,\n              },\n              titleTag\n            ),\n            h(\n              ElCollapseTransition,\n              {},\n              {\n                default: () =>\n                  withDirectives(\n                    h(\n                      'ul',\n                      {\n                        role: 'menu',\n                        class: 'el-menu el-menu--inline',\n                        style: ulStyle.value,\n                      },\n                      [slots.default?.()]\n                    ),\n                    [[vShow, opened.value]]\n                  ),\n              }\n            ),\n          ])\n\n      return h(\n        'li',\n        {\n          class: [\n            'el-sub-menu',\n            {\n              'is-active': active.value,\n              'is-opened': opened.value,\n              'is-disabled': props.disabled,\n            },\n          ],\n          role: 'menuitem',\n          ariaHaspopup: true,\n          ariaExpanded: opened.value,\n          onMouseenter: handleMouseenter,\n          onMouseleave: () => handleMouseleave(true),\n          onFocus: handleMouseenter,\n        },\n        [child]\n      )\n    }\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}