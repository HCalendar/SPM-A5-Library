{"ast":null,"code":"import { defineComponent, getCurrentInstance } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/props.mjs';\nimport { useDropdown } from './useDropdown.mjs';\nvar script = defineComponent({\n  name: \"ElDropdownItem\",\n  components: {\n    ElIcon\n  },\n  props: buildProps({\n    command: {\n      type: [Object, String, Number],\n      default: () => ({})\n    },\n    disabled: Boolean,\n    divided: Boolean,\n    icon: {\n      type: definePropType([String, Object])\n    }\n  }),\n  setup(props) {\n    const {\n      elDropdown\n    } = useDropdown();\n    const _instance = getCurrentInstance();\n    function handleClick(e) {\n      var _a, _b;\n      if (props.disabled) {\n        e.stopImmediatePropagation();\n        return;\n      }\n      if (elDropdown.hideOnClick.value) {\n        (_a = elDropdown.handleClick) == null ? void 0 : _a.call(elDropdown);\n      }\n      (_b = elDropdown.commandHandler) == null ? void 0 : _b.call(elDropdown, props.command, _instance, e);\n    }\n    return {\n      handleClick\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","components","ElIcon","props","buildProps","command","type","Object","String","Number","default","disabled","Boolean","divided","icon","definePropType","setup","elDropdown","useDropdown","_instance","getCurrentInstance","handleClick","e","stopImmediatePropagation","hideOnClick","value","_a","call","_b","commandHandler"],"sources":["../../../../../../packages/components/dropdown/src/dropdown-item.vue"],"sourcesContent":["<template>\n  <li\n    class=\"el-dropdown-menu__item\"\n    :class=\"{\n      'is-disabled': disabled,\n      'el-dropdown-menu__item--divided': divided,\n    }\"\n    :aria-disabled=\"disabled\"\n    :tabindex=\"disabled ? null : -1\"\n    @click=\"handleClick\"\n  >\n    <el-icon v-if=\"icon\"><component :is=\"icon\" /></el-icon>\n    <slot></slot>\n  </li>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, getCurrentInstance } from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { buildProps, definePropType } from '@element-plus/utils/props'\nimport { useDropdown } from './useDropdown'\nimport type { Component } from 'vue'\n\nexport default defineComponent({\n  name: 'ElDropdownItem',\n  components: { ElIcon },\n  props: buildProps({\n    command: {\n      type: [Object, String, Number],\n      default: () => ({}),\n    },\n    disabled: Boolean,\n    divided: Boolean,\n    icon: {\n      type: definePropType<string | Component>([String, Object]),\n    },\n  } as const),\n  setup(props) {\n    const { elDropdown } = useDropdown()\n    const _instance = getCurrentInstance()\n\n    function handleClick(e: UIEvent) {\n      // if disabled don't collapse the drop-down list\n      if (props.disabled) {\n        e.stopImmediatePropagation()\n        return\n      }\n      if (elDropdown.hideOnClick.value) {\n        elDropdown.handleClick?.()\n      }\n      elDropdown.commandHandler?.(props.command, _instance, e)\n    }\n\n    return {\n      handleClick,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;AAsBA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,UAAA,EAAY;IAAEC;EAAA;EACdC,KAAA,EAAOC,UAAA,CAAW;IAChBC,OAAA,EAAS;MACPC,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAA,EAAQC,MAAA;MACvBC,OAAA,EAASA,CAAA;IAAO;IAElBC,QAAA,EAAUC,OAAA;IACVC,OAAA,EAASD,OAAA;IACTE,IAAA,EAAM;MACJR,IAAA,EAAMS,cAAA,CAAmC,CAACP,MAAA,EAAQD,MAAA;IAAA;EAAA;EAGtDS,MAAMb,KAAA,EAAO;IACX,MAAM;MAAEc;IAAA,IAAeC,WAAA;IACvB,MAAMC,SAAA,GAAYC,kBAAA;IAElB,SAAAC,YAAqBC,CAAA,EAAY;;MAE/B,IAAInB,KAAA,CAAMQ,QAAA,EAAU;QAClBW,CAAA,CAAEC,wBAAA;QACF;MAAA;MAEF,IAAIN,UAAA,CAAWO,WAAA,CAAYC,KAAA,EAAO;QAChC,CAAAC,EAAA,GAAAT,UAAA,CAAWI,WAAA,KAAX,gBAAAK,EAAA,CAAAC,IAAA,CAAAV,UAAA;MAAA;MAEF,CAAAW,EAAA,GAAAX,UAAA,CAAWY,cAAA,KAAX,gBAAAD,EAAA,CAAAD,IAAA,CAAAV,UAAA,EAA4Bd,KAAA,CAAME,OAAA,EAASc,SAAA,EAAWG,CAAA;IAAA;IAGxD,OAAO;MACLD;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}