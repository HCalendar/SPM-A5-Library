{"ast":null,"code":"import { createElementVNode, resolveComponent, openBlock, createBlock, Transition, withCtx, normalizeStyle, withModifiers, createCommentVNode, createVNode, createElementBlock, Fragment, normalizeClass, resolveDynamicComponent, renderList, withDirectives, vShow, renderSlot } from 'vue';\nconst _hoisted_1 = {\n  class: \"el-image-viewer__btn el-image-viewer__actions\"\n};\nconst _hoisted_2 = {\n  class: \"el-image-viewer__actions__inner\"\n};\nconst _hoisted_3 = /* @__PURE__ */createElementVNode(\"i\", {\n  class: \"el-image-viewer__actions__divider\"\n}, null, -1);\nconst _hoisted_4 = /* @__PURE__ */createElementVNode(\"i\", {\n  class: \"el-image-viewer__actions__divider\"\n}, null, -1);\nconst _hoisted_5 = {\n  class: \"el-image-viewer__canvas\"\n};\nconst _hoisted_6 = [\"src\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_close = resolveComponent(\"close\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_arrow_left = resolveComponent(\"arrow-left\");\n  const _component_arrow_right = resolveComponent(\"arrow-right\");\n  const _component_zoom_out = resolveComponent(\"zoom-out\");\n  const _component_zoom_in = resolveComponent(\"zoom-in\");\n  const _component_refresh_left = resolveComponent(\"refresh-left\");\n  const _component_refresh_right = resolveComponent(\"refresh-right\");\n  return openBlock(), createBlock(Transition, {\n    name: \"viewer-fade\"\n  }, {\n    default: withCtx(() => [createElementVNode(\"div\", {\n      ref: \"wrapper\",\n      tabindex: -1,\n      class: \"el-image-viewer__wrapper\",\n      style: normalizeStyle({\n        zIndex: _ctx.zIndex\n      })\n    }, [createElementVNode(\"div\", {\n      class: \"el-image-viewer__mask\",\n      onClick: _cache[0] || (_cache[0] = withModifiers($event => _ctx.hideOnClickModal && _ctx.hide(), [\"self\"]))\n    }), createCommentVNode(\" CLOSE \"), createElementVNode(\"span\", {\n      class: \"el-image-viewer__btn el-image-viewer__close\",\n      onClick: _cache[1] || (_cache[1] = (...args) => _ctx.hide && _ctx.hide(...args))\n    }, [createVNode(_component_el_icon, null, {\n      default: withCtx(() => [createVNode(_component_close)]),\n      _: 1\n    })]), createCommentVNode(\" ARROW \"), !_ctx.isSingle ? (openBlock(), createElementBlock(Fragment, {\n      key: 0\n    }, [createElementVNode(\"span\", {\n      class: normalizeClass([\"el-image-viewer__btn el-image-viewer__prev\", {\n        \"is-disabled\": !_ctx.infinite && _ctx.isFirst\n      }]),\n      onClick: _cache[2] || (_cache[2] = (...args) => _ctx.prev && _ctx.prev(...args))\n    }, [createVNode(_component_el_icon, null, {\n      default: withCtx(() => [createVNode(_component_arrow_left)]),\n      _: 1\n    })], 2), createElementVNode(\"span\", {\n      class: normalizeClass([\"el-image-viewer__btn el-image-viewer__next\", {\n        \"is-disabled\": !_ctx.infinite && _ctx.isLast\n      }]),\n      onClick: _cache[3] || (_cache[3] = (...args) => _ctx.next && _ctx.next(...args))\n    }, [createVNode(_component_el_icon, null, {\n      default: withCtx(() => [createVNode(_component_arrow_right)]),\n      _: 1\n    })], 2)], 64)) : createCommentVNode(\"v-if\", true), createCommentVNode(\" ACTIONS \"), createElementVNode(\"div\", _hoisted_1, [createElementVNode(\"div\", _hoisted_2, [createVNode(_component_el_icon, {\n      onClick: _cache[4] || (_cache[4] = $event => _ctx.handleActions(\"zoomOut\"))\n    }, {\n      default: withCtx(() => [createVNode(_component_zoom_out)]),\n      _: 1\n    }), createVNode(_component_el_icon, {\n      onClick: _cache[5] || (_cache[5] = $event => _ctx.handleActions(\"zoomIn\"))\n    }, {\n      default: withCtx(() => [createVNode(_component_zoom_in)]),\n      _: 1\n    }), _hoisted_3, createVNode(_component_el_icon, {\n      onClick: _ctx.toggleMode\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.mode.icon)))]),\n      _: 1\n    }, 8, [\"onClick\"]), _hoisted_4, createVNode(_component_el_icon, {\n      onClick: _cache[6] || (_cache[6] = $event => _ctx.handleActions(\"anticlockwise\"))\n    }, {\n      default: withCtx(() => [createVNode(_component_refresh_left)]),\n      _: 1\n    }), createVNode(_component_el_icon, {\n      onClick: _cache[7] || (_cache[7] = $event => _ctx.handleActions(\"clockwise\"))\n    }, {\n      default: withCtx(() => [createVNode(_component_refresh_right)]),\n      _: 1\n    })])]), createCommentVNode(\" CANVAS \"), createElementVNode(\"div\", _hoisted_5, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.urlList, (url, i) => {\n      return withDirectives((openBlock(), createElementBlock(\"img\", {\n        ref: \"img\",\n        key: url,\n        src: url,\n        style: normalizeStyle(_ctx.imgStyle),\n        class: \"el-image-viewer__img\",\n        onLoad: _cache[8] || (_cache[8] = (...args) => _ctx.handleImgLoad && _ctx.handleImgLoad(...args)),\n        onError: _cache[9] || (_cache[9] = (...args) => _ctx.handleImgError && _ctx.handleImgError(...args)),\n        onMousedown: _cache[10] || (_cache[10] = (...args) => _ctx.handleMouseDown && _ctx.handleMouseDown(...args))\n      }, null, 44, _hoisted_6)), [[vShow, i === _ctx.index]]);\n    }), 128))]), renderSlot(_ctx.$slots, \"default\")], 4)]),\n    _: 3\n  });\n}\nexport { render };","map":{"version":3,"names":["class","createBlock","Transition","name","createElementVNode","ref","tabindex","style","normalizeStyle","zIndex","_ctx","onClick","_cache","withModifiers","$event","hideOnClickModal","hide","createCommentVNode","args","createVNode","_component_el_icon","_component_close","_","isSingle","openBlock","createElementBlock","Fragment","key","normalizeClass","infinite","isFirst","prev","_component_arrow_left","isLast","next","_component_arrow_right","_hoisted_1","_hoisted_2","handleActions","_component_zoom_out","_component_zoom_in","_hoisted_3","toggleMode","resolveDynamicComponent","mode","icon","_hoisted_4","_component_refresh_left","_component_refresh_right","_hoisted_5","renderList","urlList","url","i","src","imgStyle","onLoad","handleImgLoad","onError","handleImgError","onMousedown","handleMouseDown","index","renderSlot","$slots"],"sources":["../../../../../../packages/components/image-viewer/src/image-viewer.vue?vue&type=template&id=4b22ad85&lang.js"],"sourcesContent":["<template>\n  <transition name=\"viewer-fade\">\n    <div\n      ref=\"wrapper\"\n      :tabindex=\"-1\"\n      class=\"el-image-viewer__wrapper\"\n      :style=\"{ zIndex }\"\n    >\n      <div\n        class=\"el-image-viewer__mask\"\n        @click.self=\"hideOnClickModal && hide()\"\n      />\n\n      <!-- CLOSE -->\n      <span class=\"el-image-viewer__btn el-image-viewer__close\" @click=\"hide\">\n        <el-icon><close /></el-icon>\n      </span>\n\n      <!-- ARROW -->\n      <template v-if=\"!isSingle\">\n        <span\n          class=\"el-image-viewer__btn el-image-viewer__prev\"\n          :class=\"{ 'is-disabled': !infinite && isFirst }\"\n          @click=\"prev\"\n        >\n          <el-icon><arrow-left /></el-icon>\n        </span>\n        <span\n          class=\"el-image-viewer__btn el-image-viewer__next\"\n          :class=\"{ 'is-disabled': !infinite && isLast }\"\n          @click=\"next\"\n        >\n          <el-icon><arrow-right /></el-icon>\n        </span>\n      </template>\n      <!-- ACTIONS -->\n      <div class=\"el-image-viewer__btn el-image-viewer__actions\">\n        <div class=\"el-image-viewer__actions__inner\">\n          <el-icon @click=\"handleActions('zoomOut')\">\n            <zoom-out />\n          </el-icon>\n          <el-icon @click=\"handleActions('zoomIn')\">\n            <zoom-in />\n          </el-icon>\n          <i class=\"el-image-viewer__actions__divider\"></i>\n          <el-icon @click=\"toggleMode\">\n            <component :is=\"mode.icon\" />\n          </el-icon>\n          <i class=\"el-image-viewer__actions__divider\"></i>\n          <el-icon @click=\"handleActions('anticlockwise')\">\n            <refresh-left />\n          </el-icon>\n          <el-icon @click=\"handleActions('clockwise')\">\n            <refresh-right />\n          </el-icon>\n        </div>\n      </div>\n      <!-- CANVAS -->\n      <div class=\"el-image-viewer__canvas\">\n        <img\n          v-for=\"(url, i) in urlList\"\n          v-show=\"i === index\"\n          ref=\"img\"\n          :key=\"url\"\n          :src=\"url\"\n          :style=\"imgStyle\"\n          class=\"el-image-viewer__img\"\n          @load=\"handleImgLoad\"\n          @error=\"handleImgError\"\n          @mousedown=\"handleMouseDown\"\n        />\n      </div>\n      <slot />\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  computed,\n  ref,\n  onMounted,\n  watch,\n  nextTick,\n  effectScope,\n  markRaw,\n} from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport ElIcon from '@element-plus/components/icon'\nimport { useLocale } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/utils/aria'\nimport { rafThrottle, isFirefox } from '@element-plus/utils/util'\nimport {\n  Close,\n  ArrowLeft,\n  ArrowRight,\n  ZoomOut,\n  ZoomIn,\n  RefreshLeft,\n  RefreshRight,\n  FullScreen,\n  ScaleToOriginal,\n} from '@element-plus/icons-vue'\nimport { imageViewerProps, imageViewerEmits } from './image-viewer'\n\nimport type { CSSProperties } from 'vue'\n\nconst Mode = {\n  CONTAIN: {\n    name: 'contain',\n    icon: markRaw(FullScreen),\n  },\n  ORIGINAL: {\n    name: 'original',\n    icon: markRaw(ScaleToOriginal),\n  },\n}\n\nconst mousewheelEventName = isFirefox() ? 'DOMMouseScroll' : 'mousewheel'\nexport type ImageViewerAction =\n  | 'zoomIn'\n  | 'zoomOut'\n  | 'clockwise'\n  | 'anticlockwise'\n\nexport default defineComponent({\n  name: 'ElImageViewer',\n  components: {\n    ElIcon,\n    Close,\n    ArrowLeft,\n    ArrowRight,\n    ZoomOut,\n    ZoomIn,\n    RefreshLeft,\n    RefreshRight,\n  },\n  props: imageViewerProps,\n  emits: imageViewerEmits,\n\n  setup(props, { emit }) {\n    const { t } = useLocale()\n    const wrapper = ref<HTMLDivElement>()\n    const img = ref<HTMLImageElement>()\n\n    const scopeEventListener = effectScope()\n\n    const loading = ref(true)\n    const index = ref(props.initialIndex)\n    const mode = ref(Mode.CONTAIN)\n    const transform = ref({\n      scale: 1,\n      deg: 0,\n      offsetX: 0,\n      offsetY: 0,\n      enableTransition: false,\n    })\n\n    const isSingle = computed(() => {\n      const { urlList } = props\n      return urlList.length <= 1\n    })\n\n    const isFirst = computed(() => {\n      return index.value === 0\n    })\n\n    const isLast = computed(() => {\n      return index.value === props.urlList.length - 1\n    })\n\n    const currentImg = computed(() => {\n      return props.urlList[index.value]\n    })\n\n    const imgStyle = computed(() => {\n      const { scale, deg, offsetX, offsetY, enableTransition } = transform.value\n      const style: CSSProperties = {\n        transform: `scale(${scale}) rotate(${deg}deg)`,\n        transition: enableTransition ? 'transform .3s' : '',\n        marginLeft: `${offsetX}px`,\n        marginTop: `${offsetY}px`,\n      }\n      if (mode.value.name === Mode.CONTAIN.name) {\n        style.maxWidth = style.maxHeight = '100%'\n      }\n      return style\n    })\n\n    function hide() {\n      unregisterEventListener()\n      emit('close')\n    }\n\n    function registerEventListener() {\n      const keydownHandler = rafThrottle((e: KeyboardEvent) => {\n        switch (e.code) {\n          // ESC\n          case EVENT_CODE.esc:\n            hide()\n            break\n          // SPACE\n          case EVENT_CODE.space:\n            toggleMode()\n            break\n          // LEFT_ARROW\n          case EVENT_CODE.left:\n            prev()\n            break\n          // UP_ARROW\n          case EVENT_CODE.up:\n            handleActions('zoomIn')\n            break\n          // RIGHT_ARROW\n          case EVENT_CODE.right:\n            next()\n            break\n          // DOWN_ARROW\n          case EVENT_CODE.down:\n            handleActions('zoomOut')\n            break\n        }\n      })\n      const mousewheelHandler = rafThrottle(\n        (e: WheelEvent | any /* TODO: wheelDelta is deprecated */) => {\n          const delta = e.wheelDelta ? e.wheelDelta : -e.detail\n          if (delta > 0) {\n            handleActions('zoomIn', {\n              zoomRate: 0.015,\n              enableTransition: false,\n            })\n          } else {\n            handleActions('zoomOut', {\n              zoomRate: 0.015,\n              enableTransition: false,\n            })\n          }\n        }\n      )\n\n      scopeEventListener.run(() => {\n        useEventListener(document, 'keydown', keydownHandler)\n        useEventListener(document, mousewheelEventName, mousewheelHandler)\n      })\n    }\n\n    function unregisterEventListener() {\n      scopeEventListener.stop()\n    }\n\n    function handleImgLoad() {\n      loading.value = false\n    }\n\n    function handleImgError(e: Event) {\n      loading.value = false\n      ;(e.target as HTMLImageElement).alt = t('el.image.error')\n    }\n\n    function handleMouseDown(e: MouseEvent) {\n      if (loading.value || e.button !== 0 || !wrapper.value) return\n\n      const { offsetX, offsetY } = transform.value\n      const startX = e.pageX\n      const startY = e.pageY\n\n      const divLeft = wrapper.value.clientLeft\n      const divRight = wrapper.value.clientLeft + wrapper.value.clientWidth\n      const divTop = wrapper.value.clientTop\n      const divBottom = wrapper.value.clientTop + wrapper.value.clientHeight\n\n      const dragHandler = rafThrottle((ev: MouseEvent) => {\n        transform.value = {\n          ...transform.value,\n          offsetX: offsetX + ev.pageX - startX,\n          offsetY: offsetY + ev.pageY - startY,\n        }\n      })\n      const removeMousemove = useEventListener(\n        document,\n        'mousemove',\n        dragHandler\n      )\n      useEventListener(document, 'mouseup', (evt) => {\n        const mouseX = evt.pageX\n        const mouseY = evt.pageY\n        if (\n          mouseX < divLeft ||\n          mouseX > divRight ||\n          mouseY < divTop ||\n          mouseY > divBottom\n        ) {\n          reset()\n        }\n        removeMousemove()\n      })\n\n      e.preventDefault()\n    }\n\n    function reset() {\n      transform.value = {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false,\n      }\n    }\n\n    function toggleMode() {\n      if (loading.value) return\n\n      const modeNames = Object.keys(Mode)\n      const modeValues = Object.values(Mode)\n      const currentMode = mode.value.name\n      const index = modeValues.findIndex((i) => i.name === currentMode)\n      const nextIndex = (index + 1) % modeNames.length\n      mode.value = Mode[modeNames[nextIndex]]\n      reset()\n    }\n\n    function prev() {\n      if (isFirst.value && !props.infinite) return\n      const len = props.urlList.length\n      index.value = (index.value - 1 + len) % len\n    }\n\n    function next() {\n      if (isLast.value && !props.infinite) return\n      const len = props.urlList.length\n      index.value = (index.value + 1) % len\n    }\n\n    function handleActions(action: ImageViewerAction, options = {}) {\n      if (loading.value) return\n      const { zoomRate, rotateDeg, enableTransition } = {\n        zoomRate: 0.2,\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options,\n      }\n      switch (action) {\n        case 'zoomOut':\n          if (transform.value.scale > 0.2) {\n            transform.value.scale = parseFloat(\n              (transform.value.scale - zoomRate).toFixed(3)\n            )\n          }\n          break\n        case 'zoomIn':\n          transform.value.scale = parseFloat(\n            (transform.value.scale + zoomRate).toFixed(3)\n          )\n          break\n        case 'clockwise':\n          transform.value.deg += rotateDeg\n          break\n        case 'anticlockwise':\n          transform.value.deg -= rotateDeg\n          break\n      }\n      transform.value.enableTransition = enableTransition\n    }\n\n    watch(currentImg, () => {\n      nextTick(() => {\n        const $img = img.value\n        if (!$img?.complete) {\n          loading.value = true\n        }\n      })\n    })\n\n    watch(index, (val) => {\n      reset()\n      emit('switch', val)\n    })\n\n    onMounted(() => {\n      registerEventListener()\n      // add tabindex then wrapper can be focusable via Javascript\n      // focus wrapper so arrow key can't cause inner scroll behavior underneath\n      wrapper.value?.focus?.()\n    })\n\n    return {\n      index,\n      wrapper,\n      img,\n      isSingle,\n      isFirst,\n      isLast,\n      currentImg,\n      imgStyle,\n      mode,\n      handleActions,\n      prev,\n      next,\n      hide,\n      toggleMode,\n      handleImgLoad,\n      handleImgError,\n      handleMouseDown,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}