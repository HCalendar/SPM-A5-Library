{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, createVNode, withCtx, renderSlot, createElementVNode, normalizeClass, toDisplayString, createCommentVNode } from 'vue';\nconst _hoisted_1 = {\n  class: \"el-transfer\"\n};\nconst _hoisted_2 = {\n  class: \"el-transfer__buttons\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 0\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_transfer_panel = resolveComponent(\"transfer-panel\");\n  const _component_arrow_left = resolveComponent(\"arrow-left\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_button = resolveComponent(\"el-button\");\n  const _component_arrow_right = resolveComponent(\"arrow-right\");\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [createVNode(_component_transfer_panel, {\n    ref: \"leftPanel\",\n    data: _ctx.sourceData,\n    \"option-render\": _ctx.optionRender,\n    placeholder: _ctx.panelFilterPlaceholder,\n    title: _ctx.leftPanelTitle,\n    filterable: _ctx.filterable,\n    format: _ctx.format,\n    \"filter-method\": _ctx.filterMethod,\n    \"default-checked\": _ctx.leftDefaultChecked,\n    props: _ctx.props,\n    onCheckedChange: _ctx.onSourceCheckedChange\n  }, {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"left-footer\")]),\n    _: 3\n  }, 8, [\"data\", \"option-render\", \"placeholder\", \"title\", \"filterable\", \"format\", \"filter-method\", \"default-checked\", \"props\", \"onCheckedChange\"]), createElementVNode(\"div\", _hoisted_2, [createVNode(_component_el_button, {\n    type: \"primary\",\n    class: normalizeClass([\"el-transfer__button\", _ctx.hasButtonTexts ? \"is-with-texts\" : \"\"]),\n    disabled: _ctx.rightChecked.length === 0,\n    onClick: _ctx.addToLeft\n  }, {\n    default: withCtx(() => [createVNode(_component_el_icon, null, {\n      default: withCtx(() => [createVNode(_component_arrow_left)]),\n      _: 1\n    }), _ctx.buttonTexts[0] !== void 0 ? (openBlock(), createElementBlock(\"span\", _hoisted_3, toDisplayString(_ctx.buttonTexts[0]), 1)) : createCommentVNode(\"v-if\", true)]),\n    _: 1\n  }, 8, [\"class\", \"disabled\", \"onClick\"]), createVNode(_component_el_button, {\n    type: \"primary\",\n    class: normalizeClass([\"el-transfer__button\", _ctx.hasButtonTexts ? \"is-with-texts\" : \"\"]),\n    disabled: _ctx.leftChecked.length === 0,\n    onClick: _ctx.addToRight\n  }, {\n    default: withCtx(() => [_ctx.buttonTexts[1] !== void 0 ? (openBlock(), createElementBlock(\"span\", _hoisted_4, toDisplayString(_ctx.buttonTexts[1]), 1)) : createCommentVNode(\"v-if\", true), createVNode(_component_el_icon, null, {\n      default: withCtx(() => [createVNode(_component_arrow_right)]),\n      _: 1\n    })]),\n    _: 1\n  }, 8, [\"class\", \"disabled\", \"onClick\"])]), createVNode(_component_transfer_panel, {\n    ref: \"rightPanel\",\n    data: _ctx.targetData,\n    \"option-render\": _ctx.optionRender,\n    placeholder: _ctx.panelFilterPlaceholder,\n    filterable: _ctx.filterable,\n    format: _ctx.format,\n    \"filter-method\": _ctx.filterMethod,\n    title: _ctx.rightPanelTitle,\n    \"default-checked\": _ctx.rightDefaultChecked,\n    props: _ctx.props,\n    onCheckedChange: _ctx.onTargetCheckedChange\n  }, {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"right-footer\")]),\n    _: 3\n  }, 8, [\"data\", \"option-render\", \"placeholder\", \"filterable\", \"format\", \"filter-method\", \"title\", \"default-checked\", \"props\", \"onCheckedChange\"])]);\n}\nexport { render };","map":{"version":3,"names":["class","createElementBlock","_hoisted_1","createVNode","_component_transfer_panel","ref","data","_ctx","sourceData","optionRender","placeholder","panelFilterPlaceholder","title","leftPanelTitle","filterable","format","filterMethod","leftDefaultChecked","props","onCheckedChange","onSourceCheckedChange","renderSlot","$slots","createElementVNode","_hoisted_2","_component_el_button","type","normalizeClass","hasButtonTexts","disabled","rightChecked","length","onClick","addToLeft","_component_el_icon","_component_arrow_left","_","buttonTexts","openBlock","_hoisted_3","toDisplayString","createCommentVNode","leftChecked","addToRight","_hoisted_4","_component_arrow_right","targetData","rightPanelTitle","rightDefaultChecked","onTargetCheckedChange"],"sources":["../../../../../../packages/components/transfer/src/index.vue?vue&type=template&id=6c8b9070&lang.js"],"sourcesContent":["<template>\n  <div class=\"el-transfer\">\n    <transfer-panel\n      ref=\"leftPanel\"\n      :data=\"sourceData\"\n      :option-render=\"optionRender\"\n      :placeholder=\"panelFilterPlaceholder\"\n      :title=\"leftPanelTitle\"\n      :filterable=\"filterable\"\n      :format=\"format\"\n      :filter-method=\"filterMethod\"\n      :default-checked=\"leftDefaultChecked\"\n      :props=\"props\"\n      @checked-change=\"onSourceCheckedChange\"\n    >\n      <slot name=\"left-footer\"></slot>\n    </transfer-panel>\n    <div class=\"el-transfer__buttons\">\n      <el-button\n        type=\"primary\"\n        :class=\"['el-transfer__button', hasButtonTexts ? 'is-with-texts' : '']\"\n        :disabled=\"rightChecked.length === 0\"\n        @click=\"addToLeft\"\n      >\n        <el-icon><arrow-left /></el-icon>\n        <span v-if=\"buttonTexts[0] !== undefined\">{{ buttonTexts[0] }}</span>\n      </el-button>\n      <el-button\n        type=\"primary\"\n        :class=\"['el-transfer__button', hasButtonTexts ? 'is-with-texts' : '']\"\n        :disabled=\"leftChecked.length === 0\"\n        @click=\"addToRight\"\n      >\n        <span v-if=\"buttonTexts[1] !== undefined\">{{ buttonTexts[1] }}</span>\n        <el-icon><arrow-right /></el-icon>\n      </el-button>\n    </div>\n    <transfer-panel\n      ref=\"rightPanel\"\n      :data=\"targetData\"\n      :option-render=\"optionRender\"\n      :placeholder=\"panelFilterPlaceholder\"\n      :filterable=\"filterable\"\n      :format=\"format\"\n      :filter-method=\"filterMethod\"\n      :title=\"rightPanelTitle\"\n      :default-checked=\"rightDefaultChecked\"\n      :props=\"props\"\n      @checked-change=\"onTargetCheckedChange\"\n    >\n      <slot name=\"right-footer\"></slot>\n    </transfer-panel>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  h,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n} from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElIcon from '@element-plus/components/icon'\nimport { elFormItemKey } from '@element-plus/tokens'\nimport { useLocale } from '@element-plus/hooks'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/utils/constants'\nimport { ArrowLeft, ArrowRight } from '@element-plus/icons-vue'\nimport TransferPanel from './transfer-panel.vue'\nimport { useComputedData } from './useComputedData'\nimport {\n  useCheckedChange,\n  LEFT_CHECK_CHANGE_EVENT,\n  RIGHT_CHECK_CHANGE_EVENT,\n} from './useCheckedChange'\nimport { useMove } from './useMove'\nimport { CHANGE_EVENT } from './transfer'\n\nimport type { PropType, VNode } from 'vue'\nimport type { ElFormItemContext } from '@element-plus/tokens'\nimport type { DataItem, Format, Key, Props, TargetOrder } from './transfer'\n\nexport default defineComponent({\n  name: 'ElTransfer',\n\n  components: {\n    TransferPanel,\n    ElButton,\n    ElIcon,\n    ArrowLeft,\n    ArrowRight,\n  },\n\n  props: {\n    data: {\n      type: Array as PropType<DataItem[]>,\n      default: () => [],\n    },\n    titles: {\n      type: Array as PropType<any> as PropType<[string, string]>,\n      default: () => [],\n    },\n    buttonTexts: {\n      type: Array as PropType<any> as PropType<[string, string]>,\n      default: () => [],\n    },\n    filterPlaceholder: {\n      type: String,\n      default: '',\n    },\n    filterMethod: Function as PropType<\n      (query: string, item: DataItem) => boolean\n    >,\n    leftDefaultChecked: {\n      type: Array as PropType<Key[]>,\n      default: () => [],\n    },\n    rightDefaultChecked: {\n      type: Array as PropType<Key[]>,\n      default: () => [],\n    },\n    renderContent: Function as PropType<(h, option) => VNode>,\n    modelValue: {\n      type: Array as PropType<Key[]>,\n      default: () => [],\n    },\n    format: {\n      type: Object as PropType<Format>,\n      default: () => ({}),\n    },\n    filterable: {\n      type: Boolean,\n      default: false,\n    },\n    props: {\n      type: Object as PropType<Props>,\n      default: () => ({\n        label: 'label',\n        key: 'key',\n        disabled: 'disabled',\n      }),\n    },\n    targetOrder: {\n      type: String as PropType<TargetOrder>,\n      default: 'original',\n      validator: (val: string) => {\n        return ['original', 'push', 'unshift'].includes(val)\n      },\n    },\n  },\n\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    LEFT_CHECK_CHANGE_EVENT,\n    RIGHT_CHECK_CHANGE_EVENT,\n  ],\n\n  setup(props, { emit, slots }) {\n    const { t } = useLocale()\n    const elFormItem = inject(elFormItemKey, {} as ElFormItemContext)\n\n    const checkedState = reactive({\n      leftChecked: [],\n      rightChecked: [],\n    })\n\n    const { propsKey, sourceData, targetData } = useComputedData(props)\n\n    const { onSourceCheckedChange, onTargetCheckedChange } = useCheckedChange(\n      checkedState,\n      emit\n    )\n\n    const { addToLeft, addToRight } = useMove(\n      props,\n      checkedState,\n      propsKey,\n      emit\n    )\n\n    const leftPanel = ref(null)\n    const rightPanel = ref(null)\n\n    const clearQuery = (which: 'left' | 'right') => {\n      if (which === 'left') {\n        leftPanel.value.query = ''\n      } else if (which === 'right') {\n        rightPanel.value.query = ''\n      }\n    }\n\n    const hasButtonTexts = computed(() => props.buttonTexts.length === 2)\n\n    const leftPanelTitle = computed(\n      () => props.titles[0] || t('el.transfer.titles.0')\n    )\n\n    const rightPanelTitle = computed(\n      () => props.titles[1] || t('el.transfer.titles.1')\n    )\n\n    const panelFilterPlaceholder = computed(\n      () => props.filterPlaceholder || t('el.transfer.filterPlaceholder')\n    )\n\n    watch(\n      () => props.modelValue,\n      () => {\n        elFormItem.validate?.('change')\n      }\n    )\n\n    const optionRender = computed(() => (option) => {\n      if (props.renderContent) return props.renderContent(h, option)\n\n      if (slots.default) return slots.default({ option })\n\n      return h('span', option[props.props.label] || option[props.props.key])\n    })\n\n    return {\n      sourceData,\n      targetData,\n      onSourceCheckedChange,\n      onTargetCheckedChange,\n      addToLeft,\n      addToRight,\n\n      ...toRefs(checkedState),\n\n      hasButtonTexts,\n      leftPanelTitle,\n      rightPanelTitle,\n      panelFilterPlaceholder,\n      clearQuery,\n\n      optionRender,\n    }\n  },\n})\n</script>\n"],"mappings":";;EACOA,KAAA,EAAM;AAAA;;EAgBJA,KAAA,EAAM;AAAA;;;;;;;;;;;;;sBAhBbC,kBAAA,QAAAC,UAAA,GACEC,WAAA,CAAAC,yBAAA;IACEC,GAAA,EAAI;IACHC,IAAA,EAAMC,IAAA,CAAAC,UAAA;IACN,iBAAeD,IAAA,CAAAE,YAAA;IACfC,WAAA,EAAaH,IAAA,CAAAI,sBAAA;IACbC,KAAA,EAAOL,IAAA,CAAAM,cAAA;IACPC,UAAA,EAAYP,IAAA,CAAAO,UAAA;IACZC,MAAA,EAAQR,IAAA,CAAAQ,MAAA;IACR,iBAAeR,IAAA,CAAAS,YAAA;IACf,mBAAiBT,IAAA,CAAAU,kBAAA;IACjBC,KAAA,EAAOX,IAAA,CAAAW,KAAA;IACPC,eAAA,EAAgBZ,IAAA,CAAAa;;qBAEjB,OAAAC,UAAA,CAAAd,IAAA,CAAAe,MAAA,iB;;oJAEFC,kBAAA,QAAAC,UAAA,GACErB,WAAA,CAAAsB,oBAAA;IACEC,IAAA,EAAK;IACJ1B,KAAA,EAAA2B,cAAA,yBAA+BpB,IAAA,CAAAqB,cAAA;IAC/BC,QAAA,EAAUtB,IAAA,CAAAuB,YAAA,CAAaC,MAAA;IACvBC,OAAA,EAAOzB,IAAA,CAAA0B;;qBAER,OAAA9B,WAAA,CAAA+B,kBAAA;uBAAS,OAAA/B,WAAA,CAAcgC,qBAAA;MAAAC,CAAA;QACX7B,IAAA,CAAA8B,WAAA,QAAmB,UAAAC,SAAA,IAA/BrC,kBAAA,SAAAsC,UAAA,EAAAC,eAAA,CAA6CjC,IAAA,CAAA8B,WAAA,YAAAI,kBAAA,e;;2CAE/CtC,WAAA,CAAAsB,oBAAA;IACEC,IAAA,EAAK;IACJ1B,KAAA,EAAA2B,cAAA,yBAA+BpB,IAAA,CAAAqB,cAAA;IAC/BC,QAAA,EAAUtB,IAAA,CAAAmC,WAAA,CAAYX,MAAA;IACtBC,OAAA,EAAOzB,IAAA,CAAAoC;;qBAER,OAAYpC,IAAA,CAAA8B,WAAA,QAAmB,UAAAC,SAAA,IAA/BrC,kBAAA,SAAA2C,UAAA,EAAAJ,eAAA,CAA6CjC,IAAA,CAAA8B,WAAA,YAAAI,kBAAA,gBAC7CtC,WAAA,CAAA+B,kBAAA;uBAAS,OAAA/B,WAAA,CAAe0C,sBAAA;MAAAT,CAAA;;;6CAG5BjC,WAAA,CAAAC,yBAAA;IACEC,GAAA,EAAI;IACHC,IAAA,EAAMC,IAAA,CAAAuC,UAAA;IACN,iBAAevC,IAAA,CAAAE,YAAA;IACfC,WAAA,EAAaH,IAAA,CAAAI,sBAAA;IACbG,UAAA,EAAYP,IAAA,CAAAO,UAAA;IACZC,MAAA,EAAQR,IAAA,CAAAQ,MAAA;IACR,iBAAeR,IAAA,CAAAS,YAAA;IACfJ,KAAA,EAAOL,IAAA,CAAAwC,eAAA;IACP,mBAAiBxC,IAAA,CAAAyC,mBAAA;IACjB9B,KAAA,EAAOX,IAAA,CAAAW,KAAA;IACPC,eAAA,EAAgBZ,IAAA,CAAA0C;;qBAEjB,OAAA5B,UAAA,CAAAd,IAAA,CAAAe,MAAA,kB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}