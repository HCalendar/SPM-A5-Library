{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, renderSlot } from 'vue';\nconst _hoisted_1 = [\"aria-disabled\", \"tabindex\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  return openBlock(), createElementBlock(\"li\", {\n    class: normalizeClass([\"el-dropdown-menu__item\", {\n      \"is-disabled\": _ctx.disabled,\n      \"el-dropdown-menu__item--divided\": _ctx.divided\n    }]),\n    \"aria-disabled\": _ctx.disabled,\n    tabindex: _ctx.disabled ? null : -1,\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, [_ctx.icon ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0\n  }, {\n    default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")], 10, _hoisted_1);\n}\nexport { render };","map":{"version":3,"names":["createElementBlock","class","normalizeClass","_ctx","disabled","tabindex","onClick","_cache","args","handleClick","icon","openBlock","createBlock","_component_el_icon","key","resolveDynamicComponent","renderSlot","$slots"],"sources":["../../../../../../packages/components/dropdown/src/dropdown-item.vue?vue&type=template&id=396ed16b&lang.js"],"sourcesContent":["<template>\n  <li\n    class=\"el-dropdown-menu__item\"\n    :class=\"{\n      'is-disabled': disabled,\n      'el-dropdown-menu__item--divided': divided,\n    }\"\n    :aria-disabled=\"disabled\"\n    :tabindex=\"disabled ? null : -1\"\n    @click=\"handleClick\"\n  >\n    <el-icon v-if=\"icon\"><component :is=\"icon\" /></el-icon>\n    <slot></slot>\n  </li>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, getCurrentInstance } from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { buildProps, definePropType } from '@element-plus/utils/props'\nimport { useDropdown } from './useDropdown'\nimport type { Component } from 'vue'\n\nexport default defineComponent({\n  name: 'ElDropdownItem',\n  components: { ElIcon },\n  props: buildProps({\n    command: {\n      type: [Object, String, Number],\n      default: () => ({}),\n    },\n    disabled: Boolean,\n    divided: Boolean,\n    icon: {\n      type: definePropType<string | Component>([String, Object]),\n    },\n  } as const),\n  setup(props) {\n    const { elDropdown } = useDropdown()\n    const _instance = getCurrentInstance()\n\n    function handleClick(e: UIEvent) {\n      // if disabled don't collapse the drop-down list\n      if (props.disabled) {\n        e.stopImmediatePropagation()\n        return\n      }\n      if (elDropdown.hideOnClick.value) {\n        elDropdown.handleClick?.()\n      }\n      elDropdown.commandHandler?.(props.command, _instance, e)\n    }\n\n    return {\n      handleClick,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;sBACEA,kBAAA;IACEC,KAAA,EAAAC,cAAA,EAAM;;;;IAKL,iBAAeC,IAAA,CAAAC,QAAA;IACfC,QAAA,EAAUF,IAAA,CAAAC,QAAA;IACVE,OAAA,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAOL,IAAA,CAAAM,WAAA,IAAAN,IAAA,CAAAM,WAAA,IAAAD,IAAA;MAEOL,IAAA,CAAAO,IAAA,IAAAC,SAAA,IAAfC,WAAA,CAAAC,kBAAA;IAAAC,GAAA;EAAA;qBAAqB,Q,aAAAF,WAAA,CAAwBG,uBAAA,CAARZ,IAAA,CAAAO,IAAA,I;;0CACrCM,UAAA,CAAAb,IAAA,CAAAc,MAAA,a","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}