{"ast":null,"code":"import { defineComponent, inject, ref, computed } from 'vue';\nimport { generateId } from '../../../utils/util.mjs';\nimport _CollapseTransition from '../../collapse-transition/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ArrowRight } from '@element-plus/icons-vue';\nvar script = defineComponent({\n  name: \"ElCollapseItem\",\n  components: {\n    ElCollapseTransition: _CollapseTransition,\n    ElIcon,\n    ArrowRight\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"\"\n    },\n    name: {\n      type: [String, Number],\n      default: () => {\n        return generateId();\n      }\n    },\n    disabled: Boolean\n  },\n  setup(props) {\n    const collapse = inject(\"collapse\");\n    const contentWrapStyle = ref({\n      height: \"auto\",\n      display: \"block\"\n    });\n    const contentHeight = ref(0);\n    const focusing = ref(false);\n    const isClick = ref(false);\n    const id = ref(generateId());\n    const isActive = computed(() => {\n      return (collapse == null ? void 0 : collapse.activeNames.value.indexOf(props.name)) > -1;\n    });\n    const handleFocus = () => {\n      setTimeout(() => {\n        if (!isClick.value) {\n          focusing.value = true;\n        } else {\n          isClick.value = false;\n        }\n      }, 50);\n    };\n    const handleHeaderClick = () => {\n      if (props.disabled) return;\n      collapse == null ? void 0 : collapse.handleItemClick(props.name);\n      focusing.value = false;\n      isClick.value = true;\n    };\n    const handleEnterClick = () => {\n      collapse == null ? void 0 : collapse.handleItemClick(props.name);\n    };\n    return {\n      isActive,\n      contentWrapStyle,\n      contentHeight,\n      focusing,\n      isClick,\n      id,\n      handleFocus,\n      handleHeaderClick,\n      handleEnterClick,\n      collapse\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","components","ElCollapseTransition","_CollapseTransition","ElIcon","ArrowRight","props","title","type","String","default","Number","generateId","disabled","Boolean","setup","collapse","inject","contentWrapStyle","ref","height","display","contentHeight","focusing","isClick","id","isActive","computed","activeNames","value","indexOf","handleFocus","setTimeout","handleHeaderClick","handleItemClick","handleEnterClick"],"sources":["../../../../../../packages/components/collapse/src/collapse-item.vue"],"sourcesContent":["<template>\n  <div\n    class=\"el-collapse-item\"\n    :class=\"{ 'is-active': isActive, 'is-disabled': disabled }\"\n  >\n    <div\n      role=\"tab\"\n      :aria-expanded=\"isActive\"\n      :aria-controls=\"`el-collapse-content-${id}`\"\n      :aria-describedby=\"`el-collapse-content-${id}`\"\n    >\n      <div\n        :id=\"`el-collapse-head-${id}`\"\n        class=\"el-collapse-item__header\"\n        role=\"button\"\n        :tabindex=\"disabled ? -1 : 0\"\n        :class=\"{\n          focusing: focusing,\n          'is-active': isActive,\n        }\"\n        @click=\"handleHeaderClick\"\n        @keyup.space.enter.stop=\"handleEnterClick\"\n        @focus=\"handleFocus\"\n        @blur=\"focusing = false\"\n      >\n        <slot name=\"title\">{{ title }}</slot>\n        <el-icon\n          class=\"el-collapse-item__arrow\"\n          :class=\"{ 'is-active': isActive }\"\n        >\n          <arrow-right />\n        </el-icon>\n      </div>\n    </div>\n    <el-collapse-transition>\n      <div\n        v-show=\"isActive\"\n        :id=\"`el-collapse-content-${id}`\"\n        class=\"el-collapse-item__wrap\"\n        role=\"tabpanel\"\n        :aria-hidden=\"!isActive\"\n        :aria-labelledby=\"`el-collapse-head-${id}`\"\n      >\n        <div class=\"el-collapse-item__content\">\n          <slot></slot>\n        </div>\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, inject, computed, ref } from 'vue'\nimport { generateId } from '@element-plus/utils/util'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElIcon from '@element-plus/components/icon'\nimport { ArrowRight } from '@element-plus/icons-vue'\n\nimport type { PropType } from 'vue'\nimport type { CollapseProvider } from './collapse.type'\n\nexport default defineComponent({\n  name: 'ElCollapseItem',\n  components: { ElCollapseTransition, ElIcon, ArrowRight },\n  props: {\n    title: {\n      type: String,\n      default: '',\n    },\n    name: {\n      type: [String, Number] as PropType<string | number>,\n      default: () => {\n        return generateId()\n      },\n    },\n    disabled: Boolean,\n  },\n  setup(props) {\n    const collapse = inject<CollapseProvider>('collapse')\n\n    const contentWrapStyle = ref({\n      height: 'auto',\n      display: 'block',\n    })\n    const contentHeight = ref(0)\n    const focusing = ref(false)\n    const isClick = ref(false)\n    const id = ref(generateId())\n\n    const isActive = computed(() => {\n      return collapse?.activeNames.value.indexOf(props.name) > -1\n    })\n\n    const handleFocus = () => {\n      setTimeout(() => {\n        if (!isClick.value) {\n          focusing.value = true\n        } else {\n          isClick.value = false\n        }\n      }, 50)\n    }\n\n    const handleHeaderClick = () => {\n      if (props.disabled) return\n      collapse?.handleItemClick(props.name)\n      focusing.value = false\n      isClick.value = true\n    }\n\n    const handleEnterClick = () => {\n      collapse?.handleItemClick(props.name)\n    }\n\n    return {\n      isActive,\n      contentWrapStyle,\n      contentHeight,\n      focusing,\n      isClick,\n      id,\n      handleFocus,\n      handleHeaderClick,\n      handleEnterClick,\n      collapse,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;AA4DA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,UAAA,EAAY;IAAAC,oBAAA,EAAEC,mBAAA;IAAsBC,MAAA;IAAQC;EAAA;EAC5CC,KAAA,EAAO;IACLC,KAAA,EAAO;MACLC,IAAA,EAAMC,MAAA;MACNC,OAAA,EAAS;IAAA;IAEXV,IAAA,EAAM;MACJQ,IAAA,EAAM,CAACC,MAAA,EAAQE,MAAA;MACfD,OAAA,EAASA,CAAA,KAAM;QACb,OAAOE,UAAA;MAAA;IAAA;IAGXC,QAAA,EAAUC;EAAA;EAEZC,MAAMT,KAAA,EAAO;IACX,MAAMU,QAAA,GAAWC,MAAA,CAAyB;IAE1C,MAAMC,gBAAA,GAAmBC,GAAA,CAAI;MAC3BC,MAAA,EAAQ;MACRC,OAAA,EAAS;IAAA;IAEX,MAAMC,aAAA,GAAgBH,GAAA,CAAI;IAC1B,MAAMI,QAAA,GAAWJ,GAAA,CAAI;IACrB,MAAMK,OAAA,GAAUL,GAAA,CAAI;IACpB,MAAMM,EAAA,GAAKN,GAAA,CAAIP,UAAA;IAEf,MAAMc,QAAA,GAAWC,QAAA,CAAS,MAAM;MAC9B,OAAO,CAAAX,QAAA,oBAAAA,QAAA,CAAUY,WAAA,CAAYC,KAAA,CAAMC,OAAA,CAAQxB,KAAA,CAAMN,IAAA,KAAQ;IAAA;IAG3D,MAAM+B,WAAA,GAAcA,CAAA,KAAM;MACxBC,UAAA,CAAW,MAAM;QACf,IAAI,CAACR,OAAA,CAAQK,KAAA,EAAO;UAClBN,QAAA,CAASM,KAAA,GAAQ;QAAA,OACZ;UACLL,OAAA,CAAQK,KAAA,GAAQ;QAAA;MAAA,GAEjB;IAAA;IAGL,MAAMI,iBAAA,GAAoBA,CAAA,KAAM;MAC9B,IAAI3B,KAAA,CAAMO,QAAA,EAAU;MACpBG,QAAA,oBAAAA,QAAA,CAAUkB,eAAA,CAAgB5B,KAAA,CAAMN,IAAA;MAChCuB,QAAA,CAASM,KAAA,GAAQ;MACjBL,OAAA,CAAQK,KAAA,GAAQ;IAAA;IAGlB,MAAMM,gBAAA,GAAmBA,CAAA,KAAM;MAC7BnB,QAAA,oBAAAA,QAAA,CAAUkB,eAAA,CAAgB5B,KAAA,CAAMN,IAAA;IAAA;IAGlC,OAAO;MACL0B,QAAA;MACAR,gBAAA;MACAI,aAAA;MACAC,QAAA;MACAC,OAAA;MACAC,EAAA;MACAM,WAAA;MACAE,iBAAA;MACAE,gBAAA;MACAnB;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}