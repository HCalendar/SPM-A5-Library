{"ast":null,"code":"import { defineComponent, computed } from 'vue';\nimport '../../../hooks/index.mjs';\nimport './img-empty.mjs';\nimport { emptyProps } from './empty.mjs';\nimport script$1 from './img-empty.vue_vue_type_script_lang.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nvar script = defineComponent({\n  name: \"ElEmpty\",\n  components: {\n    ImgEmpty: script$1\n  },\n  props: emptyProps,\n  setup(props) {\n    const {\n      t\n    } = useLocale();\n    const emptyDescription = computed(() => props.description || t(\"el.table.emptyText\"));\n    const imageStyle = computed(() => ({\n      width: props.imageSize ? `${props.imageSize}px` : \"\"\n    }));\n    return {\n      emptyDescription,\n      imageStyle\n    };\n  }\n});\nexport { script as default };","map":{"version":3,"names":["script","defineComponent","name","components","ImgEmpty","script$1","props","emptyProps","setup","t","useLocale","emptyDescription","computed","description","imageStyle","width","imageSize"],"sources":["../../../../../../packages/components/empty/src/empty.vue"],"sourcesContent":["<template>\n  <div class=\"el-empty\">\n    <div class=\"el-empty__image\" :style=\"imageStyle\">\n      <img v-if=\"image\" :src=\"image\" ondragstart=\"return false\" />\n      <slot v-else name=\"image\">\n        <img-empty />\n      </slot>\n    </div>\n    <div class=\"el-empty__description\">\n      <slot v-if=\"$slots.description\" name=\"description\"></slot>\n      <p v-else>{{ emptyDescription }}</p>\n    </div>\n    <div v-if=\"$slots.default\" class=\"el-empty__bottom\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport { useLocale } from '@element-plus/hooks'\nimport ImgEmpty from './img-empty.vue'\nimport { emptyProps } from './empty'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElEmpty',\n  components: {\n    ImgEmpty,\n  },\n\n  props: emptyProps,\n\n  setup(props) {\n    const { t } = useLocale()\n    const emptyDescription = computed(\n      () => props.description || t('el.table.emptyText')\n    )\n    const imageStyle = computed<CSSProperties>(() => ({\n      width: props.imageSize ? `${props.imageSize}px` : '',\n    }))\n\n    return {\n      emptyDescription,\n      imageStyle,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;AA0BA,IAAAA,MAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,UAAA,EAAY;IAAAC,QAAA,EACVC;EAAA;EAGFC,KAAA,EAAOC,UAAA;EAEPC,MAAMF,KAAA,EAAO;IACX,MAAM;MAAEG;IAAA,IAAMC,SAAA;IACd,MAAMC,gBAAA,GAAmBC,QAAA,CACvB,MAAMN,KAAA,CAAMO,WAAA,IAAeJ,CAAA,CAAE;IAE/B,MAAMK,UAAA,GAAaF,QAAA,CAAwB;MACzCG,KAAA,EAAOT,KAAA,CAAMU,SAAA,GAAY,GAAGV,KAAA,CAAMU,SAAA,OAAgB;IAAA;IAGpD,OAAO;MACLL,gBAAA;MACAG;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}