{"ast":null,"code":"import { createElementVNode, openBlock, createElementBlock, normalizeClass, withDirectives, vModelCheckbox, renderSlot, Fragment, createTextVNode, toDisplayString, createCommentVNode } from 'vue';\nconst _hoisted_1 = [\"id\", \"aria-controls\"];\nconst _hoisted_2 = [\"tabindex\", \"role\", \"aria-checked\"];\nconst _hoisted_3 = /* @__PURE__ */createElementVNode(\"span\", {\n  class: \"el-checkbox__inner\"\n}, null, -1);\nconst _hoisted_4 = [\"aria-hidden\", \"name\", \"tabindex\", \"disabled\", \"true-value\", \"false-value\"];\nconst _hoisted_5 = [\"aria-hidden\", \"disabled\", \"value\", \"name\", \"tabindex\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"el-checkbox__label\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"label\", {\n    id: _ctx.id,\n    class: normalizeClass([\"el-checkbox\", [_ctx.checkboxSize ? \"el-checkbox--\" + _ctx.checkboxSize : \"\", {\n      \"is-disabled\": _ctx.isDisabled\n    }, {\n      \"is-bordered\": _ctx.border\n    }, {\n      \"is-checked\": _ctx.isChecked\n    }]]),\n    \"aria-controls\": _ctx.indeterminate ? _ctx.controls : null\n  }, [createElementVNode(\"span\", {\n    class: normalizeClass([\"el-checkbox__input\", {\n      \"is-disabled\": _ctx.isDisabled,\n      \"is-checked\": _ctx.isChecked,\n      \"is-indeterminate\": _ctx.indeterminate,\n      \"is-focus\": _ctx.focus\n    }]),\n    tabindex: _ctx.indeterminate ? 0 : void 0,\n    role: _ctx.indeterminate ? \"checkbox\" : void 0,\n    \"aria-checked\": _ctx.indeterminate ? \"mixed\" : false\n  }, [_hoisted_3, _ctx.trueLabel || _ctx.falseLabel ? withDirectives((openBlock(), createElementBlock(\"input\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.model = $event),\n    class: \"el-checkbox__original\",\n    type: \"checkbox\",\n    \"aria-hidden\": _ctx.indeterminate ? \"true\" : \"false\",\n    name: _ctx.name,\n    tabindex: _ctx.tabindex,\n    disabled: _ctx.isDisabled,\n    \"true-value\": _ctx.trueLabel,\n    \"false-value\": _ctx.falseLabel,\n    onChange: _cache[1] || (_cache[1] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n    onFocus: _cache[2] || (_cache[2] = $event => _ctx.focus = true),\n    onBlur: _cache[3] || (_cache[3] = $event => _ctx.focus = false)\n  }, null, 40, _hoisted_4)), [[vModelCheckbox, _ctx.model]]) : withDirectives((openBlock(), createElementBlock(\"input\", {\n    key: 1,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.model = $event),\n    class: \"el-checkbox__original\",\n    type: \"checkbox\",\n    \"aria-hidden\": _ctx.indeterminate ? \"true\" : \"false\",\n    disabled: _ctx.isDisabled,\n    value: _ctx.label,\n    name: _ctx.name,\n    tabindex: _ctx.tabindex,\n    onChange: _cache[5] || (_cache[5] = (...args) => _ctx.handleChange && _ctx.handleChange(...args)),\n    onFocus: _cache[6] || (_cache[6] = $event => _ctx.focus = true),\n    onBlur: _cache[7] || (_cache[7] = $event => _ctx.focus = false)\n  }, null, 40, _hoisted_5)), [[vModelCheckbox, _ctx.model]])], 10, _hoisted_2), _ctx.$slots.default || _ctx.label ? (openBlock(), createElementBlock(\"span\", _hoisted_6, [renderSlot(_ctx.$slots, \"default\"), !_ctx.$slots.default ? (openBlock(), createElementBlock(Fragment, {\n    key: 0\n  }, [createTextVNode(toDisplayString(_ctx.label), 1)], 2112)) : createCommentVNode(\"v-if\", true)])) : createCommentVNode(\"v-if\", true)], 10, _hoisted_1);\n}\nexport { render };","map":{"version":3,"names":["class","createElementBlock","id","_ctx","normalizeClass","indeterminate","controls","createElementVNode","tabindex","role","_hoisted_3","trueLabel","falseLabel","withDirectives","openBlock","model","$event","type","name","disabled","isDisabled","onChange","_cache","args","handleChange","onFocus","focus","onBlur","value","label","$slots","default","_hoisted_6","renderSlot","Fragment","key"],"sources":["../../../../../../packages/components/checkbox/src/checkbox.vue?vue&type=template&id=2c9881e5&lang.js"],"sourcesContent":["<template>\n  <label\n    :id=\"id\"\n    class=\"el-checkbox\"\n    :class=\"[\n      checkboxSize ? 'el-checkbox--' + checkboxSize : '',\n      { 'is-disabled': isDisabled },\n      { 'is-bordered': border },\n      { 'is-checked': isChecked },\n    ]\"\n    :aria-controls=\"indeterminate ? controls : null\"\n  >\n    <span\n      class=\"el-checkbox__input\"\n      :class=\"{\n        'is-disabled': isDisabled,\n        'is-checked': isChecked,\n        'is-indeterminate': indeterminate,\n        'is-focus': focus,\n      }\"\n      :tabindex=\"indeterminate ? 0 : undefined\"\n      :role=\"indeterminate ? 'checkbox' : undefined\"\n      :aria-checked=\"indeterminate ? 'mixed' : false\"\n    >\n      <span class=\"el-checkbox__inner\"></span>\n      <input\n        v-if=\"trueLabel || falseLabel\"\n        v-model=\"model\"\n        class=\"el-checkbox__original\"\n        type=\"checkbox\"\n        :aria-hidden=\"indeterminate ? 'true' : 'false'\"\n        :name=\"name\"\n        :tabindex=\"tabindex\"\n        :disabled=\"isDisabled\"\n        :true-value=\"trueLabel\"\n        :false-value=\"falseLabel\"\n        @change=\"handleChange\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n      />\n      <input\n        v-else\n        v-model=\"model\"\n        class=\"el-checkbox__original\"\n        type=\"checkbox\"\n        :aria-hidden=\"indeterminate ? 'true' : 'false'\"\n        :disabled=\"isDisabled\"\n        :value=\"label\"\n        :name=\"name\"\n        :tabindex=\"tabindex\"\n        @change=\"handleChange\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n      />\n    </span>\n    <span v-if=\"$slots.default || label\" class=\"el-checkbox__label\">\n      <slot></slot>\n      <template v-if=\"!$slots.default\">{{ label }}</template>\n    </span>\n  </label>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/utils/constants'\nimport { isValidComponentSize } from '@element-plus/utils/validators'\nimport { useCheckbox } from './useCheckbox'\n\nimport type { PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/utils/types'\n\nexport default defineComponent({\n  name: 'ElCheckbox',\n  props: {\n    modelValue: {\n      type: [Boolean, Number, String],\n      default: () => undefined,\n    },\n    label: {\n      type: [String, Boolean, Number, Object],\n    },\n    indeterminate: Boolean,\n    disabled: Boolean,\n    checked: Boolean,\n    name: {\n      type: String,\n      default: undefined,\n    },\n    trueLabel: {\n      type: [String, Number],\n      default: undefined,\n    },\n    falseLabel: {\n      type: [String, Number],\n      default: undefined,\n    },\n    id: {\n      type: String,\n      default: undefined,\n    },\n    controls: {\n      type: String,\n      default: undefined,\n    },\n    border: Boolean,\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    tabindex: [String, Number],\n  },\n  emits: [UPDATE_MODEL_EVENT, 'change'],\n  setup(props) {\n    return useCheckbox(props)\n  },\n})\n</script>\n"],"mappings":";;;;EAwBYA,KAAA,EAAM;AAAA;;;;;EA+BuBA,KAAA,EAAM;AAAA;;sBAtD7CC,kBAAA;IACGC,EAAA,EAAIC,IAAA,CAAAD,EAAA;IACLF,KAAA,EAAAI,cAAA,EAAM,gB;;;;;;;IAOL,iBAAeD,IAAA,CAAAE,aAAA,GAAgBF,IAAA,CAAAG,QAAA;MAEhCC,kBAAA;IACEP,KAAA,EAAAI,cAAA,EAAM;;;;;;IAOLI,QAAA,EAAUL,IAAA,CAAAE,aAAA,OAAoB;IAC9BI,IAAA,EAAMN,IAAA,CAAAE,aAAA,gBAA6B;IACnC,gBAAcF,IAAA,CAAAE,aAAA;MAEfK,UAAA,EAEQP,IAAA,CAAAQ,SAAA,IAAaR,IAAA,CAAAS,UAAA,GAAAC,cAAA,EAAAC,SAAA,IADrBb,kBAAA;;+DAEWE,IAAA,CAAAY,KAAA,GAAAC,MAAA;IACThB,KAAA,EAAM;IACNiB,IAAA,EAAK;IACJ,eAAad,IAAA,CAAAE,aAAA;IACba,IAAA,EAAMf,IAAA,CAAAe,IAAA;IACNV,QAAA,EAAUL,IAAA,CAAAK,QAAA;IACVW,QAAA,EAAUhB,IAAA,CAAAiB,UAAA;IACV,cAAYjB,IAAA,CAAAQ,SAAA;IACZ,eAAaR,IAAA,CAAAS,UAAA;IACbS,QAAA,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAQpB,IAAA,CAAAqB,YAAA,IAAArB,IAAA,CAAAqB,YAAA,IAAAD,IAAA;IACRE,OAAA,EAAAH,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAAOb,IAAA,CAAAuB,KAAA;IACPC,MAAA,EAAAL,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAAMb,IAAA,CAAAuB,KAAA;+CAXEvB,IAAA,CAAAY,KAAA,E,iCAaXd,kBAAA;;+DAEWE,IAAA,CAAAY,KAAA,GAAAC,MAAA;IACThB,KAAA,EAAM;IACNiB,IAAA,EAAK;IACJ,eAAad,IAAA,CAAAE,aAAA;IACbc,QAAA,EAAUhB,IAAA,CAAAiB,UAAA;IACVQ,KAAA,EAAOzB,IAAA,CAAA0B,KAAA;IACPX,IAAA,EAAMf,IAAA,CAAAe,IAAA;IACNV,QAAA,EAAUL,IAAA,CAAAK,QAAA;IACVa,QAAA,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAQpB,IAAA,CAAAqB,YAAA,IAAArB,IAAA,CAAAqB,YAAA,IAAAD,IAAA;IACRE,OAAA,EAAAH,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAAOb,IAAA,CAAAuB,KAAA;IACPC,MAAA,EAAAL,MAAA,QAAAA,MAAA,MAAAN,MAAA,IAAMb,IAAA,CAAAuB,KAAA;+CAVEvB,IAAA,CAAAY,KAAA,E,qBAaDZ,IAAA,CAAA2B,MAAA,CAAOC,OAAA,IAAW5B,IAAA,CAAA0B,KAAA,IAAAf,SAAA,IAA9Bb,kBAAA,SAAA+B,UAAA,GACEC,UAAA,CAAA9B,IAAA,CAAA2B,MAAA,c,CACiB3B,IAAA,CAAA2B,MAAA,CAAOC,OAAA,IAAAjB,SAAA,IAAxBb,kBAAA,CAAAiC,QAAA;IAAAC,GAAA;EAAA,I,gCAAoChC,IAAA,CAAA0B,KAAA,M","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}