{"ast":null,"code":"import { resolveComponent, openBlock, createElementBlock, createElementVNode, renderSlot, createTextVNode, toDisplayString, createCommentVNode, normalizeClass, Fragment, renderList, createBlock } from 'vue';\nconst _hoisted_1 = {\n  class: \"el-descriptions\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"el-descriptions__header\"\n};\nconst _hoisted_3 = {\n  class: \"el-descriptions__title\"\n};\nconst _hoisted_4 = {\n  class: \"el-descriptions__extra\"\n};\nconst _hoisted_5 = {\n  class: \"el-descriptions__body\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_descriptions_row = resolveComponent(\"el-descriptions-row\");\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [_ctx.title || _ctx.extra || _ctx.$slots.title || _ctx.$slots.extra ? (openBlock(), createElementBlock(\"div\", _hoisted_2, [createElementVNode(\"div\", _hoisted_3, [renderSlot(_ctx.$slots, \"title\", {}, () => [createTextVNode(toDisplayString(_ctx.title), 1)])]), createElementVNode(\"div\", _hoisted_4, [renderSlot(_ctx.$slots, \"extra\", {}, () => [createTextVNode(toDisplayString(_ctx.extra), 1)])])])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", _hoisted_5, [createElementVNode(\"table\", {\n    class: normalizeClass([\"el-descriptions__table\", {\n      \"is-bordered\": _ctx.border\n    }, _ctx.descriptionsSize ? `el-descriptions--${_ctx.descriptionsSize}` : \"\"])\n  }, [createElementVNode(\"tbody\", null, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.getRows(), (row, index) => {\n    return openBlock(), createBlock(_component_el_descriptions_row, {\n      key: index,\n      row\n    }, null, 8, [\"row\"]);\n  }), 128))])], 2)])]);\n}\nexport { render };","map":{"version":3,"names":["class","createElementBlock","_hoisted_1","_ctx","title","extra","$slots","openBlock","_hoisted_2","createElementVNode","_hoisted_3","renderSlot","_hoisted_4","_hoisted_5","normalizeClass","Fragment","renderList","getRows","row","index","createBlock","_component_el_descriptions_row"],"sources":["../../../../../../packages/components/descriptions/src/index.vue?vue&type=template&id=788d3854&lang.js"],"sourcesContent":["<template>\n  <div class=\"el-descriptions\">\n    <div\n      v-if=\"title || extra || $slots.title || $slots.extra\"\n      class=\"el-descriptions__header\"\n    >\n      <div class=\"el-descriptions__title\">\n        <slot name=\"title\">{{ title }}</slot>\n      </div>\n      <div class=\"el-descriptions__extra\">\n        <slot name=\"extra\">{{ extra }}</slot>\n      </div>\n    </div>\n\n    <div class=\"el-descriptions__body\">\n      <table\n        :class=\"[\n          'el-descriptions__table',\n          { 'is-bordered': border },\n          descriptionsSize ? `el-descriptions--${descriptionsSize}` : '',\n        ]\"\n      >\n        <tbody>\n          <template v-for=\"(row, index) in getRows()\" :key=\"index\">\n            <el-descriptions-row :row=\"row\" />\n          </template>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, provide } from 'vue'\nimport { isValidComponentSize } from '@element-plus/utils/validators'\nimport { useSize } from '@element-plus/hooks'\nimport DescriptionsRow from './descriptions-row.vue'\nimport { elDescriptionsKey } from './token'\n\nimport type { PropType } from 'vue'\nimport type { ComponentSize } from '@element-plus/utils/types'\n\nexport default defineComponent({\n  name: 'ElDescriptions',\n  components: {\n    [DescriptionsRow.name]: DescriptionsRow,\n  },\n  props: {\n    border: {\n      type: Boolean,\n      default: false,\n    },\n    column: {\n      type: Number,\n      default: 3,\n    },\n    direction: {\n      type: String as PropType<'horizontal' | 'vertical'>,\n      default: 'horizontal',\n    },\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    title: {\n      type: String,\n      default: '',\n    },\n    extra: {\n      type: String,\n      default: '',\n    },\n  },\n  setup(props, { slots }) {\n    provide(elDescriptionsKey, props)\n\n    const descriptionsSize = useSize()\n\n    const flattedChildren = (children) => {\n      const temp = Array.isArray(children) ? children : [children]\n      const res = []\n      temp.forEach((child) => {\n        if (Array.isArray(child.children)) {\n          res.push(...flattedChildren(child.children))\n        } else {\n          res.push(child)\n        }\n      })\n      return res\n    }\n\n    const filledNode = (node, span, count, isLast = false) => {\n      if (!node.props) {\n        node.props = {}\n      }\n      if (span > count) {\n        node.props.span = count\n      }\n      if (isLast) {\n        // set the last span\n        node.props.span = span\n      }\n      return node\n    }\n\n    const getRows = () => {\n      const children = flattedChildren(slots.default?.()).filter(\n        (node) => node?.type?.name === 'ElDescriptionsItem'\n      )\n      const rows = []\n      let temp = []\n      let count = props.column\n      let totalSpan = 0 // all spans number of item\n\n      children.forEach((node, index) => {\n        const span = node.props?.span || 1\n\n        if (index < children.length - 1) {\n          totalSpan += span > count ? count : span\n        }\n\n        if (index === children.length - 1) {\n          // calculate the last item span\n          const lastSpan = props.column - (totalSpan % props.column)\n          temp.push(filledNode(node, lastSpan, count, true))\n          rows.push(temp)\n          return\n        }\n\n        if (span < count) {\n          count -= span\n          temp.push(node)\n        } else {\n          temp.push(filledNode(node, span, count))\n          rows.push(temp)\n          count = props.column\n          temp = []\n        }\n      })\n\n      return rows\n    }\n\n    return {\n      descriptionsSize,\n      getRows,\n    }\n  },\n})\n</script>\n"],"mappings":";;EACOA,KAAA,EAAM;AAAA;;;EAGPA,KAAA,EAAM;AAAA;;EAEDA,KAAA,EAAM;AAAA;;EAGNA,KAAA,EAAM;AAAA;;EAKRA,KAAA,EAAM;AAAA;;;sBAbbC,kBAAA,QAAAC,UAAA,GAEUC,IAAA,CAAAC,KAAA,IAASD,IAAA,CAAAE,KAAA,IAASF,IAAA,CAAAG,MAAA,CAAOF,KAAA,IAASD,IAAA,CAAAG,MAAA,CAAOD,KAAA,IAAAE,SAAA,IADjDN,kBAAA,QAAAO,UAAA,GAIEC,kBAAA,QAAAC,UAAA,GACEC,UAAA,CAAAR,IAAA,CAAAG,MAAA,sB,gCAAsBH,IAAA,CAAAC,KAAA,M,KAExBK,kBAAA,QAAAG,UAAA,GACED,UAAA,CAAAR,IAAA,CAAAG,MAAA,sB,gCAAsBH,IAAA,CAAAE,KAAA,M,2CAI1BI,kBAAA,QAAAI,UAAA,GACEJ,kBAAA;IACGT,KAAA,EAAAc,cAAA,E;;;MAMDL,kBAAA,kB,iBACER,kBAAA,CAAAc,QAAA,QAAAC,UAAA,CAAiCb,IAAA,CAAAc,OAAA,KAAfC,GAAA,EAAKC,KAAA;wBACrBC,WAAA,CAAAC,8BAAA;WADgDF,KAAA;MAC1BD;IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}