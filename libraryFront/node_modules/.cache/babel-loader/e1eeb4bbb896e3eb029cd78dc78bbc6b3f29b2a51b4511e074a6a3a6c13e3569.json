{"ast":null,"code":"import { openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"span\", {\n    class: normalizeClass({\n      \"el-check-tag\": true,\n      \"is-checked\": _ctx.checked\n    }),\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.onChange && _ctx.onChange(...args))\n  }, [renderSlot(_ctx.$slots, \"default\")], 2);\n}\nexport { render };","map":{"version":3,"names":["createElementBlock","class","normalizeClass","onClick","_cache","args","_ctx","onChange","renderSlot","$slots"],"sources":["../../../../../../packages/components/check-tag/src/index.vue?vue&type=template&id=58558910&lang.js"],"sourcesContent":["<template>\n  <span\n    :class=\"{\n      'el-check-tag': true,\n      'is-checked': checked,\n    }\"\n    @click=\"onChange\"\n  >\n    <slot></slot>\n  </span>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const checkTagProps = {\n  checked: {\n    type: Boolean,\n    default: false,\n  },\n} as const\n\nexport type CheckTagProps = ExtractPropTypes<typeof checkTagProps>\n\nexport default defineComponent({\n  name: 'ElCheckTag',\n\n  props: checkTagProps,\n  emits: ['change', 'update:checked'],\n\n  setup(props, { emit }) {\n    const onChange = () => {\n      const checked = !props.checked\n      emit('change', checked)\n      emit('update:checked', checked)\n    }\n\n    return {\n      onChange,\n    }\n  },\n})\n</script>\n"],"mappings":";;sBACEA,kBAAA;IACGC,KAAA,EAAAC,cAAA;;;;IAIAC,OAAA,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAOC,IAAA,CAAAC,QAAA,IAAAD,IAAA,CAAAC,QAAA,IAAAF,IAAA;MAERG,UAAA,CAAAF,IAAA,CAAAG,MAAA,a","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}