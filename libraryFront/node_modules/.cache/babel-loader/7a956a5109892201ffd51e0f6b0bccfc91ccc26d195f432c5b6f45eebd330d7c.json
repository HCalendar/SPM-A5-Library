{"ast":null,"code":"import { createElementVNode, openBlock, createElementBlock, normalizeClass, withKeys, withModifiers, withDirectives, vModelRadio, renderSlot, createTextVNode, toDisplayString } from 'vue';\nconst _hoisted_1 = [\"aria-checked\", \"aria-disabled\", \"tabindex\"];\nconst _hoisted_2 = /* @__PURE__ */createElementVNode(\"span\", {\n  class: \"el-radio__inner\"\n}, null, -1);\nconst _hoisted_3 = [\"value\", \"name\", \"disabled\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"label\", {\n    class: normalizeClass([\"el-radio\", {\n      [`el-radio--${_ctx.size || \"\"}`]: _ctx.size,\n      \"is-disabled\": _ctx.disabled,\n      \"is-focus\": _ctx.focus,\n      \"is-bordered\": _ctx.border,\n      \"is-checked\": _ctx.modelValue === _ctx.label\n    }]),\n    role: \"radio\",\n    \"aria-checked\": _ctx.modelValue === _ctx.label,\n    \"aria-disabled\": _ctx.disabled,\n    tabindex: _ctx.tabIndex,\n    onKeydown: _cache[5] || (_cache[5] = withKeys(withModifiers($event => _ctx.modelValue = _ctx.disabled ? _ctx.modelValue : _ctx.label, [\"stop\", \"prevent\"]), [\"space\"]))\n  }, [createElementVNode(\"span\", {\n    class: normalizeClass([\"el-radio__input\", {\n      \"is-disabled\": _ctx.disabled,\n      \"is-checked\": _ctx.modelValue === _ctx.label\n    }])\n  }, [_hoisted_2, withDirectives(createElementVNode(\"input\", {\n    ref: \"radioRef\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.modelValue = $event),\n    class: \"el-radio__original\",\n    value: _ctx.label,\n    type: \"radio\",\n    \"aria-hidden\": \"true\",\n    name: _ctx.name,\n    disabled: _ctx.disabled,\n    tabindex: \"-1\",\n    onFocus: _cache[1] || (_cache[1] = $event => _ctx.focus = true),\n    onBlur: _cache[2] || (_cache[2] = $event => _ctx.focus = false),\n    onChange: _cache[3] || (_cache[3] = (...args) => _ctx.handleChange && _ctx.handleChange(...args))\n  }, null, 40, _hoisted_3), [[vModelRadio, _ctx.modelValue]])], 2), createElementVNode(\"span\", {\n    class: \"el-radio__label\",\n    onKeydown: _cache[4] || (_cache[4] = withModifiers(() => {}, [\"stop\"]))\n  }, [renderSlot(_ctx.$slots, \"default\", {}, () => [createTextVNode(toDisplayString(_ctx.label), 1)])], 32)], 42, _hoisted_1);\n}\nexport { render };","map":{"version":3,"names":["class","createElementBlock","normalizeClass","role","_ctx","modelValue","label","disabled","tabindex","tabIndex","onKeydown","_cache","withKeys","withModifiers","$event","createElementVNode","_hoisted_2","withDirectives","ref","value","type","name","onFocus","focus","onBlur","onChange","args","handleChange","renderSlot","$slots"],"sources":["../../../../../../packages/components/radio/src/radio.vue?vue&type=template&id=6aa3dfc7&lang.js"],"sourcesContent":["<template>\n  <label\n    class=\"el-radio\"\n    :class=\"{\n      [`el-radio--${size || ''}`]: size,\n      'is-disabled': disabled,\n      'is-focus': focus,\n      'is-bordered': border,\n      'is-checked': modelValue === label,\n    }\"\n    role=\"radio\"\n    :aria-checked=\"modelValue === label\"\n    :aria-disabled=\"disabled\"\n    :tabindex=\"tabIndex\"\n    @keydown.space.stop.prevent=\"modelValue = disabled ? modelValue : label\"\n  >\n    <span\n      class=\"el-radio__input\"\n      :class=\"{\n        'is-disabled': disabled,\n        'is-checked': modelValue === label,\n      }\"\n    >\n      <span class=\"el-radio__inner\"></span>\n      <input\n        ref=\"radioRef\"\n        v-model=\"modelValue\"\n        class=\"el-radio__original\"\n        :value=\"label\"\n        type=\"radio\"\n        aria-hidden=\"true\"\n        :name=\"name\"\n        :disabled=\"disabled\"\n        tabindex=\"-1\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n        @change=\"handleChange\"\n      />\n    </span>\n    <span class=\"el-radio__label\" @keydown.stop>\n      <slot>\n        {{ label }}\n      </slot>\n    </span>\n  </label>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, nextTick } from 'vue'\nimport { useRadio, radioEmits, radioProps } from './radio'\n\nexport default defineComponent({\n  name: 'ElRadio',\n  props: radioProps,\n  emits: radioEmits,\n\n  setup(props, { emit }) {\n    const { radioRef, isGroup, focus, size, disabled, tabIndex, modelValue } =\n      useRadio(props, emit)\n\n    function handleChange() {\n      nextTick(() => emit('change', modelValue.value))\n    }\n\n    return {\n      focus,\n      isGroup,\n      modelValue,\n      tabIndex,\n      size,\n      disabled,\n      radioRef,\n\n      handleChange,\n    }\n  },\n})\n</script>\n"],"mappings":";;;EAuBYA,KAAA,EAAM;AAAA;;;sBAtBhBC,kBAAA;IACED,KAAA,EAAAE,cAAA,EAAM;;;;;;;IAQNC,IAAA,EAAK;IACJ,gBAAcC,IAAA,CAAAC,UAAA,KAAeD,IAAA,CAAAE,KAAA;IAC7B,iBAAeF,IAAA,CAAAG,QAAA;IACfC,QAAA,EAAUJ,IAAA,CAAAK,QAAA;IACVC,SAAA,EAAAC,MAAA,QAAAA,MAAA,MAAAC,QAAA,CAAAC,aAAA,CAAAC,MAAA,IAA4BV,IAAA,CAAAC,UAAA,GAAaD,IAAA,CAAAG,QAAA,GAAWH,IAAA,CAAAC,UAAA,GAAaD,IAAA,CAAAE,KAAA;MAElES,kBAAA;IACEf,KAAA,EAAAE,cAAA,EAAM;;;;MAMNc,UAAA,EAAAC,cAAA,CACAF,kBAAA;IACEG,GAAA,EAAI;IAAA,uBAAAP,MAAA,QAAAA,MAAA,MAAAG,MAAA,IACKV,IAAA,CAAAC,UAAA,GAAAS,MAAA;IACTd,KAAA,EAAM;IACLmB,KAAA,EAAOf,IAAA,CAAAE,KAAA;IACRc,IAAA,EAAK;IACL,eAAY;IACXC,IAAA,EAAMjB,IAAA,CAAAiB,IAAA;IACNd,QAAA,EAAUH,IAAA,CAAAG,QAAA;IACXC,QAAA,EAAS;IACRc,OAAA,EAAAX,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAAOV,IAAA,CAAAmB,KAAA;IACPC,MAAA,EAAAb,MAAA,QAAAA,MAAA,MAAAG,MAAA,IAAMV,IAAA,CAAAmB,KAAA;IACNE,QAAA,EAAAd,MAAA,QAAAA,MAAA,UAAAe,IAAA,KAAQtB,IAAA,CAAAuB,YAAA,IAAAvB,IAAA,CAAAuB,YAAA,IAAAD,IAAA;2CAVAtB,IAAA,CAAAC,UAAA,E,QAabU,kBAAA;IAAMf,KAAA,EAAM;IAAmBU,SAAA,EAAAC,MAAA,QAAAA,MAAA,MAAAE,aAAA,CAAD,O;MAC5Be,UAAA,CAAAxB,IAAA,CAAAyB,MAAA,wB,gCACKzB,IAAA,CAAAE,KAAA,M","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}