{"ast":null,"code":"import { resolveComponent, openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, resolveDynamicComponent, createCommentVNode, toDisplayString, renderSlot, createElementBlock, Fragment, vShow, withModifiers, createVNode } from 'vue';\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = {\n  class: \"el-notification__group\"\n};\nconst _hoisted_3 = [\"textContent\"];\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = [\"innerHTML\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_close = resolveComponent(\"close\");\n  return openBlock(), createBlock(Transition, {\n    name: \"el-notification-fade\",\n    onBeforeLeave: _ctx.onClose,\n    onAfterLeave: _cache[3] || (_cache[3] = $event => _ctx.$emit(\"destroy\"))\n  }, {\n    default: withCtx(() => [withDirectives(createElementVNode(\"div\", {\n      id: _ctx.id,\n      class: normalizeClass([\"el-notification\", _ctx.customClass, _ctx.horizontalClass]),\n      style: normalizeStyle(_ctx.positionStyle),\n      role: \"alert\",\n      onMouseenter: _cache[0] || (_cache[0] = (...args) => _ctx.clearTimer && _ctx.clearTimer(...args)),\n      onMouseleave: _cache[1] || (_cache[1] = (...args) => _ctx.startTimer && _ctx.startTimer(...args)),\n      onClick: _cache[2] || (_cache[2] = (...args) => _ctx.onClick && _ctx.onClick(...args))\n    }, [_ctx.iconComponent ? (openBlock(), createBlock(_component_el_icon, {\n      key: 0,\n      class: normalizeClass([\"el-notification__icon\", _ctx.typeClass])\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n      _: 1\n    }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", _hoisted_2, [createElementVNode(\"h2\", {\n      class: \"el-notification__title\",\n      textContent: toDisplayString(_ctx.title)\n    }, null, 8, _hoisted_3), withDirectives(createElementVNode(\"div\", {\n      class: \"el-notification__content\",\n      style: normalizeStyle(!!_ctx.title ? void 0 : {\n        margin: 0\n      })\n    }, [renderSlot(_ctx.$slots, \"default\", {}, () => [!_ctx.dangerouslyUseHTMLString ? (openBlock(), createElementBlock(\"p\", _hoisted_4, toDisplayString(_ctx.message), 1)) : (openBlock(), createElementBlock(Fragment, {\n      key: 1\n    }, [createCommentVNode(\" Caution here, message could've been compromized, nerver use user's input as message \"), createCommentVNode(\" eslint-disable-next-line \"), createElementVNode(\"p\", {\n      innerHTML: _ctx.message\n    }, null, 8, _hoisted_5)], 2112))])], 4), [[vShow, _ctx.message]]), _ctx.showClose ? (openBlock(), createBlock(_component_el_icon, {\n      key: 0,\n      class: \"el-notification__closeBtn\",\n      onClick: withModifiers(_ctx.close, [\"stop\"])\n    }, {\n      default: withCtx(() => [createVNode(_component_close)]),\n      _: 1\n    }, 8, [\"onClick\"])) : createCommentVNode(\"v-if\", true)])], 46, _hoisted_1), [[vShow, _ctx.visible]])]),\n    _: 3\n  }, 8, [\"onBeforeLeave\"]);\n}\nexport { render };","map":{"version":3,"names":["class","createBlock","Transition","name","onBeforeLeave","_ctx","onClose","onAfterLeave","_cache","$event","$emit","createElementVNode","id","normalizeClass","customClass","horizontalClass","style","normalizeStyle","positionStyle","role","onMouseenter","args","clearTimer","onMouseleave","startTimer","onClick","iconComponent","openBlock","_component_el_icon","typeClass","resolveDynamicComponent","_hoisted_2","textContent","toDisplayString","title","margin","renderSlot","$slots","dangerouslyUseHTMLString","createElementBlock","_hoisted_4","message","Fragment","key","createCommentVNode","innerHTML","_hoisted_5","showClose","withModifiers","close","createVNode","_component_close","visible"],"sources":["../../../../../../packages/components/notification/src/notification.vue?vue&type=template&id=d6b81f36&lang.js"],"sourcesContent":["<template>\n  <transition\n    name=\"el-notification-fade\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      :class=\"['el-notification', customClass, horizontalClass]\"\n      :style=\"positionStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n      @click=\"onClick\"\n    >\n      <el-icon\n        v-if=\"iconComponent\"\n        class=\"el-notification__icon\"\n        :class=\"typeClass\"\n      >\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <div class=\"el-notification__group\">\n        <h2 class=\"el-notification__title\" v-text=\"title\"></h2>\n        <div\n          v-show=\"message\"\n          class=\"el-notification__content\"\n          :style=\"!!title ? undefined : { margin: 0 }\"\n        >\n          <slot>\n            <p v-if=\"!dangerouslyUseHTMLString\">{{ message }}</p>\n            <!-- Caution here, message could've been compromized, nerver use user's input as message -->\n            <!-- eslint-disable-next-line -->\n            <p v-else v-html=\"message\"></p>\n          </slot>\n        </div>\n        <el-icon\n          v-if=\"showClose\"\n          class=\"el-notification__closeBtn\"\n          @click.stop=\"close\"\n        >\n          <close />\n        </el-icon>\n      </div>\n    </div>\n  </transition>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, onMounted } from 'vue'\nimport { useEventListener, useTimeoutFn } from '@vueuse/core'\nimport { EVENT_CODE } from '@element-plus/utils/aria'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { TypeComponents, TypeComponentsMap } from '@element-plus/utils/icon'\nimport { notificationProps, notificationEmits } from './notification'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElNotification',\n\n  components: {\n    ElIcon,\n    ...TypeComponents,\n  },\n\n  props: notificationProps,\n  emits: notificationEmits,\n\n  setup(props) {\n    const visible = ref(false)\n    let timer: (() => void) | undefined = undefined\n\n    const typeClass = computed(() => {\n      const type = props.type\n      return type && TypeComponentsMap[props.type]\n        ? `el-notification--${type}`\n        : ''\n    })\n\n    const iconComponent = computed(() => {\n      return TypeComponentsMap[props.type] || props.icon || ''\n    })\n\n    const horizontalClass = computed(() =>\n      props.position.endsWith('right') ? 'right' : 'left'\n    )\n\n    const verticalProperty = computed(() =>\n      props.position.startsWith('top') ? 'top' : 'bottom'\n    )\n\n    const positionStyle = computed<CSSProperties>(() => {\n      return {\n        [verticalProperty.value]: `${props.offset}px`,\n        zIndex: props.zIndex,\n      }\n    })\n\n    function startTimer() {\n      if (props.duration > 0) {\n        ;({ stop: timer } = useTimeoutFn(() => {\n          if (visible.value) close()\n        }, props.duration))\n      }\n    }\n\n    function clearTimer() {\n      timer?.()\n    }\n\n    function close() {\n      visible.value = false\n    }\n\n    function onKeydown({ code }: KeyboardEvent) {\n      if (code === EVENT_CODE.delete || code === EVENT_CODE.backspace) {\n        clearTimer() // press delete/backspace clear timer\n      } else if (code === EVENT_CODE.esc) {\n        // press esc to close the notification\n        if (visible.value) {\n          close()\n        }\n      } else {\n        startTimer() // resume timer\n      }\n    }\n\n    // lifecycle\n    onMounted(() => {\n      startTimer()\n      visible.value = true\n    })\n\n    useEventListener(document, 'keydown', onKeydown)\n\n    return {\n      horizontalClass,\n      typeClass,\n      iconComponent,\n      positionStyle,\n      visible,\n\n      close,\n      clearTimer,\n      startTimer,\n    }\n  },\n})\n</script>\n"],"mappings":";;;EAuBWA,KAAA,EAAM;AAAA;;;;;;;;;sBAtBfC,WAAA,CAAAC,UAAA;IACEC,IAAA,EAAK;IACJC,aAAA,EAAcC,IAAA,CAAAC,OAAA;IACdC,YAAA,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAaJ,IAAA,CAAAK,KAAA;;qBAEd,O,eAAAC,kBAAA;MAEGC,EAAA,EAAIP,IAAA,CAAAO,EAAA;MACJZ,KAAA,EAAAa,cAAA,qBAA2BR,IAAA,CAAAS,WAAA,EAAaT,IAAA,CAAAU,eAAA;MACxCC,KAAA,EAAAC,cAAA,CAAOZ,IAAA,CAAAa,aAAA;MACRC,IAAA,EAAK;MACJC,YAAA,EAAAZ,MAAA,QAAAA,MAAA,UAAAa,IAAA,KAAYhB,IAAA,CAAAiB,UAAA,IAAAjB,IAAA,CAAAiB,UAAA,IAAAD,IAAA;MACZE,YAAA,EAAAf,MAAA,QAAAA,MAAA,UAAAa,IAAA,KAAYhB,IAAA,CAAAmB,UAAA,IAAAnB,IAAA,CAAAmB,UAAA,IAAAH,IAAA;MACZI,OAAA,EAAAjB,MAAA,QAAAA,MAAA,UAAAa,IAAA,KAAOhB,IAAA,CAAAoB,OAAA,IAAApB,IAAA,CAAAoB,OAAA,IAAAJ,IAAA;QAGAhB,IAAA,CAAAqB,aAAA,IAAAC,SAAA,IADR1B,WAAA,CAAA2B,kBAAA;;MAEE5B,KAAA,EAAAa,cAAA,EAAM,yBACER,IAAA,CAAAwB,SAAA;;uBAER,Q,aAAA5B,WAAA,CAAA6B,uBAAA,CAAgBzB,IAAA,CAAAqB,aAAA,I;;0DAElBf,kBAAA,QAAAoB,UAAA,GACEpB,kBAAA;MAAIX,KAAA,EAAM;MAAAgC,WAAA,EAAyBC,eAAA,CAAQ5B,IAAA,CAAA6B,KAAA;4CAC3CvB,kBAAA;MAEEX,KAAA,EAAM;MACLgB,KAAA,EAAAC,cAAA,GAASZ,IAAA,CAAA6B,KAAA,GAAQ;QAAAC,MAAA;MAAA;QAElBC,UAAA,CAAA/B,IAAA,CAAAgC,MAAA,wB,CACYhC,IAAA,CAAAiC,wBAAA,IAAAX,SAAA,IAAVY,kBAAA,MAAAC,UAAA,EAAAP,eAAA,CAAuC5B,IAAA,CAAAoC,OAAA,UAAAd,SAAA,IAGvCY,kBAAA,CAAAG,QAAA;MAAAC,GAAA;IAAA,IAFAC,kBAAA,2FACAA,kBAAA,gCACAjC,kBAAA;MAAUkC,SAAA,EAAQxC,IAAA,CAAAoC;IAAA,YAAAK,UAAA,E,0BARZzC,IAAA,CAAAoC,OAAA,E,GAYFpC,IAAA,CAAA0C,SAAA,IAAApB,SAAA,IADR1B,WAAA,CAAA2B,kBAAA;;MAEE5B,KAAA,EAAM;MACLyB,OAAA,EAAAuB,aAAA,CAAY3C,IAAA,CAAA4C,KAAA;;uBAEb,OAAAC,WAAA,CAAAC,gBAAA,E;;yFAnCI9C,IAAA,CAAA+C,OAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}