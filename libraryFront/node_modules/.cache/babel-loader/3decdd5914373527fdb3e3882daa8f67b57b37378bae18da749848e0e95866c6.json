{"ast":null,"code":"import { buildProps, definePropType } from '../../../utils/props.mjs';\nconst progressProps = buildProps({\n  type: {\n    type: String,\n    default: \"line\",\n    values: [\"line\", \"circle\", \"dashboard\"]\n  },\n  percentage: {\n    type: Number,\n    default: 0,\n    validator: val => val >= 0 && val <= 100\n  },\n  status: {\n    type: String,\n    default: \"\",\n    values: [\"\", \"success\", \"exception\", \"warning\"]\n  },\n  indeterminate: {\n    type: Boolean,\n    default: false\n  },\n  duration: {\n    type: Number,\n    default: 3\n  },\n  strokeWidth: {\n    type: Number,\n    default: 6\n  },\n  strokeLinecap: {\n    type: definePropType(String),\n    default: \"round\"\n  },\n  textInside: {\n    type: Boolean,\n    default: false\n  },\n  width: {\n    type: Number,\n    default: 126\n  },\n  showText: {\n    type: Boolean,\n    default: true\n  },\n  color: {\n    type: definePropType([String, Array, Function]),\n    default: \"\"\n  },\n  format: {\n    type: definePropType(Function),\n    default: percentage => `${percentage}%`\n  }\n});\nexport { progressProps };","map":{"version":3,"names":["progressProps","buildProps","type","String","default","values","percentage","Number","validator","val","status","indeterminate","Boolean","duration","strokeWidth","strokeLinecap","definePropType","textInside","width","showText","color","Array","Function","format"],"sources":["../../../../../../packages/components/progress/src/progress.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils/props'\nimport type { SVGAttributes, ExtractPropTypes } from 'vue'\n\ntype Color = { color: string; percentage: number }\ntype ProgressFn = (percentage: number) => string\n\nexport const progressProps = buildProps({\n  type: {\n    type: String,\n    default: 'line',\n    values: ['line', 'circle', 'dashboard'],\n  },\n  percentage: {\n    type: Number,\n    default: 0,\n    validator: (val: number): boolean => val >= 0 && val <= 100,\n  },\n  status: {\n    type: String,\n    default: '',\n    values: ['', 'success', 'exception', 'warning'],\n  },\n  indeterminate: {\n    type: Boolean,\n    default: false,\n  },\n  duration: {\n    type: Number,\n    default: 3,\n  },\n  strokeWidth: {\n    type: Number,\n    default: 6,\n  },\n  strokeLinecap: {\n    type: definePropType<NonNullable<SVGAttributes['stroke-linecap']>>(String),\n    default: 'round',\n  },\n  textInside: {\n    type: Boolean,\n    default: false,\n  },\n  width: {\n    type: Number,\n    default: 126,\n  },\n  showText: {\n    type: Boolean,\n    default: true,\n  },\n  color: {\n    type: definePropType<string | Color[] | ProgressFn>([\n      String,\n      Array,\n      Function,\n    ]),\n    default: '',\n  },\n  format: {\n    type: definePropType<ProgressFn>(Function),\n    default: (percentage: number): string => `${percentage}%`,\n  },\n} as const)\n\nexport type ProgressProps = ExtractPropTypes<typeof progressProps>\n"],"mappings":";MAMaA,aAAA,GAAgBC,UAAA,CAAW;EACtCC,IAAA,EAAM;IACJA,IAAA,EAAMC,MAAA;IACNC,OAAA,EAAS;IACTC,MAAA,EAAQ,CAAC,QAAQ,UAAU;EAAA;EAE7BC,UAAA,EAAY;IACVJ,IAAA,EAAMK,MAAA;IACNH,OAAA,EAAS;IACTI,SAAA,EAAYC,GAAA,IAAyBA,GAAA,IAAO,KAAKA,GAAA,IAAO;EAAA;EAE1DC,MAAA,EAAQ;IACNR,IAAA,EAAMC,MAAA;IACNC,OAAA,EAAS;IACTC,MAAA,EAAQ,CAAC,IAAI,WAAW,aAAa;EAAA;EAEvCM,aAAA,EAAe;IACbT,IAAA,EAAMU,OAAA;IACNR,OAAA,EAAS;EAAA;EAEXS,QAAA,EAAU;IACRX,IAAA,EAAMK,MAAA;IACNH,OAAA,EAAS;EAAA;EAEXU,WAAA,EAAa;IACXZ,IAAA,EAAMK,MAAA;IACNH,OAAA,EAAS;EAAA;EAEXW,aAAA,EAAe;IACbb,IAAA,EAAMc,cAAA,CAA6Db,MAAA;IACnEC,OAAA,EAAS;EAAA;EAEXa,UAAA,EAAY;IACVf,IAAA,EAAMU,OAAA;IACNR,OAAA,EAAS;EAAA;EAEXc,KAAA,EAAO;IACLhB,IAAA,EAAMK,MAAA;IACNH,OAAA,EAAS;EAAA;EAEXe,QAAA,EAAU;IACRjB,IAAA,EAAMU,OAAA;IACNR,OAAA,EAAS;EAAA;EAEXgB,KAAA,EAAO;IACLlB,IAAA,EAAMc,cAAA,CAA8C,CAClDb,MAAA,EACAkB,KAAA,EACAC,QAAA;IAEFlB,OAAA,EAAS;EAAA;EAEXmB,MAAA,EAAQ;IACNrB,IAAA,EAAMc,cAAA,CAA2BM,QAAA;IACjClB,OAAA,EAAUE,UAAA,IAA+B,GAAGA,UAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}