{"ast":null,"code":"import { inject, computed, getCurrentInstance, watch, toRaw, unref } from 'vue';\nimport { getValueByPath, escapeRegexpString } from '../../../utils/util.mjs';\nimport { selectKey, selectGroupKey } from './token.mjs';\nfunction useOption(props, states) {\n  const select = inject(selectKey);\n  const selectGroup = inject(selectGroupKey, {\n    disabled: false\n  });\n  const isObject = computed(() => {\n    return Object.prototype.toString.call(props.value).toLowerCase() === \"[object object]\";\n  });\n  const itemSelected = computed(() => {\n    if (!select.props.multiple) {\n      return isEqual(props.value, select.props.modelValue);\n    } else {\n      return contains(select.props.modelValue, props.value);\n    }\n  });\n  const limitReached = computed(() => {\n    if (select.props.multiple) {\n      const modelValue = select.props.modelValue || [];\n      return !itemSelected.value && modelValue.length >= select.props.multipleLimit && select.props.multipleLimit > 0;\n    } else {\n      return false;\n    }\n  });\n  const currentLabel = computed(() => {\n    return props.label || (isObject.value ? \"\" : props.value);\n  });\n  const currentValue = computed(() => {\n    return props.value || props.label || \"\";\n  });\n  const isDisabled = computed(() => {\n    return props.disabled || states.groupDisabled || limitReached.value;\n  });\n  const instance = getCurrentInstance();\n  const contains = (arr = [], target) => {\n    if (!isObject.value) {\n      return arr && arr.indexOf(target) > -1;\n    } else {\n      const valueKey = select.props.valueKey;\n      return arr && arr.some(item => {\n        return getValueByPath(item, valueKey) === getValueByPath(target, valueKey);\n      });\n    }\n  };\n  const isEqual = (a, b) => {\n    if (!isObject.value) {\n      return a === b;\n    } else {\n      const {\n        valueKey\n      } = select.props;\n      return getValueByPath(a, valueKey) === getValueByPath(b, valueKey);\n    }\n  };\n  const hoverItem = () => {\n    if (!props.disabled && !selectGroup.disabled) {\n      select.hoverIndex = select.optionsArray.indexOf(instance);\n    }\n  };\n  watch(() => currentLabel.value, () => {\n    if (!props.created && !select.props.remote) select.setSelected();\n  });\n  watch(() => props.value, (val, oldVal) => {\n    const {\n      remote,\n      valueKey\n    } = select.props;\n    if (!props.created && !remote) {\n      if (valueKey && typeof val === \"object\" && typeof oldVal === \"object\" && val[valueKey] === oldVal[valueKey]) {\n        return;\n      }\n      select.setSelected();\n    }\n  });\n  watch(() => selectGroup.disabled, () => {\n    states.groupDisabled = selectGroup.disabled;\n  }, {\n    immediate: true\n  });\n  const {\n    queryChange\n  } = toRaw(select);\n  watch(queryChange, changes => {\n    const {\n      query\n    } = unref(changes);\n    const regexp = new RegExp(escapeRegexpString(query), \"i\");\n    states.visible = regexp.test(currentLabel.value) || props.created;\n    if (!states.visible) {\n      select.filteredOptionsCount--;\n    }\n  });\n  return {\n    select,\n    currentLabel,\n    currentValue,\n    itemSelected,\n    isDisabled,\n    hoverItem\n  };\n}\nexport { useOption };","map":{"version":3,"names":["props","states","select","inject","selectKey","selectGroup","selectGroupKey","disabled","isObject","computed","Object","prototype","toString","call","value","toLowerCase","itemSelected","multiple","isEqual","modelValue","contains","limitReached","length","multipleLimit","currentLabel","label","currentValue","isDisabled","groupDisabled","instance","getCurrentInstance","arr","target","indexOf","valueKey","some","item","getValueByPath","a","b","hoverItem","hoverIndex","optionsArray","watch","created","remote","setSelected","val","oldVal","immediate","queryChange","toRaw","changes","query","unref","regexp","RegExp","escapeRegexpString","visible","test","filteredOptionsCount"],"sources":["../../../../../../packages/components/select/src/useOption.ts"],"sourcesContent":["import { inject, computed, getCurrentInstance, watch, toRaw, unref } from 'vue'\nimport { getValueByPath, escapeRegexpString } from '@element-plus/utils/util'\nimport { selectKey, selectGroupKey } from './token'\n\nimport type { Ref } from 'vue'\nimport type { QueryChangeCtx } from './token'\n\nexport function useOption(props, states) {\n  // inject\n  const select = inject(selectKey)\n  const selectGroup = inject(selectGroupKey, { disabled: false })\n\n  // computed\n  const isObject = computed(() => {\n    return (\n      Object.prototype.toString.call(props.value).toLowerCase() ===\n      '[object object]'\n    )\n  })\n\n  const itemSelected = computed(() => {\n    if (!select.props.multiple) {\n      return isEqual(props.value, select.props.modelValue)\n    } else {\n      return contains(select.props.modelValue as unknown[], props.value)\n    }\n  })\n\n  const limitReached = computed(() => {\n    if (select.props.multiple) {\n      const modelValue = (select.props.modelValue || []) as unknown[]\n      return (\n        !itemSelected.value &&\n        modelValue.length >= select.props.multipleLimit &&\n        select.props.multipleLimit > 0\n      )\n    } else {\n      return false\n    }\n  })\n\n  const currentLabel = computed(() => {\n    return props.label || (isObject.value ? '' : props.value)\n  })\n\n  const currentValue = computed(() => {\n    return props.value || props.label || ''\n  })\n\n  const isDisabled = computed(() => {\n    return props.disabled || states.groupDisabled || limitReached.value\n  })\n\n  const instance = getCurrentInstance()\n\n  const contains = (arr = [], target) => {\n    if (!isObject.value) {\n      return arr && arr.indexOf(target) > -1\n    } else {\n      const valueKey = select.props.valueKey\n      return (\n        arr &&\n        arr.some((item) => {\n          return (\n            getValueByPath(item, valueKey) === getValueByPath(target, valueKey)\n          )\n        })\n      )\n    }\n  }\n\n  const isEqual = (a: unknown, b: unknown) => {\n    if (!isObject.value) {\n      return a === b\n    } else {\n      const { valueKey } = select.props\n      return getValueByPath(a, valueKey) === getValueByPath(b, valueKey)\n    }\n  }\n\n  const hoverItem = () => {\n    if (!props.disabled && !selectGroup.disabled) {\n      select.hoverIndex = select.optionsArray.indexOf(instance)\n    }\n  }\n\n  watch(\n    () => currentLabel.value,\n    () => {\n      if (!props.created && !select.props.remote) select.setSelected()\n    }\n  )\n\n  watch(\n    () => props.value,\n    (val, oldVal) => {\n      const { remote, valueKey } = select.props\n      if (!props.created && !remote) {\n        if (\n          valueKey &&\n          typeof val === 'object' &&\n          typeof oldVal === 'object' &&\n          val[valueKey] === oldVal[valueKey]\n        ) {\n          return\n        }\n        select.setSelected()\n      }\n    }\n  )\n\n  watch(\n    () => selectGroup.disabled,\n    () => {\n      states.groupDisabled = selectGroup.disabled\n    },\n    { immediate: true }\n  )\n\n  const { queryChange } = toRaw(select)\n  watch(queryChange, (changes: Ref<QueryChangeCtx>) => {\n    const { query } = unref(changes)\n\n    const regexp = new RegExp(escapeRegexpString(query), 'i')\n    states.visible = regexp.test(currentLabel.value) || props.created\n    if (!states.visible) {\n      select.filteredOptionsCount--\n    }\n  })\n\n  return {\n    select,\n    currentLabel,\n    currentValue,\n    itemSelected,\n    isDisabled,\n    hoverItem,\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}