{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent, computed } from 'vue';\nimport dayjs from 'dayjs';\nimport localeData from 'dayjs/plugin/localeData';\nimport '../../../hooks/index.mjs';\nimport '../../time-picker/index.mjs';\nimport { dateTableProps, dateTableEmits } from './date-table.mjs';\nimport { rangeArr } from '../../time-picker/src/common/date-utils.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\ndayjs.extend(localeData);\nconst WEEK_DAYS = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\nconst getPrevMonthLastDays = (date, count) => {\n  const lastDay = date.subtract(1, \"month\").endOf(\"month\").date();\n  return rangeArr(count).map((_, index) => lastDay - (count - index - 1));\n};\nconst getMonthDays = date => {\n  const days = date.daysInMonth();\n  return rangeArr(days).map((_, index) => index + 1);\n};\nconst toNestedArr = days => rangeArr(days.length / 7).map(index => {\n  const start = index * 7;\n  return days.slice(start, start + 7);\n});\nvar script = defineComponent({\n  props: dateTableProps,\n  emits: dateTableEmits,\n  setup(props, {\n    emit\n  }) {\n    const {\n      t,\n      lang\n    } = useLocale();\n    const now = dayjs().locale(lang.value);\n    const firstDayOfWeek = now.$locale().weekStart || 0;\n    const isInRange = computed(() => !!props.range && !!props.range.length);\n    const rows = computed(() => {\n      let days = [];\n      if (isInRange.value) {\n        const [start, end] = props.range;\n        const currentMonthRange = rangeArr(end.date() - start.date() + 1).map(index => ({\n          text: start.date() + index,\n          type: \"current\"\n        }));\n        let remaining = currentMonthRange.length % 7;\n        remaining = remaining === 0 ? 0 : 7 - remaining;\n        const nextMonthRange = rangeArr(remaining).map((_, index) => ({\n          text: index + 1,\n          type: \"next\"\n        }));\n        days = currentMonthRange.concat(nextMonthRange);\n      } else {\n        const firstDay = props.date.startOf(\"month\").day() || 7;\n        const prevMonthDays = getPrevMonthLastDays(props.date, firstDay - firstDayOfWeek).map(day => ({\n          text: day,\n          type: \"prev\"\n        }));\n        const currentMonthDays = getMonthDays(props.date).map(day => ({\n          text: day,\n          type: \"current\"\n        }));\n        days = [...prevMonthDays, ...currentMonthDays];\n        const nextMonthDays = rangeArr(42 - days.length).map((_, index) => ({\n          text: index + 1,\n          type: \"next\"\n        }));\n        days = days.concat(nextMonthDays);\n      }\n      return toNestedArr(days);\n    });\n    const weekDays = computed(() => {\n      const start = firstDayOfWeek;\n      if (start === 0) {\n        return WEEK_DAYS.map(_ => t(`el.datepicker.weeks.${_}`));\n      } else {\n        return WEEK_DAYS.slice(start).concat(WEEK_DAYS.slice(0, start)).map(_ => t(`el.datepicker.weeks.${_}`));\n      }\n    });\n    const getFormattedDate = (day, type) => {\n      switch (type) {\n        case \"prev\":\n          return props.date.startOf(\"month\").subtract(1, \"month\").date(day);\n        case \"next\":\n          return props.date.startOf(\"month\").add(1, \"month\").date(day);\n        case \"current\":\n          return props.date.date(day);\n      }\n    };\n    const getCellClass = ({\n      text,\n      type\n    }) => {\n      const classes = [type];\n      if (type === \"current\") {\n        const date = getFormattedDate(text, type);\n        if (date.isSame(props.selectedDay, \"day\")) {\n          classes.push(\"is-selected\");\n        }\n        if (date.isSame(now, \"day\")) {\n          classes.push(\"is-today\");\n        }\n      }\n      return classes;\n    };\n    const handlePickDay = ({\n      text,\n      type\n    }) => {\n      const date = getFormattedDate(text, type);\n      emit(\"pick\", date);\n    };\n    const getSlotData = ({\n      text,\n      type\n    }) => {\n      const day = getFormattedDate(text, type);\n      return {\n        isSelected: day.isSame(props.selectedDay),\n        type: `${type}-month`,\n        day: day.format(\"YYYY-MM-DD\"),\n        date: day.toDate()\n      };\n    };\n    return {\n      isInRange,\n      weekDays,\n      rows,\n      getCellClass,\n      handlePickDay,\n      getSlotData\n    };\n  }\n});\nexport { script as default, getMonthDays, getPrevMonthLastDays };","map":{"version":3,"names":["dayjs","extend","localeData","WEEK_DAYS","getPrevMonthLastDays","date","count","lastDay","subtract","endOf","rangeArr","map","_","index","getMonthDays","days","daysInMonth","toNestedArr","length","start","slice","script","defineComponent","props","dateTableProps","emits","dateTableEmits","setup","emit","t","lang","useLocale","now","locale","value","firstDayOfWeek","$locale","weekStart","isInRange","computed","range","rows","end","currentMonthRange","text","type","remaining","nextMonthRange","concat","firstDay","startOf","day","prevMonthDays","currentMonthDays","nextMonthDays","weekDays","getFormattedDate","add","getCellClass","classes","isSame","selectedDay","push","handlePickDay","getSlotData","isSelected","format","toDate"],"sources":["../../../../../../packages/components/calendar/src/date-table.vue"],"sourcesContent":["<template>\n  <table\n    :class=\"{\n      'el-calendar-table': true,\n      'is-range': isInRange,\n    }\"\n    cellspacing=\"0\"\n    cellpadding=\"0\"\n  >\n    <thead v-if=\"!hideHeader\">\n      <th v-for=\"day in weekDays\" :key=\"day\">{{ day }}</th>\n    </thead>\n\n    <tbody>\n      <tr\n        v-for=\"(row, index) in rows\"\n        :key=\"index\"\n        :class=\"{\n          'el-calendar-table__row': true,\n          'el-calendar-table__row--hide-border': index === 0 && hideHeader,\n        }\"\n      >\n        <td\n          v-for=\"(cell, key) in row\"\n          :key=\"key\"\n          :class=\"getCellClass(cell)\"\n          @click=\"handlePickDay(cell)\"\n        >\n          <div class=\"el-calendar-day\">\n            <slot name=\"dateCell\" :data=\"getSlotData(cell)\">\n              <span>{{ cell.text }}</span>\n            </slot>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport dayjs from 'dayjs'\nimport localeData from 'dayjs/plugin/localeData'\nimport { useLocale } from '@element-plus/hooks'\nimport { rangeArr } from '@element-plus/components/time-picker'\nimport { dateTableProps, dateTableEmits } from './date-table'\nimport type { Dayjs } from 'dayjs'\ndayjs.extend(localeData)\n\ntype CellType = 'next' | 'prev' | 'current'\ninterface Cell {\n  text: number\n  type: CellType\n}\n\nconst WEEK_DAYS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'] as const\n\nexport const getPrevMonthLastDays = (date: Dayjs, count: number) => {\n  const lastDay = date.subtract(1, 'month').endOf('month').date()\n  return rangeArr(count).map((_, index) => lastDay - (count - index - 1))\n}\n\nexport const getMonthDays = (date: Dayjs) => {\n  const days = date.daysInMonth()\n  return rangeArr(days).map((_, index) => index + 1)\n}\n\nconst toNestedArr = (days: Cell[]) =>\n  rangeArr(days.length / 7).map((index) => {\n    const start = index * 7\n    return days.slice(start, start + 7)\n  })\n\nexport default defineComponent({\n  props: dateTableProps,\n  emits: dateTableEmits,\n\n  setup(props, { emit }) {\n    const { t, lang } = useLocale()\n\n    const now = dayjs().locale(lang.value)\n    // todo better way to get Day.js locale object\n    const firstDayOfWeek: number = (now as any).$locale().weekStart || 0\n\n    const isInRange = computed(() => !!props.range && !!props.range.length)\n\n    const rows = computed(() => {\n      let days: Cell[] = []\n      if (isInRange.value) {\n        const [start, end] = props.range!\n        const currentMonthRange: Cell[] = rangeArr(\n          end.date() - start.date() + 1\n        ).map((index) => ({\n          text: start.date() + index,\n          type: 'current',\n        }))\n\n        let remaining = currentMonthRange.length % 7\n        remaining = remaining === 0 ? 0 : 7 - remaining\n        const nextMonthRange: Cell[] = rangeArr(remaining).map((_, index) => ({\n          text: index + 1,\n          type: 'next',\n        }))\n        days = currentMonthRange.concat(nextMonthRange)\n      } else {\n        const firstDay = props.date.startOf('month').day() || 7\n        const prevMonthDays: Cell[] = getPrevMonthLastDays(\n          props.date,\n          firstDay - firstDayOfWeek\n        ).map((day) => ({\n          text: day,\n          type: 'prev',\n        }))\n        const currentMonthDays: Cell[] = getMonthDays(props.date).map(\n          (day) => ({\n            text: day,\n            type: 'current',\n          })\n        )\n        days = [...prevMonthDays, ...currentMonthDays]\n        const nextMonthDays: Cell[] = rangeArr(42 - days.length).map(\n          (_, index) => ({\n            text: index + 1,\n            type: 'next',\n          })\n        )\n        days = days.concat(nextMonthDays)\n      }\n      return toNestedArr(days)\n    })\n\n    const weekDays = computed(() => {\n      const start = firstDayOfWeek\n      if (start === 0) {\n        return WEEK_DAYS.map((_) => t(`el.datepicker.weeks.${_}`))\n      } else {\n        return WEEK_DAYS.slice(start)\n          .concat(WEEK_DAYS.slice(0, start))\n          .map((_) => t(`el.datepicker.weeks.${_}`))\n      }\n    })\n\n    const getFormattedDate = (day: number, type: CellType): Dayjs => {\n      switch (type) {\n        case 'prev':\n          return props.date.startOf('month').subtract(1, 'month').date(day)\n        case 'next':\n          return props.date.startOf('month').add(1, 'month').date(day)\n        case 'current':\n          return props.date.date(day)\n      }\n    }\n\n    const getCellClass = ({ text, type }: Cell) => {\n      const classes: string[] = [type]\n      if (type === 'current') {\n        const date = getFormattedDate(text, type)\n        if (date.isSame(props.selectedDay, 'day')) {\n          classes.push('is-selected')\n        }\n        if (date.isSame(now, 'day')) {\n          classes.push('is-today')\n        }\n      }\n      return classes\n    }\n\n    const handlePickDay = ({ text, type }: Cell) => {\n      const date = getFormattedDate(text, type)\n      emit('pick', date)\n    }\n\n    const getSlotData = ({ text, type }: Cell) => {\n      const day = getFormattedDate(text, type)\n      return {\n        isSelected: day.isSame(props.selectedDay),\n        type: `${type}-month`,\n        day: day.format('YYYY-MM-DD'),\n        date: day.toDate(),\n      }\n    }\n\n    return {\n      isInRange,\n      weekDays,\n      rows,\n      getCellClass,\n      handlePickDay,\n      getSlotData,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}