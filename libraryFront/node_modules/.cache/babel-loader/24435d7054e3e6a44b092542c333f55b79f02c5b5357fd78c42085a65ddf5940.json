{"ast":null,"code":"import { resolveComponent, resolveDirective, openBlock, createElementBlock, normalizeClass, withModifiers, withDirectives, withKeys, createVNode, withCtx, createBlock, createCommentVNode } from 'vue';\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_arrow_down = resolveComponent(\"arrow-down\");\n  const _component_minus = resolveComponent(\"minus\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_arrow_up = resolveComponent(\"arrow-up\");\n  const _component_plus = resolveComponent(\"plus\");\n  const _component_el_input = resolveComponent(\"el-input\");\n  const _directive_repeat_click = resolveDirective(\"repeat-click\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"el-input-number\", _ctx.inputNumberSize ? \"el-input-number--\" + _ctx.inputNumberSize : \"\", {\n      \"is-disabled\": _ctx.inputNumberDisabled\n    }, {\n      \"is-without-controls\": !_ctx.controls\n    }, {\n      \"is-controls-right\": _ctx.controlsAtRight\n    }]),\n    onDragstart: _cache[4] || (_cache[4] = withModifiers(() => {}, [\"prevent\"]))\n  }, [_ctx.controls ? withDirectives((openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: normalizeClass([\"el-input-number__decrease\", {\n      \"is-disabled\": _ctx.minDisabled\n    }]),\n    role: \"button\",\n    onKeydown: _cache[0] || (_cache[0] = withKeys((...args) => _ctx.decrease && _ctx.decrease(...args), [\"enter\"]))\n  }, [createVNode(_component_el_icon, null, {\n    default: withCtx(() => [_ctx.controlsAtRight ? (openBlock(), createBlock(_component_arrow_down, {\n      key: 0\n    })) : (openBlock(), createBlock(_component_minus, {\n      key: 1\n    }))]),\n    _: 1\n  })], 34)), [[_directive_repeat_click, _ctx.decrease]]) : createCommentVNode(\"v-if\", true), _ctx.controls ? withDirectives((openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    class: normalizeClass([\"el-input-number__increase\", {\n      \"is-disabled\": _ctx.maxDisabled\n    }]),\n    role: \"button\",\n    onKeydown: _cache[1] || (_cache[1] = withKeys((...args) => _ctx.increase && _ctx.increase(...args), [\"enter\"]))\n  }, [createVNode(_component_el_icon, null, {\n    default: withCtx(() => [_ctx.controlsAtRight ? (openBlock(), createBlock(_component_arrow_up, {\n      key: 0\n    })) : (openBlock(), createBlock(_component_plus, {\n      key: 1\n    }))]),\n    _: 1\n  })], 34)), [[_directive_repeat_click, _ctx.increase]]) : createCommentVNode(\"v-if\", true), createVNode(_component_el_input, {\n    ref: \"input\",\n    type: \"number\",\n    step: _ctx.step,\n    \"model-value\": _ctx.displayValue,\n    placeholder: _ctx.placeholder,\n    disabled: _ctx.inputNumberDisabled,\n    size: _ctx.inputNumberSize,\n    max: _ctx.max,\n    min: _ctx.min,\n    name: _ctx.name,\n    label: _ctx.label,\n    onKeydown: [withKeys(withModifiers(_ctx.increase, [\"prevent\"]), [\"up\"]), withKeys(withModifiers(_ctx.decrease, [\"prevent\"]), [\"down\"])],\n    onBlur: _cache[2] || (_cache[2] = event => _ctx.$emit(\"blur\", event)),\n    onFocus: _cache[3] || (_cache[3] = event => _ctx.$emit(\"focus\", event)),\n    onInput: _ctx.handleInput,\n    onChange: _ctx.handleInputChange\n  }, null, 8, [\"step\", \"model-value\", \"placeholder\", \"disabled\", \"size\", \"max\", \"min\", \"name\", \"label\", \"onKeydown\", \"onInput\", \"onChange\"])], 34);\n}\nexport { render };","map":{"version":3,"names":["createElementBlock","class","normalizeClass","onDragstart","_cache","withModifiers","_ctx","controls","withDirectives","openBlock","minDisabled","role","onKeydown","withKeys","args","decrease","createVNode","_component_el_icon","controlsAtRight","createBlock","_component_arrow_down","key","_component_minus","maxDisabled","increase","_component_arrow_up","_component_plus","_component_el_input","ref","type","step","displayValue","placeholder","disabled","inputNumberDisabled","size","inputNumberSize","max","min","name","label","onBlur","event","$emit","onFocus","onInput","handleInput","onChange","handleInputChange"],"sources":["../../../../../../packages/components/input-number/src/input-number.vue?vue&type=template&id=dec60af6&lang.js"],"sourcesContent":["<template>\n  <div\n    :class=\"[\n      'el-input-number',\n      inputNumberSize ? 'el-input-number--' + inputNumberSize : '',\n      { 'is-disabled': inputNumberDisabled },\n      { 'is-without-controls': !controls },\n      { 'is-controls-right': controlsAtRight },\n    ]\"\n    @dragstart.prevent\n  >\n    <span\n      v-if=\"controls\"\n      v-repeat-click=\"decrease\"\n      class=\"el-input-number__decrease\"\n      role=\"button\"\n      :class=\"{ 'is-disabled': minDisabled }\"\n      @keydown.enter=\"decrease\"\n    >\n      <el-icon>\n        <arrow-down v-if=\"controlsAtRight\" />\n        <minus v-else />\n      </el-icon>\n    </span>\n    <span\n      v-if=\"controls\"\n      v-repeat-click=\"increase\"\n      class=\"el-input-number__increase\"\n      role=\"button\"\n      :class=\"{ 'is-disabled': maxDisabled }\"\n      @keydown.enter=\"increase\"\n    >\n      <el-icon>\n        <arrow-up v-if=\"controlsAtRight\" />\n        <plus v-else />\n      </el-icon>\n    </span>\n    <el-input\n      ref=\"input\"\n      type=\"number\"\n      :step=\"step\"\n      :model-value=\"displayValue\"\n      :placeholder=\"placeholder\"\n      :disabled=\"inputNumberDisabled\"\n      :size=\"inputNumberSize\"\n      :max=\"max\"\n      :min=\"min\"\n      :name=\"name\"\n      :label=\"label\"\n      @keydown.up.prevent=\"increase\"\n      @keydown.down.prevent=\"decrease\"\n      @blur=\"(event) => $emit('blur', event)\"\n      @focus=\"(event) => $emit('focus', event)\"\n      @input=\"handleInput\"\n      @change=\"handleInputChange\"\n    />\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  reactive,\n  ref,\n  watch,\n  onMounted,\n  onUpdated,\n} from 'vue'\n\nimport { ElIcon } from '@element-plus/components/icon'\nimport { RepeatClick } from '@element-plus/directives'\nimport { useDisabled, useSize } from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport { isNumber } from '@element-plus/utils/util'\nimport { debugWarn } from '@element-plus/utils/error'\nimport { ArrowUp, ArrowDown, Plus, Minus } from '@element-plus/icons-vue'\nimport { inputNumberProps, inputNumberEmits } from './input-number'\n\nimport type { ComponentPublicInstance } from 'vue'\n\ninterface IData {\n  currentValue: number\n  userInput: null | number | string\n}\n\nexport default defineComponent({\n  name: 'ElInputNumber',\n  components: {\n    ElInput,\n    ElIcon,\n    ArrowUp,\n    ArrowDown,\n    Plus,\n    Minus,\n  },\n  directives: {\n    RepeatClick,\n  },\n  props: inputNumberProps,\n  emits: inputNumberEmits,\n  setup(props, { emit }) {\n    const input = ref<ComponentPublicInstance<typeof ElInput>>()\n    const data = reactive<IData>({\n      currentValue: props.modelValue,\n      userInput: null,\n    })\n\n    const minDisabled = computed(() => _decrease(props.modelValue) < props.min)\n    const maxDisabled = computed(() => _increase(props.modelValue) > props.max)\n\n    const numPrecision = computed(() => {\n      const stepPrecision = getPrecision(props.step)\n      if (props.precision !== undefined) {\n        if (stepPrecision > props.precision) {\n          debugWarn(\n            'InputNumber',\n            'precision should not be less than the decimal places of step'\n          )\n        }\n        return props.precision\n      } else {\n        return Math.max(getPrecision(props.modelValue), stepPrecision)\n      }\n    })\n    const controlsAtRight = computed(() => {\n      return props.controls && props.controlsPosition === 'right'\n    })\n\n    const inputNumberSize = useSize()\n    const inputNumberDisabled = useDisabled()\n\n    const displayValue = computed(() => {\n      if (data.userInput !== null) {\n        return data.userInput\n      }\n      let currentValue: number | string = data.currentValue\n      if (isNumber(currentValue)) {\n        if (Number.isNaN(currentValue)) return ''\n        if (props.precision !== undefined) {\n          currentValue = currentValue.toFixed(props.precision)\n        }\n      }\n      return currentValue\n    })\n    const toPrecision = (num: number, pre?: number) => {\n      if (pre === undefined) pre = numPrecision.value\n      return parseFloat(\n        `${Math.round(num * Math.pow(10, pre)) / Math.pow(10, pre)}`\n      )\n    }\n    const getPrecision = (value: number | undefined) => {\n      if (value === undefined) return 0\n      const valueString = value.toString()\n      const dotPosition = valueString.indexOf('.')\n      let precision = 0\n      if (dotPosition !== -1) {\n        precision = valueString.length - dotPosition - 1\n      }\n      return precision\n    }\n    const _increase = (val: number) => {\n      if (!isNumber(val)) return data.currentValue\n      const precisionFactor = Math.pow(10, numPrecision.value)\n      // Solve the accuracy problem of JS decimal calculation by converting the value to integer.\n      val = isNumber(val) ? val : NaN\n      return toPrecision(\n        (precisionFactor * val + precisionFactor * props.step) / precisionFactor\n      )\n    }\n    const _decrease = (val: number) => {\n      if (!isNumber(val)) return data.currentValue\n      const precisionFactor = Math.pow(10, numPrecision.value)\n      // Solve the accuracy problem of JS decimal calculation by converting the value to integer.\n      val = isNumber(val) ? val : NaN\n      return toPrecision(\n        (precisionFactor * val - precisionFactor * props.step) / precisionFactor\n      )\n    }\n    const increase = () => {\n      if (inputNumberDisabled.value || maxDisabled.value) return\n      const value = props.modelValue || 0\n      const newVal = _increase(value)\n      setCurrentValue(newVal)\n    }\n    const decrease = () => {\n      if (inputNumberDisabled.value || minDisabled.value) return\n      const value = props.modelValue || 0\n      const newVal = _decrease(value)\n      setCurrentValue(newVal)\n    }\n    const setCurrentValue = (newVal: number) => {\n      const oldVal = data.currentValue\n      if (typeof newVal === 'number' && props.precision !== undefined) {\n        newVal = toPrecision(newVal, props.precision)\n      }\n      if (newVal !== undefined && newVal >= props.max) newVal = props.max\n      if (newVal !== undefined && newVal <= props.min) newVal = props.min\n      if (oldVal === newVal) return\n      if (!isNumber(newVal)) {\n        newVal = NaN\n      }\n      data.userInput = null\n      emit('update:modelValue', newVal)\n      emit('input', newVal)\n      emit('change', newVal, oldVal)\n      data.currentValue = newVal\n    }\n    const handleInput = (value: string) => {\n      return (data.userInput = value)\n    }\n    const handleInputChange = (value: string) => {\n      const newVal = Number(value)\n      if ((isNumber(newVal) && !Number.isNaN(newVal)) || value === '') {\n        setCurrentValue(newVal)\n      }\n      data.userInput = null\n    }\n\n    const focus = () => {\n      input.value?.focus?.()\n    }\n\n    const blur = () => {\n      input.value?.blur?.()\n    }\n\n    watch(\n      () => props.modelValue,\n      (value) => {\n        let newVal = Number(value)\n        if (newVal !== undefined) {\n          if (isNaN(newVal)) return\n          if (props.stepStrictly) {\n            const stepPrecision = getPrecision(props.step)\n            const precisionFactor = Math.pow(10, stepPrecision)\n            newVal =\n              (Math.round(newVal / props.step) * precisionFactor * props.step) /\n              precisionFactor\n          }\n          if (props.precision !== undefined) {\n            newVal = toPrecision(newVal, props.precision)\n          }\n        }\n        if (newVal !== undefined && newVal > props.max) {\n          newVal = props.max\n          emit('update:modelValue', newVal)\n        }\n        if (newVal !== undefined && newVal < props.min) {\n          newVal = props.min\n          emit('update:modelValue', newVal)\n        }\n        data.currentValue = newVal\n        data.userInput = null\n      },\n      { immediate: true }\n    )\n    onMounted(() => {\n      const innerInput = input.value?.input as HTMLInputElement\n      innerInput.setAttribute('role', 'spinbutton')\n      innerInput.setAttribute('aria-valuemax', String(props.max))\n      innerInput.setAttribute('aria-valuemin', String(props.min))\n      innerInput.setAttribute('aria-valuenow', String(data.currentValue))\n      innerInput.setAttribute(\n        'aria-disabled',\n        String(inputNumberDisabled.value)\n      )\n      if (!isNumber(props.modelValue)) {\n        emit('update:modelValue', Number(props.modelValue))\n      }\n    })\n    onUpdated(() => {\n      const innerInput = input.value?.input\n      innerInput.setAttribute('aria-valuenow', data.currentValue)\n    })\n    return {\n      input,\n      displayValue,\n      handleInput,\n      handleInputChange,\n      controlsAtRight,\n      decrease,\n      increase,\n      inputNumberSize,\n      inputNumberDisabled,\n      maxDisabled,\n      minDisabled,\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;sBACEA,kBAAA;IACGC,KAAA,EAAAC,cAAA,E;;;;;;;IAOAC,WAAA,EAAAC,MAAA,QAAAA,MAAA,MAAAC,aAAA,CAAD,O;MAGQC,IAAA,CAAAC,QAAA,GAAAC,cAAA,EAAAC,SAAA,IADRT,kBAAA;;IAGEC,KAAA,EAAAC,cAAA,EAAM;MAAA,eAEmBI,IAAA,CAAAI;IAAA;IADzBC,IAAA,EAAK;IAEJC,SAAA,EAAAR,MAAA,QAAAA,MAAA,MAAAS,QAAA,KAAAC,IAAA,KAAeR,IAAA,CAAAS,QAAA,IAAAT,IAAA,CAAAS,QAAA,IAAAD,IAAA;MAEhBE,WAAA,CAAAC,kBAAA;qBACE,OAAkBX,IAAA,CAAAY,eAAA,IAAAT,SAAA,IAAlBU,WAAA,CAAAC,qBAAA;MAAAC,GAAA;IAAA,OAAAZ,SAAA,IACAU,WAAA,CAAAG,gBAAA;MAAAD,GAAA;IAAA,I;;wCARcf,IAAA,CAAAS,QAAA,E,sCAYVT,IAAA,CAAAC,QAAA,GAAAC,cAAA,EAAAC,SAAA,IADRT,kBAAA;;IAGEC,KAAA,EAAAC,cAAA,EAAM;MAAA,eAEmBI,IAAA,CAAAiB;IAAA;IADzBZ,IAAA,EAAK;IAEJC,SAAA,EAAAR,MAAA,QAAAA,MAAA,MAAAS,QAAA,KAAAC,IAAA,KAAeR,IAAA,CAAAkB,QAAA,IAAAlB,IAAA,CAAAkB,QAAA,IAAAV,IAAA;MAEhBE,WAAA,CAAAC,kBAAA;qBACE,OAAgBX,IAAA,CAAAY,eAAA,IAAAT,SAAA,IAAhBU,WAAA,CAAAM,mBAAA;MAAAJ,GAAA;IAAA,OAAAZ,SAAA,IACAU,WAAA,CAAAO,eAAA;MAAAL,GAAA;IAAA,I;;wCARcf,IAAA,CAAAkB,QAAA,E,sCAWlBR,WAAA,CAAAW,mBAAA;IACEC,GAAA,EAAI;IACJC,IAAA,EAAK;IACJC,IAAA,EAAMxB,IAAA,CAAAwB,IAAA;IACN,eAAaxB,IAAA,CAAAyB,YAAA;IACbC,WAAA,EAAa1B,IAAA,CAAA0B,WAAA;IACbC,QAAA,EAAU3B,IAAA,CAAA4B,mBAAA;IACVC,IAAA,EAAM7B,IAAA,CAAA8B,eAAA;IACNC,GAAA,EAAK/B,IAAA,CAAA+B,GAAA;IACLC,GAAA,EAAKhC,IAAA,CAAAgC,GAAA;IACLC,IAAA,EAAMjC,IAAA,CAAAiC,IAAA;IACNC,KAAA,EAAOlC,IAAA,CAAAkC,KAAA;IACP5B,SAAA,G,uBAAoBN,IAAA,CAAAkB,QAAA,yB,uBACElB,IAAA,CAAAS,QAAA,0B;IACtB0B,MAAA,EAAArC,MAAA,QAAAA,MAAA,MAAOsC,KAAA,IAAUpC,IAAA,CAAAqC,KAAA,SAAcD,KAAA;IAC/BE,OAAA,EAAAxC,MAAA,QAAAA,MAAA,MAAQsC,KAAA,IAAUpC,IAAA,CAAAqC,KAAA,UAAeD,KAAA;IACjCG,OAAA,EAAOvC,IAAA,CAAAwC,WAAA;IACPC,QAAA,EAAQzC,IAAA,CAAA0C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}