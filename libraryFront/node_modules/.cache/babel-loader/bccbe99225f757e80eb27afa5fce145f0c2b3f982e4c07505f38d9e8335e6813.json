{"ast":null,"code":"import { isString } from '@vue/shared';\nimport { buildProps, definePropType, mutable } from '../../../utils/props.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../utils/constants.mjs';\nimport '../../../hooks/index.mjs';\nimport { useSizeProp } from '../../../hooks/use-common-props/index.mjs';\nconst inputProps = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  modelValue: {\n    type: definePropType(void 0),\n    default: \"\"\n  },\n  type: {\n    type: String,\n    default: \"text\"\n  },\n  resize: {\n    type: String,\n    values: [\"none\", \"both\", \"horizontal\", \"vertical\"]\n  },\n  autosize: {\n    type: definePropType([Boolean, Object]),\n    default: false\n  },\n  autocomplete: {\n    type: String,\n    default: \"off\"\n  },\n  placeholder: {\n    type: String\n  },\n  form: {\n    type: String,\n    default: \"\"\n  },\n  readonly: {\n    type: Boolean,\n    default: false\n  },\n  clearable: {\n    type: Boolean,\n    default: false\n  },\n  showPassword: {\n    type: Boolean,\n    default: false\n  },\n  showWordLimit: {\n    type: Boolean,\n    default: false\n  },\n  suffixIcon: {\n    type: definePropType([String, Object]),\n    default: \"\"\n  },\n  prefixIcon: {\n    type: definePropType([String, Object]),\n    default: \"\"\n  },\n  label: {\n    type: String\n  },\n  tabindex: {\n    type: [Number, String]\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  },\n  inputStyle: {\n    type: definePropType([Object, Array, String]),\n    default: () => mutable({})\n  }\n});\nconst inputEmits = {\n  [UPDATE_MODEL_EVENT]: value => isString(value),\n  input: value => isString(value),\n  change: value => isString(value),\n  focus: evt => evt instanceof FocusEvent,\n  blur: evt => evt instanceof FocusEvent,\n  clear: () => true,\n  mouseleave: evt => evt instanceof MouseEvent,\n  mouseenter: evt => evt instanceof MouseEvent,\n  keydown: evt => evt instanceof KeyboardEvent,\n  compositionstart: evt => evt instanceof CompositionEvent,\n  compositionupdate: evt => evt instanceof CompositionEvent,\n  compositionend: evt => evt instanceof CompositionEvent\n};\nexport { inputEmits, inputProps };","map":{"version":3,"names":["inputProps","buildProps","size","useSizeProp","disabled","Boolean","modelValue","type","definePropType","default","String","resize","values","autosize","Object","autocomplete","placeholder","form","readonly","clearable","showPassword","showWordLimit","suffixIcon","prefixIcon","label","tabindex","Number","validateEvent","inputStyle","Array","mutable","inputEmits","UPDATE_MODEL_EVENT","value","isString","input","change","focus","evt","FocusEvent","blur","clear","mouseleave","MouseEvent","mouseenter","keydown","KeyboardEvent","compositionstart","CompositionEvent","compositionupdate","compositionend"],"sources":["../../../../../../packages/components/input/src/input.ts"],"sourcesContent":["import { isString } from '@vue/shared'\nimport { buildProps, definePropType, mutable } from '@element-plus/utils/props'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/utils/constants'\nimport { useSizeProp } from '@element-plus/hooks'\nimport type { StyleValue } from '@element-plus/utils/types'\nimport type { ExtractPropTypes, Component } from 'vue'\n\ntype AutoSize = { minRows?: number; maxRows?: number } | boolean\n\nexport const inputProps = buildProps({\n  size: useSizeProp,\n  disabled: Boolean,\n  modelValue: {\n    type: definePropType<string | number | null | undefined>(undefined),\n    default: '',\n  },\n  type: {\n    type: String,\n    default: 'text',\n  },\n  resize: {\n    type: String,\n    values: ['none', 'both', 'horizontal', 'vertical'],\n  },\n  autosize: {\n    type: definePropType<AutoSize>([Boolean, Object]),\n    default: false,\n  },\n  autocomplete: {\n    type: String,\n    default: 'off',\n  },\n  placeholder: {\n    type: String,\n  },\n  form: {\n    type: String,\n    default: '',\n  },\n  readonly: {\n    type: Boolean,\n    default: false,\n  },\n  clearable: {\n    type: Boolean,\n    default: false,\n  },\n  showPassword: {\n    type: Boolean,\n    default: false,\n  },\n  showWordLimit: {\n    type: Boolean,\n    default: false,\n  },\n  suffixIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: '',\n  },\n  prefixIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: '',\n  },\n  label: {\n    type: String,\n  },\n  tabindex: {\n    type: [Number, String],\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  inputStyle: {\n    type: definePropType<StyleValue>([Object, Array, String]),\n    default: () => mutable({} as const),\n  },\n} as const)\nexport type InputProps = ExtractPropTypes<typeof inputProps>\n\nexport const inputEmits = {\n  [UPDATE_MODEL_EVENT]: (value: string) => isString(value),\n  input: (value: string) => isString(value),\n  change: (value: string) => isString(value),\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n  mouseleave: (evt: MouseEvent) => evt instanceof MouseEvent,\n  mouseenter: (evt: MouseEvent) => evt instanceof MouseEvent,\n  keydown: (evt: KeyboardEvent) => evt instanceof KeyboardEvent,\n  compositionstart: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionupdate: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionend: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n}\nexport type InputEmits = typeof inputEmits\n"],"mappings":";;;;;MASaA,UAAA,GAAaC,UAAA,CAAW;EACnCC,IAAA,EAAMC,WAAA;EACNC,QAAA,EAAUC,OAAA;EACVC,UAAA,EAAY;IACVC,IAAA,EAAMC,cAAA,CAAmD;IACzDC,OAAA,EAAS;EAAA;EAEXF,IAAA,EAAM;IACJA,IAAA,EAAMG,MAAA;IACND,OAAA,EAAS;EAAA;EAEXE,MAAA,EAAQ;IACNJ,IAAA,EAAMG,MAAA;IACNE,MAAA,EAAQ,CAAC,QAAQ,QAAQ,cAAc;EAAA;EAEzCC,QAAA,EAAU;IACRN,IAAA,EAAMC,cAAA,CAAyB,CAACH,OAAA,EAASS,MAAA;IACzCL,OAAA,EAAS;EAAA;EAEXM,YAAA,EAAc;IACZR,IAAA,EAAMG,MAAA;IACND,OAAA,EAAS;EAAA;EAEXO,WAAA,EAAa;IACXT,IAAA,EAAMG;EAAA;EAERO,IAAA,EAAM;IACJV,IAAA,EAAMG,MAAA;IACND,OAAA,EAAS;EAAA;EAEXS,QAAA,EAAU;IACRX,IAAA,EAAMF,OAAA;IACNI,OAAA,EAAS;EAAA;EAEXU,SAAA,EAAW;IACTZ,IAAA,EAAMF,OAAA;IACNI,OAAA,EAAS;EAAA;EAEXW,YAAA,EAAc;IACZb,IAAA,EAAMF,OAAA;IACNI,OAAA,EAAS;EAAA;EAEXY,aAAA,EAAe;IACbd,IAAA,EAAMF,OAAA;IACNI,OAAA,EAAS;EAAA;EAEXa,UAAA,EAAY;IACVf,IAAA,EAAMC,cAAA,CAAmC,CAACE,MAAA,EAAQI,MAAA;IAClDL,OAAA,EAAS;EAAA;EAEXc,UAAA,EAAY;IACVhB,IAAA,EAAMC,cAAA,CAAmC,CAACE,MAAA,EAAQI,MAAA;IAClDL,OAAA,EAAS;EAAA;EAEXe,KAAA,EAAO;IACLjB,IAAA,EAAMG;EAAA;EAERe,QAAA,EAAU;IACRlB,IAAA,EAAM,CAACmB,MAAA,EAAQhB,MAAA;EAAA;EAEjBiB,aAAA,EAAe;IACbpB,IAAA,EAAMF,OAAA;IACNI,OAAA,EAAS;EAAA;EAEXmB,UAAA,EAAY;IACVrB,IAAA,EAAMC,cAAA,CAA2B,CAACM,MAAA,EAAQe,KAAA,EAAOnB,MAAA;IACjDD,OAAA,EAASA,CAAA,KAAMqB,OAAA,CAAQ;EAAA;AAAA;MAKdC,UAAA,GAAa;EAAA,CACvBC,kBAAA,GAAsBC,KAAA,IAAkBC,QAAA,CAASD,KAAA;EAClDE,KAAA,EAAQF,KAAA,IAAkBC,QAAA,CAASD,KAAA;EACnCG,MAAA,EAASH,KAAA,IAAkBC,QAAA,CAASD,KAAA;EACpCI,KAAA,EAAQC,GAAA,IAAoBA,GAAA,YAAeC,UAAA;EAC3CC,IAAA,EAAOF,GAAA,IAAoBA,GAAA,YAAeC,UAAA;EAC1CE,KAAA,EAAOA,CAAA,KAAM;EACbC,UAAA,EAAaJ,GAAA,IAAoBA,GAAA,YAAeK,UAAA;EAChDC,UAAA,EAAaN,GAAA,IAAoBA,GAAA,YAAeK,UAAA;EAChDE,OAAA,EAAUP,GAAA,IAAuBA,GAAA,YAAeQ,aAAA;EAChDC,gBAAA,EAAmBT,GAAA,IAA0BA,GAAA,YAAeU,gBAAA;EAC5DC,iBAAA,EAAoBX,GAAA,IAA0BA,GAAA,YAAeU,gBAAA;EAC7DE,cAAA,EAAiBZ,GAAA,IAA0BA,GAAA,YAAeU;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}