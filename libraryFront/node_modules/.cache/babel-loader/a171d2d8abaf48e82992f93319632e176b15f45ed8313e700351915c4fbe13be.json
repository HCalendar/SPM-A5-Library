{"ast":null,"code":"import { createElementVNode, resolveComponent, openBlock, createElementBlock, normalizeClass, createCommentVNode, createBlock, withModifiers, withCtx, createVNode, Fragment } from 'vue';\nconst _hoisted_1 = [\"id\", \"aria-haspopup\", \"aria-owns\", \"aria-expanded\", \"tabindex\"];\nconst _hoisted_2 = /* @__PURE__ */createElementVNode(\"span\", null, null, -1);\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_checkbox = resolveComponent(\"el-checkbox\");\n  const _component_el_radio = resolveComponent(\"el-radio\");\n  const _component_check = resolveComponent(\"check\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_node_content = resolveComponent(\"node-content\");\n  const _component_loading = resolveComponent(\"loading\");\n  const _component_arrow_right = resolveComponent(\"arrow-right\");\n  return openBlock(), createElementBlock(\"li\", {\n    id: `${_ctx.menuId}-${_ctx.node.uid}`,\n    role: \"menuitem\",\n    \"aria-haspopup\": !_ctx.isLeaf,\n    \"aria-owns\": _ctx.isLeaf ? null : _ctx.menuId,\n    \"aria-expanded\": _ctx.inExpandingPath,\n    tabindex: _ctx.expandable ? -1 : void 0,\n    class: normalizeClass([\"el-cascader-node\", _ctx.checkStrictly && \"is-selectable\", _ctx.inExpandingPath && \"in-active-path\", _ctx.inCheckedPath && \"in-checked-path\", _ctx.node.checked && \"is-active\", !_ctx.expandable && \"is-disabled\"]),\n    onMouseenter: _cache[2] || (_cache[2] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),\n    onFocus: _cache[3] || (_cache[3] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, [createCommentVNode(\" prefix \"), _ctx.multiple ? (openBlock(), createBlock(_component_el_checkbox, {\n    key: 0,\n    \"model-value\": _ctx.node.checked,\n    indeterminate: _ctx.node.indeterminate,\n    disabled: _ctx.isDisabled,\n    onClick: _cache[0] || (_cache[0] = withModifiers(() => {}, [\"stop\"])),\n    \"onUpdate:modelValue\": _ctx.handleCheck\n  }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onUpdate:modelValue\"])) : _ctx.checkStrictly ? (openBlock(), createBlock(_component_el_radio, {\n    key: 1,\n    \"model-value\": _ctx.checkedNodeId,\n    label: _ctx.node.uid,\n    disabled: _ctx.isDisabled,\n    \"onUpdate:modelValue\": _ctx.handleCheck,\n    onClick: _cache[1] || (_cache[1] = withModifiers(() => {}, [\"stop\"]))\n  }, {\n    default: withCtx(() => [createCommentVNode(\"\\n        Add an empty element to avoid render label,\\n        do not use empty fragment here for https://github.com/vuejs/vue-next/pull/2485\\n      \"), _hoisted_2]),\n    _: 1\n  }, 8, [\"model-value\", \"label\", \"disabled\", \"onUpdate:modelValue\"])) : _ctx.isLeaf && _ctx.node.checked ? (openBlock(), createBlock(_component_el_icon, {\n    key: 2,\n    class: \"el-cascader-node__prefix\"\n  }, {\n    default: withCtx(() => [createVNode(_component_check)]),\n    _: 1\n  })) : createCommentVNode(\"v-if\", true), createCommentVNode(\" content \"), createVNode(_component_node_content), createCommentVNode(\" postfix \"), !_ctx.isLeaf ? (openBlock(), createElementBlock(Fragment, {\n    key: 3\n  }, [_ctx.node.loading ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    class: \"is-loading el-cascader-node__postfix\"\n  }, {\n    default: withCtx(() => [createVNode(_component_loading)]),\n    _: 1\n  })) : (openBlock(), createBlock(_component_el_icon, {\n    key: 1,\n    class: \"arrow-right el-cascader-node__postfix\"\n  }, {\n    default: withCtx(() => [createVNode(_component_arrow_right)]),\n    _: 1\n  }))], 2112)) : createCommentVNode(\"v-if\", true)], 42, _hoisted_1);\n}\nexport { render };","map":{"version":3,"names":["createElementBlock","id","_ctx","menuId","node","uid","role","isLeaf","inExpandingPath","tabindex","expandable","class","normalizeClass","onMouseenter","_cache","args","handleHoverExpand","onFocus","onClick","handleClick","createCommentVNode","multiple","openBlock","createBlock","_component_el_checkbox","checked","indeterminate","disabled","isDisabled","withModifiers","handleCheck","checkStrictly","_component_el_radio","checkedNodeId","label","_hoisted_2","_","_component_el_icon","createVNode","_component_check","_component_node_content","Fragment","key","loading","_component_loading","_component_arrow_right"],"sources":["../../../../../../packages/components/cascader-panel/src/node.vue?vue&type=template&id=18b09cb2&lang.js"],"sourcesContent":["<template>\n  <li\n    :id=\"`${menuId}-${node.uid}`\"\n    role=\"menuitem\"\n    :aria-haspopup=\"!isLeaf\"\n    :aria-owns=\"isLeaf ? null : menuId\"\n    :aria-expanded=\"inExpandingPath\"\n    :tabindex=\"expandable ? -1 : undefined\"\n    :class=\"[\n      'el-cascader-node',\n      checkStrictly && 'is-selectable',\n      inExpandingPath && 'in-active-path',\n      inCheckedPath && 'in-checked-path',\n      node.checked && 'is-active',\n      !expandable && 'is-disabled',\n    ]\"\n    @mouseenter=\"handleHoverExpand\"\n    @focus=\"handleHoverExpand\"\n    @click=\"handleClick\"\n  >\n    <!-- prefix -->\n    <el-checkbox\n      v-if=\"multiple\"\n      :model-value=\"node.checked\"\n      :indeterminate=\"node.indeterminate\"\n      :disabled=\"isDisabled\"\n      @click.stop\n      @update:model-value=\"handleCheck\"\n    />\n    <el-radio\n      v-else-if=\"checkStrictly\"\n      :model-value=\"checkedNodeId\"\n      :label=\"node.uid\"\n      :disabled=\"isDisabled\"\n      @update:model-value=\"handleCheck\"\n      @click.stop\n    >\n      <!--\n        Add an empty element to avoid render label,\n        do not use empty fragment here for https://github.com/vuejs/vue-next/pull/2485\n      -->\n      <span></span>\n    </el-radio>\n    <el-icon\n      v-else-if=\"isLeaf && node.checked\"\n      class=\"el-cascader-node__prefix\"\n    >\n      <check />\n    </el-icon>\n\n    <!-- content -->\n    <node-content />\n\n    <!-- postfix -->\n    <template v-if=\"!isLeaf\">\n      <el-icon v-if=\"node.loading\" class=\"is-loading el-cascader-node__postfix\">\n        <loading />\n      </el-icon>\n      <el-icon v-else class=\"arrow-right el-cascader-node__postfix\">\n        <arrow-right />\n      </el-icon>\n    </template>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject } from 'vue'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport ElRadio from '@element-plus/components/radio'\nimport ElIcon from '@element-plus/components/icon'\nimport { Check, Loading, ArrowRight } from '@element-plus/icons-vue'\nimport NodeContent from './node-content'\nimport { CASCADER_PANEL_INJECTION_KEY } from './types'\nimport type { default as CascaderNode } from './node'\n\nimport type { PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'ElCascaderNode',\n\n  components: {\n    ElCheckbox,\n    ElRadio,\n    NodeContent,\n    ElIcon,\n    Check,\n    Loading,\n    ArrowRight,\n  },\n\n  props: {\n    node: {\n      type: Object as PropType<CascaderNode>,\n      required: true,\n    },\n    menuId: String,\n  },\n\n  emits: ['expand'],\n\n  setup(props, { emit }) {\n    const panel = inject(CASCADER_PANEL_INJECTION_KEY)!\n\n    const isHoverMenu = computed(() => panel.isHoverMenu)\n    const multiple = computed(() => panel.config.multiple)\n    const checkStrictly = computed(() => panel.config.checkStrictly)\n    const checkedNodeId = computed(() => panel.checkedNodes[0]?.uid)\n    const isDisabled = computed(() => props.node.isDisabled)\n    const isLeaf = computed(() => props.node.isLeaf)\n    const expandable = computed(\n      () => (checkStrictly.value && !isLeaf.value) || !isDisabled.value\n    )\n    const inExpandingPath = computed(() => isInPath(panel.expandingNode!))\n    // only useful in check-strictly mode\n    const inCheckedPath = computed(\n      () => checkStrictly.value && panel.checkedNodes.some(isInPath)\n    )\n\n    const isInPath = (node: CascaderNode) => {\n      const { level, uid } = props.node\n      return node?.pathNodes[level - 1]?.uid === uid\n    }\n\n    const doExpand = () => {\n      if (inExpandingPath.value) return\n      panel.expandNode(props.node)\n    }\n\n    const doCheck = (checked: boolean) => {\n      const { node } = props\n      if (checked === node.checked) return\n      panel.handleCheckChange(node, checked)\n    }\n\n    const doLoad = () => {\n      panel.lazyLoad(props.node, () => {\n        if (!isLeaf.value) doExpand()\n      })\n    }\n\n    const handleHoverExpand = (e: Event) => {\n      if (!isHoverMenu.value) return\n      handleExpand()\n      !isLeaf.value && emit('expand', e)\n    }\n\n    const handleExpand = () => {\n      const { node } = props\n      // do not exclude leaf node because the menus expanded might have to reset\n      if (!expandable.value || node.loading) return\n      node.loaded ? doExpand() : doLoad()\n    }\n\n    const handleClick = () => {\n      if (isHoverMenu.value && !isLeaf.value) return\n\n      if (\n        isLeaf.value &&\n        !isDisabled.value &&\n        !checkStrictly.value &&\n        !multiple.value\n      ) {\n        handleCheck(true)\n      } else {\n        handleExpand()\n      }\n    }\n\n    const handleCheck = (checked: boolean) => {\n      if (!props.node.loaded) {\n        doLoad()\n      } else {\n        doCheck(checked)\n        !checkStrictly.value && doExpand()\n      }\n    }\n\n    return {\n      panel,\n      isHoverMenu,\n      multiple,\n      checkStrictly,\n      checkedNodeId,\n      isDisabled,\n      isLeaf,\n      expandable,\n      inExpandingPath,\n      inCheckedPath,\n      handleHoverExpand,\n      handleExpand,\n      handleClick,\n      handleCheck,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;;sBACEA,kBAAA;IACGC,EAAA,KAAOC,IAAA,CAAAC,MAAA,IAAUD,IAAA,CAAAE,IAAA,CAAKC,GAAA;IACvBC,IAAA,EAAK;IACJ,kBAAgBJ,IAAA,CAAAK,MAAA;IAChB,aAAWL,IAAA,CAAAK,MAAA,UAAgBL,IAAA,CAAAC,MAAA;IAC3B,iBAAeD,IAAA,CAAAM,eAAA;IACfC,QAAA,EAAUP,IAAA,CAAAQ,UAAA,QAAkB;IAC5BC,KAAA,EAAAC,cAAA,E;IAQAC,YAAA,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAYb,IAAA,CAAAc,iBAAA,IAAAd,IAAA,CAAAc,iBAAA,IAAAD,IAAA;IACZE,OAAA,EAAAH,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAOb,IAAA,CAAAc,iBAAA,IAAAd,IAAA,CAAAc,iBAAA,IAAAD,IAAA;IACPG,OAAA,EAAAJ,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAOb,IAAA,CAAAiB,WAAA,IAAAjB,IAAA,CAAAiB,WAAA,IAAAJ,IAAA;MAERK,kBAAA,cAEQlB,IAAA,CAAAmB,QAAA,IAAAC,SAAA,IADRC,WAAA,CAAAC,sBAAA;;IAEG,eAAatB,IAAA,CAAAE,IAAA,CAAKqB,OAAA;IAClBC,aAAA,EAAexB,IAAA,CAAAE,IAAA,CAAKsB,aAAA;IACpBC,QAAA,EAAUzB,IAAA,CAAA0B,UAAA;IACVV,OAAA,EAAAJ,MAAA,QAAAA,MAAA,MAAAe,aAAA,CAAD,O;IACC,uBAAoB3B,IAAA,CAAA4B;sFAGV5B,IAAA,CAAA6B,aAAA,IAAAT,SAAA,IADbC,WAAA,CAAAS,mBAAA;;IAEG,eAAa9B,IAAA,CAAA+B,aAAA;IACbC,KAAA,EAAOhC,IAAA,CAAAE,IAAA,CAAKC,GAAA;IACZsB,QAAA,EAAUzB,IAAA,CAAA0B,UAAA;IACV,uBAAoB1B,IAAA,CAAA4B,WAAA;IACpBZ,OAAA,EAAAJ,MAAA,QAAAA,MAAA,MAAAe,aAAA,CAAD,O;;qBAEA,OAAAT,kBAAA,2JAIAe,UAAA;IAAAC,CAAA;wEAGWlC,IAAA,CAAAK,MAAA,IAAUL,IAAA,CAAAE,IAAA,CAAKqB,OAAA,IAAAH,SAAA,IAD5BC,WAAA,CAAAc,kBAAA;;IAEE1B,KAAA,EAAM;EAAA;qBAEN,OAAA2B,WAAA,CAAAC,gBAAA,E;;0CAGFnB,kBAAA,eACAkB,WAAA,CAAAE,uBAAA,GAEApB,kBAAA,e,CACiBlB,IAAA,CAAAK,MAAA,IAAAe,SAAA,IAAjBtB,kBAAA,CAAAyC,QAAA;IAAAC,GAAA;EAAA,IACiBxC,IAAA,CAAAE,IAAA,CAAKuC,OAAA,IAAArB,SAAA,IAApBC,WAAA,CAAAc,kBAAA;;IAA6B1B,KAAA,EAAM;EAAA;qBACjC,OAAA2B,WAAA,CAAAM,kBAAA,E;;sBAEFrB,WAAA,CAAAc,kBAAA;;IAAgB1B,KAAA,EAAM;EAAA;qBACpB,OAAA2B,WAAA,CAAAO,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}