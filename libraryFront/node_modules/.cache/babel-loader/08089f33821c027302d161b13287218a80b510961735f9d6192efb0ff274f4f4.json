{"ast":null,"code":"import { isValidWidthUnit } from '../../../utils/validators.mjs';\nimport { buildProps, definePropType } from '../../../utils/props.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../utils/constants.mjs';\nconst dialogProps = buildProps({\n  appendToBody: {\n    type: Boolean,\n    default: false\n  },\n  beforeClose: {\n    type: definePropType(Function)\n  },\n  destroyOnClose: {\n    type: Boolean,\n    default: false\n  },\n  center: {\n    type: Boolean,\n    default: false\n  },\n  customClass: {\n    type: String,\n    default: \"\"\n  },\n  closeIcon: {\n    type: definePropType([String, Object]),\n    default: \"\"\n  },\n  closeOnClickModal: {\n    type: Boolean,\n    default: true\n  },\n  closeOnPressEscape: {\n    type: Boolean,\n    default: true\n  },\n  fullscreen: {\n    type: Boolean,\n    default: false\n  },\n  lockScroll: {\n    type: Boolean,\n    default: true\n  },\n  modal: {\n    type: Boolean,\n    default: true\n  },\n  showClose: {\n    type: Boolean,\n    default: true\n  },\n  title: {\n    type: String,\n    default: \"\"\n  },\n  openDelay: {\n    type: Number,\n    default: 0\n  },\n  closeDelay: {\n    type: Number,\n    default: 0\n  },\n  top: {\n    type: String\n  },\n  modelValue: {\n    type: Boolean,\n    required: true\n  },\n  modalClass: String,\n  width: {\n    type: [String, Number],\n    validator: isValidWidthUnit\n  },\n  zIndex: {\n    type: Number\n  }\n});\nconst dialogEmits = {\n  open: () => true,\n  opened: () => true,\n  close: () => true,\n  closed: () => true,\n  [UPDATE_MODEL_EVENT]: value => typeof value === \"boolean\"\n};\nexport { dialogEmits, dialogProps };","map":{"version":3,"names":["dialogProps","buildProps","appendToBody","type","Boolean","default","beforeClose","definePropType","Function","destroyOnClose","center","customClass","String","closeIcon","Object","closeOnClickModal","closeOnPressEscape","fullscreen","lockScroll","modal","showClose","title","openDelay","Number","closeDelay","top","modelValue","required","modalClass","width","validator","isValidWidthUnit","zIndex","dialogEmits","open","opened","close","closed","UPDATE_MODEL_EVENT","value"],"sources":["../../../../../../packages/components/dialog/src/dialog.ts"],"sourcesContent":["import { isValidWidthUnit } from '@element-plus/utils/validators'\nimport { buildProps, definePropType } from '@element-plus/utils/props'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/utils/constants'\n\nimport type { ExtractPropTypes, Component } from 'vue'\n\nexport const dialogProps = buildProps({\n  appendToBody: {\n    type: Boolean,\n    default: false,\n  },\n  beforeClose: {\n    type: definePropType<(...args: any[]) => void>(Function),\n  },\n  destroyOnClose: {\n    type: Boolean,\n    default: false,\n  },\n  center: {\n    type: Boolean,\n    default: false,\n  },\n  customClass: {\n    type: String,\n    default: '',\n  },\n  closeIcon: {\n    type: definePropType<string | Component>([String, Object]),\n    default: '',\n  },\n  closeOnClickModal: {\n    type: Boolean,\n    default: true,\n  },\n  closeOnPressEscape: {\n    type: Boolean,\n    default: true,\n  },\n  fullscreen: {\n    type: Boolean,\n    default: false,\n  },\n  lockScroll: {\n    type: Boolean,\n    default: true,\n  },\n  modal: {\n    type: Boolean,\n    default: true,\n  },\n  showClose: {\n    type: Boolean,\n    default: true,\n  },\n  title: {\n    type: String,\n    default: '',\n  },\n  openDelay: {\n    type: Number,\n    default: 0,\n  },\n  closeDelay: {\n    type: Number,\n    default: 0,\n  },\n  top: {\n    type: String,\n  },\n  modelValue: {\n    type: Boolean,\n    required: true,\n  },\n  modalClass: String,\n  width: {\n    type: [String, Number],\n    validator: isValidWidthUnit,\n  },\n  zIndex: {\n    type: Number,\n  },\n} as const)\nexport type DialogProps = ExtractPropTypes<typeof dialogProps>\n\nexport const dialogEmits = {\n  open: () => true,\n  opened: () => true,\n  close: () => true,\n  closed: () => true,\n  [UPDATE_MODEL_EVENT]: (value: boolean) => typeof value === 'boolean',\n}\nexport type DialogEmits = typeof dialogEmits\n"],"mappings":";;;MAMaA,WAAA,GAAcC,UAAA,CAAW;EACpCC,YAAA,EAAc;IACZC,IAAA,EAAMC,OAAA;IACNC,OAAA,EAAS;EAAA;EAEXC,WAAA,EAAa;IACXH,IAAA,EAAMI,cAAA,CAAyCC,QAAA;EAAA;EAEjDC,cAAA,EAAgB;IACdN,IAAA,EAAMC,OAAA;IACNC,OAAA,EAAS;EAAA;EAEXK,MAAA,EAAQ;IACNP,IAAA,EAAMC,OAAA;IACNC,OAAA,EAAS;EAAA;EAEXM,WAAA,EAAa;IACXR,IAAA,EAAMS,MAAA;IACNP,OAAA,EAAS;EAAA;EAEXQ,SAAA,EAAW;IACTV,IAAA,EAAMI,cAAA,CAAmC,CAACK,MAAA,EAAQE,MAAA;IAClDT,OAAA,EAAS;EAAA;EAEXU,iBAAA,EAAmB;IACjBZ,IAAA,EAAMC,OAAA;IACNC,OAAA,EAAS;EAAA;EAEXW,kBAAA,EAAoB;IAClBb,IAAA,EAAMC,OAAA;IACNC,OAAA,EAAS;EAAA;EAEXY,UAAA,EAAY;IACVd,IAAA,EAAMC,OAAA;IACNC,OAAA,EAAS;EAAA;EAEXa,UAAA,EAAY;IACVf,IAAA,EAAMC,OAAA;IACNC,OAAA,EAAS;EAAA;EAEXc,KAAA,EAAO;IACLhB,IAAA,EAAMC,OAAA;IACNC,OAAA,EAAS;EAAA;EAEXe,SAAA,EAAW;IACTjB,IAAA,EAAMC,OAAA;IACNC,OAAA,EAAS;EAAA;EAEXgB,KAAA,EAAO;IACLlB,IAAA,EAAMS,MAAA;IACNP,OAAA,EAAS;EAAA;EAEXiB,SAAA,EAAW;IACTnB,IAAA,EAAMoB,MAAA;IACNlB,OAAA,EAAS;EAAA;EAEXmB,UAAA,EAAY;IACVrB,IAAA,EAAMoB,MAAA;IACNlB,OAAA,EAAS;EAAA;EAEXoB,GAAA,EAAK;IACHtB,IAAA,EAAMS;EAAA;EAERc,UAAA,EAAY;IACVvB,IAAA,EAAMC,OAAA;IACNuB,QAAA,EAAU;EAAA;EAEZC,UAAA,EAAYhB,MAAA;EACZiB,KAAA,EAAO;IACL1B,IAAA,EAAM,CAACS,MAAA,EAAQW,MAAA;IACfO,SAAA,EAAWC;EAAA;EAEbC,MAAA,EAAQ;IACN7B,IAAA,EAAMoB;EAAA;AAAA;MAKGU,WAAA,GAAc;EACzBC,IAAA,EAAMA,CAAA,KAAM;EACZC,MAAA,EAAQA,CAAA,KAAM;EACdC,KAAA,EAAOA,CAAA,KAAM;EACbC,MAAA,EAAQA,CAAA,KAAM;EAAA,CACbC,kBAAA,GAAsBC,KAAA,IAAmB,OAAOA,KAAA,KAAU;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}